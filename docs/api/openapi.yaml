openapi: 3.1.0
info:
  title: Chatter API
  description: '# Advanced AI Chatbot Backend API Platform


    A comprehensive Python-based backend API platform for building advanced AI chatbots,

    implemented with FastAPI, LangChain, LangGraph, Postgres, PGVector, and SQLAlchemy.


    ## Features


    ### Core API Features

    - **RESTful API** with FastAPI and OpenAPI/Swagger documentation

    - **Async-first architecture** with uvloop and hypercorn

    - **Streaming responses** for real-time LLM output

    - **Authentication** with JWT/OAuth2 and session management

    - **Rate limiting** and security validations

    - **Health checks** with `/healthz` and `/readyz` endpoints

    - **API versioning** with modular router architecture


    ### LLM & AI Features

    - **LangChain integration** for LLM orchestration and chain management

    - **LangGraph workflows** for advanced conversation logic

    - **Multiple LLM providers** with pluggable architecture (OpenAI, Anthropic, etc.)

    - **Prompt management** with storage and versioning

    - **Tool calling** with MCP (Model Context Protocol) integration

    - **Multi-turn context** management and conversation history

    - **Profile management** for LLM parameters (temperature, top_k, etc.)


    ### Vector Store & Knowledge Base

    - **Multiple vector stores** (PGVector, Pinecone, Qdrant, ChromaDB)

    - **Document processing** with unstructured data support

    - **Semantic search** and retrieval-augmented generation (RAG)

    - **Chunking strategies** for optimal retrieval

    - **Embedding management** with multiple providers


    ### Data & Analytics

    - **Comprehensive analytics** for conversations, usage, and performance

    - **Cost tracking** and token usage monitoring

    - **User behavior analytics** and system health metrics

    - **Export capabilities** for reporting and analysis


    ## Authentication


    All API endpoints (except health checks and documentation) require authentication.

    Use the `/api/v1/auth/login` endpoint to obtain access tokens.


    ## Rate Limiting


    API requests are rate-limited. Check response headers for current limits.


    ## SDK


    A Python SDK is available for easy integration. See the SDK documentation for
    details.


    ## Support


    - GitHub: https://github.com/lllucius/chatter

    - Documentation: https://github.com/lllucius/chatter#readme

    - Issues: https://github.com/lllucius/chatter/issues'
  version: 0.1.0
  contact:
    name: Chatter API Support
    url: https://github.com/lllucius/chatter
    email: support@chatter.ai
  license:
    name: MIT
    url: https://github.com/lllucius/chatter/blob/main/LICENSE
paths:
  /healthz:
    get:
      tags:
      - Health
      summary: Health Check Endpoint
      description: "Basic health check endpoint.\n\nReturns:\n    Health status"
      operationId: health_check_endpoint_healthz_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /readyz:
    get:
      tags:
      - Health
      summary: Readiness Check
      description: "Readiness check endpoint with database connectivity.\n\nArgs:\n\
        \    session: Database session\n\nReturns:\n    Readiness status with detailed\
        \ checks"
      operationId: readiness_check_readyz_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadinessCheckResponse'
  /live:
    get:
      tags:
      - Health
      summary: Liveness Check
      description: "Liveness check endpoint for Kubernetes (alias for /healthz).\n\
        \nReturns:\n    Health status (same as /healthz)"
      operationId: liveness_check_live_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /metrics:
    get:
      tags:
      - Health
      summary: Get Metrics
      description: "Get application metrics and monitoring data.\n\nReturns:\n   \
        \ Application metrics including performance and health data"
      operationId: get_metrics_metrics_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
  /trace/{correlation_id}:
    get:
      tags:
      - Health
      summary: Get Correlation Trace
      description: "Get trace of all requests for a correlation ID.\n\nArgs:\n   \
        \ correlation_id: The correlation ID to trace\n\nReturns:\n    List of requests\
        \ associated with the correlation ID"
      operationId: get_correlation_trace_trace__correlation_id__get
      parameters:
      - name: correlation_id
        in: path
        required: true
        schema:
          type: string
          title: Correlation Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrelationTraceResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/register:
    post:
      tags:
      - Authentication
      summary: Register
      description: "Register a new user.\n\nArgs:\n    user_data: User registration\
        \ data\n    auth_service: Authentication service\n\nReturns:\n    User data\
        \ and authentication tokens"
      operationId: register_api_v1_auth_register_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/login:
    post:
      tags:
      - Authentication
      summary: Login
      description: "Authenticate user and return tokens.\n\nArgs:\n    user_data:\
        \ User login data\n    auth_service: Authentication service\n\nReturns:\n\
        \    User data and authentication tokens"
      operationId: login_api_v1_auth_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/refresh:
    post:
      tags:
      - Authentication
      summary: Refresh Token
      description: "Refresh access token.\n\nArgs:\n    token_data: Refresh token\
        \ data\n    auth_service: Authentication service\n\nReturns:\n    New access\
        \ and refresh tokens"
      operationId: refresh_token_api_v1_auth_refresh_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefreshResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/me:
    get:
      tags:
      - Authentication
      summary: Get Current User Info
      description: "Get current user information.\n\nArgs:\n    current_user: Current\
        \ authenticated user\n\nReturns:\n    Current user data"
      operationId: get_current_user_info_api_v1_auth_me_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
      security:
      - HTTPBearer: []
    put:
      tags:
      - Authentication
      summary: Update Profile
      description: "Update current user profile.\n\nArgs:\n    user_data: Profile\
        \ update data\n    current_user: Current authenticated user\n    auth_service:\
        \ Authentication service\n\nReturns:\n    Updated user data"
      operationId: update_profile_api_v1_auth_me_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/auth/change-password:
    post:
      tags:
      - Authentication
      summary: Change Password
      description: "Change user password.\n\nArgs:\n    password_data: Password change\
        \ data\n    current_user: Current authenticated user\n    auth_service: Authentication\
        \ service\n\nReturns:\n    Success message"
      operationId: change_password_api_v1_auth_change_password_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChangeResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/auth/api-key:
    post:
      tags:
      - Authentication
      summary: Create Api Key
      description: "Create API key for current user.\n\nArgs:\n    key_data: API key\
        \ creation data\n    current_user: Current authenticated user\n    auth_service:\
        \ Authentication service\n\nReturns:\n    Created API key"
      operationId: create_api_key_api_v1_auth_api_key_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIKeyCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
    delete:
      tags:
      - Authentication
      summary: Revoke Api Key
      description: "Revoke current user's API key.\n\nArgs:\n    current_user: Current\
        \ authenticated user\n    auth_service: Authentication service\n\nReturns:\n\
        \    Success message"
      operationId: revoke_api_key_api_v1_auth_api_key_delete
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyRevokeResponse'
      security:
      - HTTPBearer: []
  /api/v1/auth/api-keys:
    get:
      tags:
      - Authentication
      summary: List Api Keys
      description: "List user's API keys.\n\nArgs:\n    current_user: Current authenticated\
        \ user\n    auth_service: Authentication service\n\nReturns:\n    List of\
        \ API keys"
      operationId: list_api_keys_api_v1_auth_api_keys_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/APIKeyResponse'
                type: array
                title: Response List Api Keys Api V1 Auth Api Keys Get
      security:
      - HTTPBearer: []
  /api/v1/auth/logout:
    post:
      tags:
      - Authentication
      summary: Logout
      description: "Logout and revoke current token.\n\nArgs:\n    current_user: Current\
        \ authenticated user\n    auth_service: Authentication service\n\nReturns:\n\
        \    Success message"
      operationId: logout_api_v1_auth_logout_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
      security:
      - HTTPBearer: []
  /api/v1/auth/password-reset/request:
    post:
      tags:
      - Authentication
      summary: Request Password Reset
      description: "Request password reset.\n\nArgs:\n    email: User email\n    auth_service:\
        \ Authentication service\n\nReturns:\n    Success message"
      operationId: request_password_reset_api_v1_auth_password_reset_request_post
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
          title: Email
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequestResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/password-reset/confirm:
    post:
      tags:
      - Authentication
      summary: Confirm Password Reset
      description: "Confirm password reset.\n\nArgs:\n    token: Reset token\n   \
        \ new_password: New password\n    auth_service: Authentication service\n\n\
        Returns:\n    Success message"
      operationId: confirm_password_reset_api_v1_auth_password_reset_confirm_post
      parameters:
      - name: token
        in: query
        required: true
        schema:
          type: string
          title: Token
      - name: new_password
        in: query
        required: true
        schema:
          type: string
          title: New Password
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirmResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/auth/account:
    delete:
      tags:
      - Authentication
      summary: Deactivate Account
      description: "Deactivate current user account.\n\nArgs:\n    current_user: Current\
        \ authenticated user\n    auth_service: Authentication service\n\nReturns:\n\
        \    Success message"
      operationId: deactivate_account_api_v1_auth_account_delete
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDeactivateResponse'
      security:
      - HTTPBearer: []
  /api/v1/chat/conversations:
    post:
      tags:
      - Chat
      summary: Create Conversation
      description: "Create a new conversation.\n\nArgs:\n    conversation_data: Conversation\
        \ creation data\n    current_user: Current authenticated user\n    chat_service:\
        \ Chat service\n\nReturns:\n    Created conversation"
      operationId: create_conversation_api_v1_chat_conversations_post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - Chat
      summary: List Conversations
      description: 'List user''s conversations.


        Note: Filters may be ignored if not supported by the service implementation.'
      operationId: list_conversations_api_v1_chat_conversations_get
      security:
      - HTTPBearer: []
      parameters:
      - name: query
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Search query
          title: Query
        description: Search query
      - name: status
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/ConversationStatus'
          - type: 'null'
          description: Filter by status
          title: Status
        description: Filter by status
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          description: Maximum number of results
          default: 50
          title: Limit
        description: Maximum number of results
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          description: Number of results to skip
          default: 0
          title: Offset
        description: Number of results to skip
      - name: sort_by
        in: query
        required: false
        schema:
          type: string
          description: Sort field
          default: created_at
          title: Sort By
        description: Sort field
      - name: sort_order
        in: query
        required: false
        schema:
          type: string
          pattern: ^(asc|desc)$
          description: Sort order
          default: desc
          title: Sort Order
        description: Sort order
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationSearchResponse'
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - User lacks permission to access conversations
        '422':
          description: Validation Error
  /api/v1/chat/conversations/{conversation_id}:
    get:
      tags:
      - Chat
      summary: Get Conversation
      description: Get conversation details with messages.
      operationId: get_conversation_api_v1_chat_conversations__conversation_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          title: Conversation Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationWithMessages'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - Chat
      summary: Update Conversation
      description: Update conversation.
      operationId: update_conversation_api_v1_chat_conversations__conversation_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          title: Conversation Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Chat
      summary: Delete Conversation
      description: Delete conversation.
      operationId: delete_conversation_api_v1_chat_conversations__conversation_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          title: Conversation Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationDeleteResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/chat/conversations/{conversation_id}/messages:
    get:
      tags:
      - Chat
      summary: Get Conversation Messages
      description: Get conversation messages.
      operationId: get_conversation_messages_api_v1_chat_conversations__conversation_id__messages_get
      security:
      - HTTPBearer: []
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          title: Conversation Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageResponse'
                title: Response Get Conversation Messages Api V1 Chat Conversations  Conversation
                  Id  Messages Get
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - User lacks permission to access this conversation
        '404':
          description: Not Found - Conversation does not exist
        '422':
          description: Validation Error
    post:
      tags:
      - Chat
      summary: Add Message To Conversation
      description: Add a new message to existing conversation.
      operationId: add_message_to_conversation_api_v1_chat_conversations__conversation_id__messages_post
      security:
      - HTTPBearer: []
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          title: Conversation Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/chat/conversations/{conversation_id}/messages/{message_id}:
    delete:
      tags:
      - Chat
      summary: Delete Message
      description: Delete a message from conversation.
      operationId: delete_message_api_v1_chat_conversations__conversation_id__messages__message_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          title: Conversation Id
      - name: message_id
        in: path
        required: true
        schema:
          type: string
          title: Message Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDeleteResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/chat/chat:
    post:
      tags:
      - Chat
      summary: Chat
      description: 'Single chat endpoint supporting plain, rag, tools, and full workflows.


        - If chat_request.stream is True, returns SSE stream.

        - Otherwise returns ChatResponse JSON.'
      operationId: chat_api_v1_chat_chat_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
        required: true
      responses:
        '200':
          description: Chat response as JSON or streaming SSE when stream=true
          content:
            application/json:
              schema:
                $defs:
                  ConversationResponse:
                    properties:
                      title:
                        type: string
                        title: Title
                        description: Conversation title
                      description:
                        anyOf:
                        - type: string
                        - type: 'null'
                        title: Description
                        description: Conversation description
                      id:
                        type: string
                        title: Id
                        description: Conversation ID
                      user_id:
                        type: string
                        title: User Id
                        description: User ID
                      profile_id:
                        anyOf:
                        - type: string
                        - type: 'null'
                        title: Profile Id
                        description: Profile ID
                      status:
                        $ref: '#/$defs/ConversationStatus'
                        description: Conversation status
                      llm_provider:
                        anyOf:
                        - type: string
                        - type: 'null'
                        title: Llm Provider
                        description: LLM provider
                      llm_model:
                        anyOf:
                        - type: string
                        - type: 'null'
                        title: Llm Model
                        description: LLM model
                      temperature:
                        anyOf:
                        - type: number
                        - type: 'null'
                        title: Temperature
                        description: Temperature setting
                      max_tokens:
                        anyOf:
                        - type: integer
                        - type: 'null'
                        title: Max Tokens
                        description: Max tokens setting
                      enable_retrieval:
                        type: boolean
                        title: Enable Retrieval
                        description: Retrieval enabled
                      message_count:
                        type: integer
                        title: Message Count
                        description: Number of messages
                      total_tokens:
                        type: integer
                        title: Total Tokens
                        description: Total tokens used
                      total_cost:
                        type: number
                        title: Total Cost
                        description: Total cost
                      created_at:
                        type: string
                        format: date-time
                        title: Created At
                        description: Creation timestamp
                      updated_at:
                        type: string
                        format: date-time
                        title: Updated At
                        description: Last update timestamp
                      last_message_at:
                        anyOf:
                        - type: string
                          format: date-time
                        - type: 'null'
                        title: Last Message At
                        description: Last message timestamp
                    type: object
                    required:
                    - title
                    - id
                    - user_id
                    - status
                    - enable_retrieval
                    - message_count
                    - total_tokens
                    - total_cost
                    - created_at
                    - updated_at
                    title: ConversationResponse
                    description: Schema for conversation response.
                  ConversationStatus:
                    type: string
                    enum:
                    - active
                    - archived
                    - deleted
                    title: ConversationStatus
                    description: Enumeration for conversation status.
                  MessageResponse:
                    properties:
                      role:
                        $ref: '#/$defs/MessageRole'
                        description: Message role
                      content:
                        type: string
                        title: Content
                        description: Message content
                      id:
                        type: string
                        title: Id
                        description: Message ID
                      conversation_id:
                        type: string
                        title: Conversation Id
                        description: Conversation ID
                      sequence_number:
                        type: integer
                        title: Sequence Number
                        description: Message sequence number
                      prompt_tokens:
                        anyOf:
                        - type: integer
                        - type: 'null'
                        title: Prompt Tokens
                        description: Prompt tokens used
                      completion_tokens:
                        anyOf:
                        - type: integer
                        - type: 'null'
                        title: Completion Tokens
                        description: Completion tokens used
                      total_tokens:
                        anyOf:
                        - type: integer
                        - type: 'null'
                        title: Total Tokens
                        description: Total tokens used
                      model_used:
                        anyOf:
                        - type: string
                        - type: 'null'
                        title: Model Used
                        description: Model used for generation
                      provider_used:
                        anyOf:
                        - type: string
                        - type: 'null'
                        title: Provider Used
                        description: Provider used
                      response_time_ms:
                        anyOf:
                        - type: integer
                        - type: 'null'
                        title: Response Time Ms
                        description: Response time in milliseconds
                      cost:
                        anyOf:
                        - type: number
                        - type: 'null'
                        title: Cost
                        description: Cost of the message
                      created_at:
                        type: string
                        format: date-time
                        title: Created At
                        description: Creation timestamp
                    type: object
                    required:
                    - role
                    - content
                    - id
                    - conversation_id
                    - sequence_number
                    - created_at
                    title: MessageResponse
                    description: Schema for message response.
                  MessageRole:
                    type: string
                    enum:
                    - user
                    - assistant
                    - system
                    - tool
                    title: MessageRole
                    description: Enumeration for message roles.
                properties:
                  conversation_id:
                    type: string
                    title: Conversation Id
                    description: Conversation ID
                  message:
                    $ref: '#/$defs/MessageResponse'
                    description: Assistant response message
                  conversation:
                    $ref: '#/$defs/ConversationResponse'
                    description: Updated conversation
                type: object
                required:
                - conversation_id
                - message
                - conversation
                title: ChatResponse
                description: Schema for chat response.
            text/event-stream:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/chat/tools/available:
    get:
      tags:
      - Chat
      summary: Get Available Tools
      description: Get list of available MCP tools.
      operationId: get_available_tools_api_v1_chat_tools_available_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableToolsResponse'
      security:
      - HTTPBearer: []
  /api/v1/chat/templates:
    get:
      tags:
      - Chat
      summary: Get Workflow Templates
      description: Get available workflow templates.
      operationId: get_workflow_templates_api_v1_chat_templates_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowTemplatesResponse'
      security:
      - HTTPBearer: []
  /api/v1/chat/template/{template_name}:
    post:
      tags:
      - Chat
      summary: Chat With Template
      description: Chat using a specific workflow template.
      operationId: chat_with_template_api_v1_chat_template__template_name__post
      security:
      - HTTPBearer: []
      parameters:
      - name: template_name
        in: path
        required: true
        schema:
          type: string
          title: Template Name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/chat/performance/stats:
    get:
      tags:
      - Chat
      summary: Get Performance Stats
      description: Get workflow performance statistics.
      operationId: get_performance_stats_api_v1_chat_performance_stats_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceStatsResponse'
      security:
      - HTTPBearer: []
  /api/v1/chat/mcp/status:
    get:
      tags:
      - Chat
      summary: Get Mcp Status
      description: Get MCP service status.
      operationId: get_mcp_status_api_v1_chat_mcp_status_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/McpStatusResponse'
      security:
      - HTTPBearer: []
  /api/v1/documents/upload:
    post:
      tags:
      - Documents
      summary: Upload Document
      description: "Upload a document.\n\nArgs:\n    file: Document file to upload\n\
        \    title: Document title\n    description: Document description\n    tags:\
        \ Document tags (JSON array string)\n    chunk_size: Text chunk size for processing\n\
        \    chunk_overlap: Text chunk overlap\n    is_public: Whether document is\
        \ public\n    current_user: Current authenticated user\n    document_service:\
        \ Document service\n\nReturns:\n    Created document information"
      operationId: upload_document_api_v1_documents_upload_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_document_api_v1_documents_upload_post'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/documents:
    get:
      tags:
      - Documents
      summary: List Documents
      description: "List user's documents.\n\nArgs:\n    status: Filter by document\
        \ status\n    document_type: Filter by document type\n    tags: Filter by\
        \ tags\n    owner_id: Filter by owner (admin only)\n    limit: Maximum number\
        \ of results\n    offset: Number of results to skip\n    sort_by: Sort field\n\
        \    sort_order: Sort order (asc/desc)\n    current_user: Current authenticated\
        \ user\n    document_service: Document service\n\nReturns:\n    List of documents\
        \ with pagination info"
      operationId: list_documents_api_v1_documents_get
      security:
      - HTTPBearer: []
      parameters:
      - name: status
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/DocumentStatus'
          - type: 'null'
          description: Filter by status
          title: Status
        description: Filter by status
      - name: document_type
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/DocumentType'
          - type: 'null'
          description: Filter by document type
          title: Document Type
        description: Filter by document type
      - name: tags
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          description: Filter by tags
          title: Tags
        description: Filter by tags
      - name: owner_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by owner (admin only)
          title: Owner Id
        description: Filter by owner (admin only)
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          description: Maximum number of results
          default: 50
          title: Limit
        description: Maximum number of results
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          description: Number of results to skip
          default: 0
          title: Offset
        description: Number of results to skip
      - name: sort_by
        in: query
        required: false
        schema:
          type: string
          description: Sort field
          default: created_at
          title: Sort By
        description: Sort field
      - name: sort_order
        in: query
        required: false
        schema:
          type: string
          pattern: ^(asc|desc)$
          description: Sort order
          default: desc
          title: Sort Order
        description: Sort order
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentListResponse'
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - User lacks permission to access documents
        '422':
          description: Validation Error
  /api/v1/documents/{document_id}:
    get:
      tags:
      - Documents
      summary: Get Document
      description: "Get document details.\n\nArgs:\n    document_id: Document ID\n\
        \    current_user: Current authenticated user\n    document_service: Document\
        \ service\n\nReturns:\n    Document information"
      operationId: get_document_api_v1_documents__document_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          title: Document Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
        '401':
          description: Unauthorized - Invalid or missing authentication token
        '403':
          description: Forbidden - User lacks permission to access this document
        '404':
          description: Not Found - Document does not exist
        '422':
          description: Validation Error
    put:
      tags:
      - Documents
      summary: Update Document
      description: "Update document metadata.\n\nArgs:\n    document_id: Document\
        \ ID\n    update_data: Update data\n    current_user: Current authenticated\
        \ user\n    document_service: Document service\n\nReturns:\n    Updated document\
        \ information"
      operationId: update_document_api_v1_documents__document_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          title: Document Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Documents
      summary: Delete Document
      description: "Delete document.\n\nArgs:\n    document_id: Document ID\n    request:\
        \ Delete request parameters\n    current_user: Current authenticated user\n\
        \    document_service: Document service\n\nReturns:\n    Success message"
      operationId: delete_document_api_v1_documents__document_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          title: Document Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDeleteResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/documents/search:
    post:
      tags:
      - Documents
      summary: Search Documents
      description: "Search documents using vector similarity.\n\nArgs:\n    search_request:\
        \ Search request\n    current_user: Current authenticated user\n    document_service:\
        \ Document service\n\nReturns:\n    Search results"
      operationId: search_documents_api_v1_documents_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSearchRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSearchResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/documents/{document_id}/chunks:
    get:
      tags:
      - Documents
      summary: Get Document Chunks
      description: "Get document chunks.\n\nArgs:\n    document_id: Document ID\n\
        \    limit: Maximum number of results\n    offset: Number of results to skip\n\
        \    current_user: Current authenticated user\n    document_service: Document\
        \ service\n\nReturns:\n    List of document chunks with pagination"
      operationId: get_document_chunks_api_v1_documents__document_id__chunks_get
      security:
      - HTTPBearer: []
      parameters:
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          title: Document Id
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          description: Maximum number of results
          default: 50
          title: Limit
        description: Maximum number of results
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          description: Number of results to skip
          default: 0
          title: Offset
        description: Number of results to skip
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentChunksResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/documents/{document_id}/process:
    post:
      tags:
      - Documents
      summary: Process Document
      description: "Trigger document processing.\n\nArgs:\n    document_id: Document\
        \ ID\n    processing_request: Processing request\n    current_user: Current\
        \ authenticated user\n    document_service: Document service\n\nReturns:\n\
        \    Processing status"
      operationId: process_document_api_v1_documents__document_id__process_post
      security:
      - HTTPBearer: []
      parameters:
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          title: Document Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentProcessingRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentProcessingResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/documents/stats/overview:
    get:
      tags:
      - Documents
      summary: Get Document Stats
      description: "Get document statistics.\n\nArgs:\n    current_user: Current authenticated\
        \ user\n    document_service: Document service\n\nReturns:\n    Document statistics"
      operationId: get_document_stats_api_v1_documents_stats_overview_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentStatsResponse'
      security:
      - HTTPBearer: []
  /api/v1/documents/{document_id}/download:
    get:
      tags:
      - Documents
      summary: Download Document
      description: "Download original document file.\n\nArgs:\n    document_id: Document\
        \ ID\n    current_user: Current authenticated user\n    document_service:\
        \ Document service\n\nReturns:\n    File download response"
      operationId: download_document_api_v1_documents__document_id__download_get
      security:
      - HTTPBearer: []
      parameters:
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          title: Document Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/documents/{document_id}/reprocess:
    post:
      tags:
      - Documents
      summary: Reprocess Document
      description: "Reprocess an existing document.\n\nArgs:\n    document_id: Document\
        \ ID\n    current_user: Current authenticated user\n    document_service:\
        \ Document service\n\nReturns:\n    Processing status"
      operationId: reprocess_document_api_v1_documents__document_id__reprocess_post
      security:
      - HTTPBearer: []
      parameters:
      - name: document_id
        in: path
        required: true
        schema:
          type: string
          title: Document Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentProcessingResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/profiles/:
    post:
      tags:
      - Profiles
      summary: Create Profile
      description: "Create a new LLM profile.\n\nArgs:\n    profile_data: Profile\
        \ creation data\n    current_user: Current authenticated user\n    profile_service:\
        \ Profile service\n\nReturns:\n    Created profile information"
      operationId: create_profile_api_v1_profiles__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/profiles:
    get:
      tags:
      - Profiles
      summary: List Profiles
      description: "List user's profiles.\n\nArgs:\n    profile_type: Filter by profile\
        \ type\n    llm_provider: Filter by LLM provider\n    tags: Filter by tags\n\
        \    is_public: Filter by public status\n    limit: Maximum number of results\n\
        \    offset: Number of results to skip\n    sort_by: Sort field\n    sort_order:\
        \ Sort order (asc/desc)\n    current_user: Current authenticated user\n  \
        \  profile_service: Profile service\n\nReturns:\n    List of profiles with\
        \ pagination info"
      operationId: list_profiles_api_v1_profiles_get
      security:
      - HTTPBearer: []
      parameters:
      - name: profile_type
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/ProfileType'
          - type: 'null'
          description: Filter by profile type
          title: Profile Type
        description: Filter by profile type
      - name: llm_provider
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by LLM provider
          title: Llm Provider
        description: Filter by LLM provider
      - name: tags
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          description: Filter by tags
          title: Tags
        description: Filter by tags
      - name: is_public
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Filter by public status
          title: Is Public
        description: Filter by public status
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          description: Maximum number of results
          default: 50
          title: Limit
        description: Maximum number of results
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          description: Number of results to skip
          default: 0
          title: Offset
        description: Number of results to skip
      - name: sort_by
        in: query
        required: false
        schema:
          type: string
          description: Sort field
          default: created_at
          title: Sort By
        description: Sort field
      - name: sort_order
        in: query
        required: false
        schema:
          type: string
          pattern: ^(asc|desc)$
          description: Sort order
          default: desc
          title: Sort Order
        description: Sort order
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/profiles/{profile_id}:
    get:
      tags:
      - Profiles
      summary: Get Profile
      description: "Get profile details.\n\nArgs:\n    profile_id: Profile ID\n  \
        \  current_user: Current authenticated user\n    profile_service: Profile\
        \ service\n\nReturns:\n    Profile information"
      operationId: get_profile_api_v1_profiles__profile_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: profile_id
        in: path
        required: true
        schema:
          type: string
          title: Profile Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - Profiles
      summary: Update Profile
      description: "Update profile.\n\nArgs:\n    profile_id: Profile ID\n    update_data:\
        \ Update data\n    current_user: Current authenticated user\n    profile_service:\
        \ Profile service\n\nReturns:\n    Updated profile information"
      operationId: update_profile_api_v1_profiles__profile_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: profile_id
        in: path
        required: true
        schema:
          type: string
          title: Profile Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Profiles
      summary: Delete Profile
      description: "Delete profile.\n\nArgs:\n    profile_id: Profile ID\n    request:\
        \ Delete request parameters\n    current_user: Current authenticated user\n\
        \    profile_service: Profile service\n\nReturns:\n    Success message"
      operationId: delete_profile_api_v1_profiles__profile_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: profile_id
        in: path
        required: true
        schema:
          type: string
          title: Profile Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDeleteResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/profiles/{profile_id}/test:
    post:
      tags:
      - Profiles
      summary: Test Profile
      description: "Test profile with a sample message.\n\nArgs:\n    profile_id:\
        \ Profile ID\n    test_request: Test request\n    current_user: Current authenticated\
        \ user\n    profile_service: Profile service\n\nReturns:\n    Test results"
      operationId: test_profile_api_v1_profiles__profile_id__test_post
      security:
      - HTTPBearer: []
      parameters:
      - name: profile_id
        in: path
        required: true
        schema:
          type: string
          title: Profile Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileTestRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileTestResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/profiles/{profile_id}/clone:
    post:
      tags:
      - Profiles
      summary: Clone Profile
      description: "Clone an existing profile.\n\nArgs:\n    profile_id: Source profile\
        \ ID\n    clone_request: Clone request\n    current_user: Current authenticated\
        \ user\n    profile_service: Profile service\n\nReturns:\n    Cloned profile\
        \ information"
      operationId: clone_profile_api_v1_profiles__profile_id__clone_post
      security:
      - HTTPBearer: []
      parameters:
      - name: profile_id
        in: path
        required: true
        schema:
          type: string
          title: Profile Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileCloneRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/profiles/stats/overview:
    get:
      tags:
      - Profiles
      summary: Get Profile Stats
      description: "Get profile statistics.\n\nArgs:\n    current_user: Current authenticated\
        \ user\n    profile_service: Profile service\n\nReturns:\n    Profile statistics"
      operationId: get_profile_stats_api_v1_profiles_stats_overview_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileStatsResponse'
      security:
      - HTTPBearer: []
  /api/v1/profiles/providers/available:
    get:
      tags:
      - Profiles
      summary: Get Available Providers
      description: "Get available LLM providers.\n\nArgs:\n    request: Providers\
        \ request parameters\n    current_user: Current authenticated user\n    profile_service:\
        \ Profile service\n\nReturns:\n    Available providers information"
      operationId: get_available_providers_api_v1_profiles_providers_available_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableProvidersResponse'
      security:
      - HTTPBearer: []
  /api/v1/prompts/:
    post:
      tags:
      - Prompts
      summary: Create Prompt
      description: "Create a new prompt.\n\nArgs:\n    prompt_data: Prompt creation\
        \ data\n    current_user: Current authenticated user\n    prompt_service:\
        \ Prompt service\n\nReturns:\n    Created prompt information"
      operationId: create_prompt_api_v1_prompts__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/prompts:
    get:
      tags:
      - Prompts
      summary: List Prompts
      description: "List user's prompts.\n\nArgs:\n    prompt_type: Filter by prompt\
        \ type\n    category: Filter by category\n    tags: Filter by tags\n    is_public:\
        \ Filter by public status\n    limit: Maximum number of results\n    offset:\
        \ Number of results to skip\n    sort_by: Sort field\n    sort_order: Sort\
        \ order (asc/desc)\n    current_user: Current authenticated user\n    prompt_service:\
        \ Prompt service\n\nReturns:\n    List of prompts with pagination info"
      operationId: list_prompts_api_v1_prompts_get
      security:
      - HTTPBearer: []
      parameters:
      - name: prompt_type
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/PromptType'
          - type: 'null'
          description: Filter by prompt type
          title: Prompt Type
        description: Filter by prompt type
      - name: category
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/PromptCategory'
          - type: 'null'
          description: Filter by category
          title: Category
        description: Filter by category
      - name: tags
        in: query
        required: false
        schema:
          anyOf:
          - type: array
            items:
              type: string
          - type: 'null'
          description: Filter by tags
          title: Tags
        description: Filter by tags
      - name: is_public
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Filter by public status
          title: Is Public
        description: Filter by public status
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          description: Maximum number of results
          default: 50
          title: Limit
        description: Maximum number of results
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          description: Number of results to skip
          default: 0
          title: Offset
        description: Number of results to skip
      - name: sort_by
        in: query
        required: false
        schema:
          type: string
          description: Sort field
          default: created_at
          title: Sort By
        description: Sort field
      - name: sort_order
        in: query
        required: false
        schema:
          type: string
          pattern: ^(asc|desc)$
          description: Sort order
          default: desc
          title: Sort Order
        description: Sort order
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/prompts/{prompt_id}:
    get:
      tags:
      - Prompts
      summary: Get Prompt
      description: "Get prompt details.\n\nArgs:\n    prompt_id: Prompt ID\n    request:\
        \ Get request parameters\n    current_user: Current authenticated user\n \
        \   prompt_service: Prompt service\n\nReturns:\n    Prompt information"
      operationId: get_prompt_api_v1_prompts__prompt_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: prompt_id
        in: path
        required: true
        schema:
          type: string
          title: Prompt Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - Prompts
      summary: Update Prompt
      description: "Update prompt.\n\nArgs:\n    prompt_id: Prompt ID\n    update_data:\
        \ Update data\n    current_user: Current authenticated user\n    prompt_service:\
        \ Prompt service\n\nReturns:\n    Updated prompt information"
      operationId: update_prompt_api_v1_prompts__prompt_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: prompt_id
        in: path
        required: true
        schema:
          type: string
          title: Prompt Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Prompts
      summary: Delete Prompt
      description: "Delete prompt.\n\nArgs:\n    prompt_id: Prompt ID\n    request:\
        \ Delete request parameters\n    current_user: Current authenticated user\n\
        \    prompt_service: Prompt service\n\nReturns:\n    Success message"
      operationId: delete_prompt_api_v1_prompts__prompt_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: prompt_id
        in: path
        required: true
        schema:
          type: string
          title: Prompt Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptDeleteResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/prompts/{prompt_id}/test:
    post:
      tags:
      - Prompts
      summary: Test Prompt
      description: "Test prompt with given variables.\n\nArgs:\n    prompt_id: Prompt\
        \ ID\n    test_request: Test request\n    current_user: Current authenticated\
        \ user\n    prompt_service: Prompt service\n\nReturns:\n    Test results"
      operationId: test_prompt_api_v1_prompts__prompt_id__test_post
      security:
      - HTTPBearer: []
      parameters:
      - name: prompt_id
        in: path
        required: true
        schema:
          type: string
          title: Prompt Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptTestRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptTestResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/prompts/{prompt_id}/clone:
    post:
      tags:
      - Prompts
      summary: Clone Prompt
      description: "Clone an existing prompt.\n\nArgs:\n    prompt_id: Source prompt\
        \ ID\n    clone_request: Clone request\n    current_user: Current authenticated\
        \ user\n    prompt_service: Prompt service\n\nReturns:\n    Cloned prompt\
        \ information"
      operationId: clone_prompt_api_v1_prompts__prompt_id__clone_post
      security:
      - HTTPBearer: []
      parameters:
      - name: prompt_id
        in: path
        required: true
        schema:
          type: string
          title: Prompt Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptCloneRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/prompts/stats/overview:
    get:
      tags:
      - Prompts
      summary: Get Prompt Stats
      description: "Get prompt statistics.\n\nArgs:\n    request: Stats request parameters\n\
        \    current_user: Current authenticated user\n    prompt_service: Prompt\
        \ service\n\nReturns:\n    Prompt statistics"
      operationId: get_prompt_stats_api_v1_prompts_stats_overview_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptStatsResponse'
      security:
      - HTTPBearer: []
  /api/v1/analytics/conversations:
    get:
      tags:
      - Analytics
      summary: Get Conversation Stats
      description: "Get conversation statistics.\n\nArgs:\n    start_date: Start date\
        \ for analytics\n    end_date: End date for analytics\n    period: Predefined\
        \ period\n    current_user: Current authenticated user\n    analytics_service:\
        \ Analytics service\n\nReturns:\n    Conversation statistics"
      operationId: get_conversation_stats_api_v1_analytics_conversations_get
      security:
      - HTTPBearer: []
      parameters:
      - name: start_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: Start date for analytics
          title: Start Date
        description: Start date for analytics
      - name: end_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: End date for analytics
          title: End Date
        description: End date for analytics
      - name: period
        in: query
        required: false
        schema:
          type: string
          description: Predefined period (1h, 24h, 7d, 30d, 90d)
          default: 7d
          title: Period
        description: Predefined period (1h, 24h, 7d, 30d, 90d)
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationStatsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/analytics/usage:
    get:
      tags:
      - Analytics
      summary: Get Usage Metrics
      description: "Get usage metrics.\n\nArgs:\n    start_date: Start date for analytics\n\
        \    end_date: End date for analytics\n    period: Predefined period\n   \
        \ current_user: Current authenticated user\n    analytics_service: Analytics\
        \ service\n\nReturns:\n    Usage metrics"
      operationId: get_usage_metrics_api_v1_analytics_usage_get
      security:
      - HTTPBearer: []
      parameters:
      - name: start_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: Start date for analytics
          title: Start Date
        description: Start date for analytics
      - name: end_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: End date for analytics
          title: End Date
        description: End date for analytics
      - name: period
        in: query
        required: false
        schema:
          type: string
          description: Predefined period (1h, 24h, 7d, 30d, 90d)
          default: 7d
          title: Period
        description: Predefined period (1h, 24h, 7d, 30d, 90d)
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageMetricsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/analytics/performance:
    get:
      tags:
      - Analytics
      summary: Get Performance Metrics
      description: "Get performance metrics.\n\nArgs:\n    request: Performance metrics\
        \ request parameters\n    current_user: Current authenticated user\n    analytics_service:\
        \ Analytics service\n\nReturns:\n    Performance metrics"
      operationId: get_performance_metrics_api_v1_analytics_performance_get
      security:
      - HTTPBearer: []
      parameters:
      - name: start_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: Start date for analytics
          title: Start Date
        description: Start date for analytics
      - name: end_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: End date for analytics
          title: End Date
        description: End date for analytics
      - name: period
        in: query
        required: false
        schema:
          type: string
          description: Predefined period (1h, 24h, 7d, 30d, 90d)
          default: 7d
          title: Period
        description: Predefined period (1h, 24h, 7d, 30d, 90d)
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceMetricsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/analytics/documents:
    get:
      tags:
      - Analytics
      summary: Get Document Analytics
      description: "Get document analytics.\n\nArgs:\n    request: Document analytics\
        \ request parameters\n    current_user: Current authenticated user\n    analytics_service:\
        \ Analytics service\n\nReturns:\n    Document analytics"
      operationId: get_document_analytics_api_v1_analytics_documents_get
      security:
      - HTTPBearer: []
      parameters:
      - name: start_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: Start date for analytics
          title: Start Date
        description: Start date for analytics
      - name: end_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: End date for analytics
          title: End Date
        description: End date for analytics
      - name: period
        in: query
        required: false
        schema:
          type: string
          description: Predefined period (1h, 24h, 7d, 30d, 90d)
          default: 7d
          title: Period
        description: Predefined period (1h, 24h, 7d, 30d, 90d)
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentAnalyticsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/analytics/system:
    get:
      tags:
      - Analytics
      summary: Get System Analytics
      description: "Get system analytics.\n\nArgs:\n    request: System analytics\
        \ request parameters\n    current_user: Current authenticated user\n    analytics_service:\
        \ Analytics service\n\nReturns:\n    System analytics"
      operationId: get_system_analytics_api_v1_analytics_system_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemAnalyticsResponse'
      security:
      - HTTPBearer: []
  /api/v1/analytics/dashboard:
    get:
      tags:
      - Analytics
      summary: Get Dashboard
      description: "Get comprehensive dashboard data.\n\nArgs:\n    request: Dashboard\
        \ request parameters\n    current_user: Current authenticated user\n    analytics_service:\
        \ Analytics service\n\nReturns:\n    Complete dashboard data"
      operationId: get_dashboard_api_v1_analytics_dashboard_get
      security:
      - HTTPBearer: []
      parameters:
      - name: start_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: Start date for analytics
          title: Start Date
        description: Start date for analytics
      - name: end_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: End date for analytics
          title: End Date
        description: End date for analytics
      - name: period
        in: query
        required: false
        schema:
          type: string
          description: Predefined period (1h, 24h, 7d, 30d, 90d)
          default: 7d
          title: Period
        description: Predefined period (1h, 24h, 7d, 30d, 90d)
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/analytics/toolservers:
    get:
      tags:
      - Analytics
      summary: Get Tool Server Analytics
      description: "Get tool server analytics.\n\nArgs:\n    request: Tool server\
        \ analytics request parameters\n    current_user: Current authenticated user\n\
        \    analytics_service: Analytics service\n\nReturns:\n    Tool server analytics\
        \ data"
      operationId: get_tool_server_analytics_api_v1_analytics_toolservers_get
      security:
      - HTTPBearer: []
      parameters:
      - name: start_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: Start date for analytics
          title: Start Date
        description: Start date for analytics
      - name: end_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: End date for analytics
          title: End Date
        description: End date for analytics
      - name: period
        in: query
        required: false
        schema:
          type: string
          description: Predefined period (1h, 24h, 7d, 30d, 90d)
          default: 7d
          title: Period
        description: Predefined period (1h, 24h, 7d, 30d, 90d)
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Get Tool Server Analytics Api V1 Analytics Toolservers
                  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/analytics/users/{user_id}:
    get:
      tags:
      - Analytics
      summary: Get User Analytics
      description: "Get per-user analytics.\n\nArgs:\n    user_id: User ID\n    start_date:\
        \ Start date for analytics\n    end_date: End date for analytics\n    period:\
        \ Predefined period\n    current_user: Current authenticated user\n    analytics_service:\
        \ Analytics service\n\nReturns:\n    User-specific analytics"
      operationId: get_user_analytics_api_v1_analytics_users__user_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
          title: User Id
      - name: start_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: Start date for analytics
          title: Start Date
        description: Start date for analytics
      - name: end_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: End date for analytics
          title: End Date
        description: End date for analytics
      - name: period
        in: query
        required: false
        schema:
          type: string
          description: Predefined period (1h, 24h, 7d, 30d, 90d)
          default: 7d
          title: Period
        description: Predefined period (1h, 24h, 7d, 30d, 90d)
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Get User Analytics Api V1 Analytics Users  User Id  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/analytics/export:
    post:
      tags:
      - Analytics
      summary: Export Analytics
      description: "Export analytics reports.\n\nArgs:\n    format: Export format\n\
        \    metrics: List of metrics to export\n    start_date: Start date for analytics\n\
        \    end_date: End date for analytics\n    period: Predefined period\n   \
        \ current_user: Current authenticated user\n    analytics_service: Analytics\
        \ service\n\nReturns:\n    Exported analytics report"
      operationId: export_analytics_api_v1_analytics_export_post
      security:
      - HTTPBearer: []
      parameters:
      - name: format
        in: query
        required: false
        schema:
          type: string
          description: Export format (json, csv, xlsx)
          default: json
          title: Format
        description: Export format (json, csv, xlsx)
      - name: metrics
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
          description: List of metrics to export
          title: Metrics
        description: List of metrics to export
      - name: start_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: Start date for analytics
          title: Start Date
        description: Start date for analytics
      - name: end_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          description: End date for analytics
          title: End Date
        description: End date for analytics
      - name: period
        in: query
        required: false
        schema:
          type: string
          description: Predefined period (1h, 24h, 7d, 30d, 90d)
          default: 7d
          title: Period
        description: Predefined period (1h, 24h, 7d, 30d, 90d)
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/toolservers/servers:
    post:
      tags:
      - Tool Servers
      summary: Create Tool Server
      description: "Create a new tool server.\n\nArgs:\n    server_data: Server creation\
        \ data\n    current_user: Current authenticated user\n    service: Tool server\
        \ service\n\nReturns:\n    Created server response"
      operationId: create_tool_server_api_v1_toolservers_servers_post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolServerCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolServerResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - Tool Servers
      summary: List Tool Servers
      description: "List tool servers with optional filtering.\n\nArgs:\n    request:\
        \ List request with filter parameters\n    current_user: Current authenticated\
        \ user\n    service: Tool server service\n\nReturns:\n    List of server responses"
      operationId: list_tool_servers_api_v1_toolservers_servers_get
      security:
      - HTTPBearer: []
      parameters:
      - name: status
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/ServerStatus'
          - type: 'null'
          title: Status
      - name: include_builtin
        in: query
        required: false
        schema:
          type: boolean
          default: true
          title: Include Builtin
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolServerResponse'
                title: Response List Tool Servers Api V1 Toolservers Servers Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/toolservers/servers/{server_id}:
    get:
      tags:
      - Tool Servers
      summary: Get Tool Server
      description: "Get a tool server by ID.\n\nArgs:\n    server_id: Server ID\n\
        \    current_user: Current authenticated user\n    service: Tool server service\n\
        \nReturns:\n    Server response"
      operationId: get_tool_server_api_v1_toolservers_servers__server_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
          title: Server Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolServerResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - Tool Servers
      summary: Update Tool Server
      description: "Update a tool server.\n\nArgs:\n    server_id: Server ID\n   \
        \ update_data: Update data\n    current_user: Current authenticated user\n\
        \    service: Tool server service\n\nReturns:\n    Updated server response"
      operationId: update_tool_server_api_v1_toolservers_servers__server_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
          title: Server Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolServerUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolServerResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Tool Servers
      summary: Delete Tool Server
      description: "Delete a tool server.\n\nArgs:\n    server_id: Server ID\n   \
        \ current_user: Current authenticated user\n    service: Tool server service\n\
        \nReturns:\n    Success message"
      operationId: delete_tool_server_api_v1_toolservers_servers__server_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
          title: Server Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolServerDeleteResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/toolservers/servers/{server_id}/start:
    post:
      tags:
      - Tool Servers
      summary: Start Tool Server
      description: "Start a tool server.\n\nArgs:\n    server_id: Server ID\n    current_user:\
        \ Current authenticated user\n    service: Tool server service\n\nReturns:\n\
        \    Operation result"
      operationId: start_tool_server_api_v1_toolservers_servers__server_id__start_post
      security:
      - HTTPBearer: []
      parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
          title: Server Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolServerOperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/toolservers/servers/{server_id}/stop:
    post:
      tags:
      - Tool Servers
      summary: Stop Tool Server
      description: "Stop a tool server.\n\nArgs:\n    server_id: Server ID\n    current_user:\
        \ Current authenticated user\n    service: Tool server service\n\nReturns:\n\
        \    Operation result"
      operationId: stop_tool_server_api_v1_toolservers_servers__server_id__stop_post
      security:
      - HTTPBearer: []
      parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
          title: Server Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolServerOperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/toolservers/servers/{server_id}/restart:
    post:
      tags:
      - Tool Servers
      summary: Restart Tool Server
      description: "Restart a tool server.\n\nArgs:\n    server_id: Server ID\n  \
        \  current_user: Current authenticated user\n    service: Tool server service\n\
        \nReturns:\n    Operation result"
      operationId: restart_tool_server_api_v1_toolservers_servers__server_id__restart_post
      security:
      - HTTPBearer: []
      parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
          title: Server Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolServerOperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/toolservers/servers/{server_id}/enable:
    post:
      tags:
      - Tool Servers
      summary: Enable Tool Server
      description: "Enable a tool server.\n\nArgs:\n    server_id: Server ID\n   \
        \ current_user: Current authenticated user\n    service: Tool server service\n\
        \nReturns:\n    Operation result"
      operationId: enable_tool_server_api_v1_toolservers_servers__server_id__enable_post
      security:
      - HTTPBearer: []
      parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
          title: Server Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolServerOperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/toolservers/servers/{server_id}/disable:
    post:
      tags:
      - Tool Servers
      summary: Disable Tool Server
      description: "Disable a tool server.\n\nArgs:\n    server_id: Server ID\n  \
        \  current_user: Current authenticated user\n    service: Tool server service\n\
        \nReturns:\n    Operation result"
      operationId: disable_tool_server_api_v1_toolservers_servers__server_id__disable_post
      security:
      - HTTPBearer: []
      parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
          title: Server Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolServerOperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/toolservers/servers/{server_id}/tools:
    get:
      tags:
      - Tool Servers
      summary: Get Server Tools
      description: "Get tools for a specific server.\n\nArgs:\n    server_id: Server\
        \ ID\n    request: Server tools request with pagination\n    current_user:\
        \ Current authenticated user\n    service: Tool server service\n\nReturns:\n\
        \    List of server tools with pagination"
      operationId: get_server_tools_api_v1_toolservers_servers__server_id__tools_get
      security:
      - HTTPBearer: []
      parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
          title: Server Id
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          default: 50
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerToolsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/toolservers/tools/{tool_id}/enable:
    post:
      tags:
      - Tool Servers
      summary: Enable Tool
      description: "Enable a specific tool.\n\nArgs:\n    tool_id: Tool ID\n    current_user:\
        \ Current authenticated user\n    service: Tool server service\n\nReturns:\n\
        \    Operation result"
      operationId: enable_tool_api_v1_toolservers_tools__tool_id__enable_post
      security:
      - HTTPBearer: []
      parameters:
      - name: tool_id
        in: path
        required: true
        schema:
          type: string
          title: Tool Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolOperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/toolservers/tools/{tool_id}/disable:
    post:
      tags:
      - Tool Servers
      summary: Disable Tool
      description: "Disable a specific tool.\n\nArgs:\n    tool_id: Tool ID\n    current_user:\
        \ Current authenticated user\n    service: Tool server service\n\nReturns:\n\
        \    Operation result"
      operationId: disable_tool_api_v1_toolservers_tools__tool_id__disable_post
      security:
      - HTTPBearer: []
      parameters:
      - name: tool_id
        in: path
        required: true
        schema:
          type: string
          title: Tool Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolOperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/toolservers/servers/{server_id}/metrics:
    get:
      tags:
      - Tool Servers
      summary: Get Server Metrics
      description: "Get analytics for a specific server.\n\nArgs:\n    server_id:\
        \ Server ID\n    current_user: Current authenticated user\n    service: Tool\
        \ server service\n\nReturns:\n    Server metrics"
      operationId: get_server_metrics_api_v1_toolservers_servers__server_id__metrics_get
      security:
      - HTTPBearer: []
      parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
          title: Server Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolServerMetrics'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/toolservers/servers/{server_id}/health:
    get:
      tags:
      - Tool Servers
      summary: Check Server Health
      description: "Perform health check on a server.\n\nArgs:\n    server_id: Server\
        \ ID\n    current_user: Current authenticated user\n    service: Tool server\
        \ service\n\nReturns:\n    Health check result"
      operationId: check_server_health_api_v1_toolservers_servers__server_id__health_get
      security:
      - HTTPBearer: []
      parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
          title: Server Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolServerHealthCheck'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/toolservers/servers/bulk:
    post:
      tags:
      - Tool Servers
      summary: Bulk Server Operation
      description: "Perform bulk operations on multiple servers.\n\nArgs:\n    operation_data:\
        \ Bulk operation data\n    current_user: Current authenticated user\n    service:\
        \ Tool server service\n\nReturns:\n    Bulk operation result"
      operationId: bulk_server_operation_api_v1_toolservers_servers_bulk_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkToolServerOperation'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkOperationResult'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/toolservers/tools/all:
    get:
      tags:
      - Tool Servers
      summary: List All Tools
      description: "List all tools across all servers.\n\nArgs:\n    current_user:\
        \ Current authenticated user\n    tool_server_service: Tool server service\n\
        \nReturns:\n    List of all available tools across all servers"
      operationId: list_all_tools_api_v1_toolservers_tools_all_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  additionalProperties: true
                  type: object
                type: array
                title: Response List All Tools Api V1 Toolservers Tools All Get
      security:
      - HTTPBearer: []
  /api/v1/toolservers/servers/{server_id}/test-connectivity:
    post:
      tags:
      - Tool Servers
      summary: Test Server Connectivity
      description: "Test connectivity to an external MCP server.\n\nArgs:\n    server_id:\
        \ Tool server ID\n    current_user: Current authenticated user\n    tool_server_service:\
        \ Tool server service\n\nReturns:\n    Connectivity test results"
      operationId: test_server_connectivity_api_v1_toolservers_servers__server_id__test_connectivity_post
      security:
      - HTTPBearer: []
      parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
          title: Server Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Test Server Connectivity Api V1 Toolservers Servers  Server
                  Id  Test Connectivity Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/toolservers/permissions:
    post:
      tags:
      - Tool Servers
      summary: Grant Tool Permission
      description: "Grant tool permission to a user.\n\nArgs:\n    permission_data:\
        \ Permission data\n    current_user: Current authenticated user\n    access_service:\
        \ Tool access service\n\nReturns:\n    Created permission"
      operationId: grant_tool_permission_api_v1_toolservers_permissions_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolPermissionCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolPermissionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/toolservers/permissions/{permission_id}:
    put:
      tags:
      - Tool Servers
      summary: Update Tool Permission
      description: "Update tool permission.\n\nArgs:\n    permission_id: Permission\
        \ ID\n    update_data: Update data\n    current_user: Current authenticated\
        \ user\n    access_service: Tool access service\n\nReturns:\n    Updated permission"
      operationId: update_tool_permission_api_v1_toolservers_permissions__permission_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: permission_id
        in: path
        required: true
        schema:
          type: string
          title: Permission Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolPermissionUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolPermissionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Tool Servers
      summary: Revoke Tool Permission
      description: "Revoke tool permission.\n\nArgs:\n    permission_id: Permission\
        \ ID\n    current_user: Current authenticated user\n    access_service: Tool\
        \ access service\n\nReturns:\n    Success message"
      operationId: revoke_tool_permission_api_v1_toolservers_permissions__permission_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: permission_id
        in: path
        required: true
        schema:
          type: string
          title: Permission Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Revoke Tool Permission Api V1 Toolservers Permissions  Permission
                  Id  Delete
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/toolservers/users/{user_id}/permissions:
    get:
      tags:
      - Tool Servers
      summary: Get User Permissions
      description: "Get all permissions for a user.\n\nArgs:\n    user_id: User ID\n\
        \    current_user: Current authenticated user\n    access_service: Tool access\
        \ service\n\nReturns:\n    List of user permissions"
      operationId: get_user_permissions_api_v1_toolservers_users__user_id__permissions_get
      security:
      - HTTPBearer: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
          title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolPermissionResponse'
                title: Response Get User Permissions Api V1 Toolservers Users  User
                  Id  Permissions Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/toolservers/role-access:
    post:
      tags:
      - Tool Servers
      summary: Create Role Access Rule
      description: "Create role-based access rule.\n\nArgs:\n    rule_data: Rule data\n\
        \    current_user: Current authenticated user\n    access_service: Tool access\
        \ service\n\nReturns:\n    Created rule"
      operationId: create_role_access_rule_api_v1_toolservers_role_access_post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleToolAccessCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleToolAccessResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - Tool Servers
      summary: Get Role Access Rules
      description: "Get role-based access rules.\n\nArgs:\n    role: Optional role\
        \ filter\n    current_user: Current authenticated user\n    access_service:\
        \ Tool access service\n\nReturns:\n    List of access rules"
      operationId: get_role_access_rules_api_v1_toolservers_role_access_get
      security:
      - HTTPBearer: []
      parameters:
      - name: role
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Role
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleToolAccessResponse'
                title: Response Get Role Access Rules Api V1 Toolservers Role Access
                  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/toolservers/access-check:
    post:
      tags:
      - Tool Servers
      summary: Check Tool Access
      description: "Check if user has access to a tool.\n\nArgs:\n    check_data:\
        \ Access check data\n    current_user: Current authenticated user\n    access_service:\
        \ Tool access service\n\nReturns:\n    Access check result"
      operationId: check_tool_access_api_v1_toolservers_access_check_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserToolAccessCheck'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolAccessResult'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/toolservers/servers/{server_id}/refresh-tools:
    post:
      tags:
      - Tool Servers
      summary: Refresh Server Tools
      description: "Refresh tools for a remote server.\n\nArgs:\n    server_id: Server\
        \ ID\n    current_user: Current authenticated user\n    service: Tool server\
        \ service\n\nReturns:\n    Refresh result"
      operationId: refresh_server_tools_api_v1_toolservers_servers__server_id__refresh_tools_post
      security:
      - HTTPBearer: []
      parameters:
      - name: server_id
        in: path
        required: true
        schema:
          type: string
          title: Server Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Refresh Server Tools Api V1 Toolservers Servers  Server
                  Id  Refresh Tools Post
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/agents/:
    post:
      tags:
      - Agents
      summary: Create Agent
      description: "Create a new agent.\n\nArgs:\n    agent_data: Agent creation data\n\
        \    current_user: Current authenticated user\n    agent_manager: Agent manager\
        \ instance\n\nReturns:\n    Created agent data"
      operationId: create_agent_api_v1_agents__post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentCreateRequest'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - Agents
      summary: List Agents
      description: "List all agents with optional filtering and pagination.\n\nArgs:\n\
        \    request: List request parameters with pagination\n    current_user: Current\
        \ authenticated user\n    agent_manager: Agent manager instance\n\nReturns:\n\
        \    Paginated list of agents"
      operationId: list_agents_api_v1_agents__get
      security:
      - HTTPBearer: []
      parameters:
      - name: agent_type
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/AgentType'
          - type: 'null'
          title: Agent Type
      - name: status
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/AgentStatus'
          - type: 'null'
          title: Status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_list_agents_api_v1_agents__get'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/agents/{agent_id}:
    get:
      tags:
      - Agents
      summary: Get Agent
      description: "Get agent by ID.\n\nArgs:\n    agent_id: Agent ID\n    request:\
        \ Get request parameters\n    current_user: Current authenticated user\n \
        \   agent_manager: Agent manager instance\n\nReturns:\n    Agent data"
      operationId: get_agent_api_v1_agents__agent_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: agent_id
        in: path
        required: true
        schema:
          type: string
          title: Agent Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - Agents
      summary: Update Agent
      description: "Update an agent.\n\nArgs:\n    agent_id: Agent ID\n    agent_data:\
        \ Agent update data\n    current_user: Current authenticated user\n    agent_manager:\
        \ Agent manager instance\n\nReturns:\n    Updated agent data"
      operationId: update_agent_api_v1_agents__agent_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: agent_id
        in: path
        required: true
        schema:
          type: string
          title: Agent Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentUpdateRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Agents
      summary: Delete Agent
      description: "Delete an agent.\n\nArgs:\n    agent_id: Agent ID\n    current_user:\
        \ Current authenticated user\n    agent_manager: Agent manager instance\n\n\
        Returns:\n    Deletion result"
      operationId: delete_agent_api_v1_agents__agent_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: agent_id
        in: path
        required: true
        schema:
          type: string
          title: Agent Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentDeleteResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/agents/{agent_id}/interact:
    post:
      tags:
      - Agents
      summary: Interact With Agent
      description: "Send a message to an agent and get a response.\n\nArgs:\n    agent_id:\
        \ Agent ID\n    interaction_data: Interaction data\n    current_user: Current\
        \ authenticated user\n    agent_manager: Agent manager instance\n\nReturns:\n\
        \    Agent response"
      operationId: interact_with_agent_api_v1_agents__agent_id__interact_post
      security:
      - HTTPBearer: []
      parameters:
      - name: agent_id
        in: path
        required: true
        schema:
          type: string
          title: Agent Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentInteractRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentInteractResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/agents/stats/overview:
    get:
      tags:
      - Agents
      summary: Get Agent Stats
      description: "Get agent statistics.\n\nArgs:\n    current_user: Current authenticated\
        \ user\n    agent_manager: Agent manager instance\n\nReturns:\n    Agent statistics"
      operationId: get_agent_stats_api_v1_agents_stats_overview_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentStatsResponse'
      security:
      - HTTPBearer: []
  /api/v1/ab-tests/:
    post:
      tags:
      - A/B Testing
      summary: Create Ab Test
      description: "Create a new A/B test.\n\nArgs:\n    test_data: A/B test creation\
        \ data\n    current_user: Current authenticated user\n    ab_test_manager:\
        \ A/B test manager instance\n\nReturns:\n    Created test data"
      operationId: create_ab_test_api_v1_ab_tests__post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ABTestCreateRequest'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - A/B Testing
      summary: List Ab Tests
      description: "List A/B tests with optional filtering.\n\nArgs:\n    request:\
        \ List request parameters\n    current_user: Current authenticated user\n\
        \    ab_test_manager: A/B test manager instance\n\nReturns:\n    List of A/B\
        \ tests"
      operationId: list_ab_tests_api_v1_ab_tests__get
      security:
      - HTTPBearer: []
      parameters:
      - name: status
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/TestStatus'
          - type: 'null'
          title: Status
      - name: test_type
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/TestType'
          - type: 'null'
          title: Test Type
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              - type: array
                items:
                  type: string
              - type: 'null'
              title: Tags
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/ab-tests/{test_id}:
    get:
      tags:
      - A/B Testing
      summary: Get Ab Test
      description: "Get A/B test by ID.\n\nArgs:\n    test_id: Test ID\n    current_user:\
        \ Current authenticated user\n    ab_test_manager: A/B test manager instance\n\
        \nReturns:\n    A/B test data"
      operationId: get_ab_test_api_v1_ab_tests__test_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: test_id
        in: path
        required: true
        schema:
          type: string
          title: Test Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - A/B Testing
      summary: Update Ab Test
      description: "Update an A/B test.\n\nArgs:\n    test_id: Test ID\n    test_data:\
        \ Test update data\n    current_user: Current authenticated user\n    ab_test_manager:\
        \ A/B test manager instance\n\nReturns:\n    Updated test data"
      operationId: update_ab_test_api_v1_ab_tests__test_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: test_id
        in: path
        required: true
        schema:
          type: string
          title: Test Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ABTestUpdateRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - A/B Testing
      summary: Delete Ab Test
      description: "Delete an A/B test.\n\nArgs:\n    test_id: Test ID\n    current_user:\
        \ Current authenticated user\n    ab_test_manager: A/B test manager instance\n\
        \nReturns:\n    Deletion result"
      operationId: delete_ab_test_api_v1_ab_tests__test_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: test_id
        in: path
        required: true
        schema:
          type: string
          title: Test Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestDeleteResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/ab-tests/{test_id}/start:
    post:
      tags:
      - A/B Testing
      summary: Start Ab Test
      description: "Start an A/B test.\n\nArgs:\n    test_id: Test ID\n    current_user:\
        \ Current authenticated user\n    ab_test_manager: A/B test manager instance\n\
        \nReturns:\n    Action result"
      operationId: start_ab_test_api_v1_ab_tests__test_id__start_post
      security:
      - HTTPBearer: []
      parameters:
      - name: test_id
        in: path
        required: true
        schema:
          type: string
          title: Test Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestActionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/ab-tests/{test_id}/pause:
    post:
      tags:
      - A/B Testing
      summary: Pause Ab Test
      description: "Pause an A/B test.\n\nArgs:\n    test_id: Test ID\n    current_user:\
        \ Current authenticated user\n    ab_test_manager: A/B test manager instance\n\
        \nReturns:\n    Action result"
      operationId: pause_ab_test_api_v1_ab_tests__test_id__pause_post
      security:
      - HTTPBearer: []
      parameters:
      - name: test_id
        in: path
        required: true
        schema:
          type: string
          title: Test Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestActionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/ab-tests/{test_id}/complete:
    post:
      tags:
      - A/B Testing
      summary: Complete Ab Test
      description: "Complete an A/B test.\n\nArgs:\n    test_id: Test ID\n    current_user:\
        \ Current authenticated user\n    ab_test_manager: A/B test manager instance\n\
        \nReturns:\n    Action result"
      operationId: complete_ab_test_api_v1_ab_tests__test_id__complete_post
      security:
      - HTTPBearer: []
      parameters:
      - name: test_id
        in: path
        required: true
        schema:
          type: string
          title: Test Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestActionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/ab-tests/{test_id}/results:
    get:
      tags:
      - A/B Testing
      summary: Get Ab Test Results
      description: "Get A/B test results and analysis.\n\nArgs:\n    test_id: Test\
        \ ID\n    current_user: Current authenticated user\n    ab_test_manager: A/B\
        \ test manager instance\n\nReturns:\n    Test results and analysis"
      operationId: get_ab_test_results_api_v1_ab_tests__test_id__results_get
      security:
      - HTTPBearer: []
      parameters:
      - name: test_id
        in: path
        required: true
        schema:
          type: string
          title: Test Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestResultsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/ab-tests/{test_id}/metrics:
    get:
      tags:
      - A/B Testing
      summary: Get Ab Test Metrics
      description: "Get current A/B test metrics.\n\nArgs:\n    test_id: Test ID\n\
        \    current_user: Current authenticated user\n    ab_test_manager: A/B test\
        \ manager instance\n\nReturns:\n    Current test metrics"
      operationId: get_ab_test_metrics_api_v1_ab_tests__test_id__metrics_get
      security:
      - HTTPBearer: []
      parameters:
      - name: test_id
        in: path
        required: true
        schema:
          type: string
          title: Test Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestMetricsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/ab-tests/{test_id}/end:
    post:
      tags:
      - A/B Testing
      summary: End Ab Test
      description: "End A/B test and declare winner.\n\nArgs:\n    test_id: A/B test\
        \ ID\n    winner_variant: Winning variant identifier\n    current_user: Current\
        \ authenticated user\n    ab_test_manager: A/B test manager instance\n\nReturns:\n\
        \    Action response"
      operationId: end_ab_test_api_v1_ab_tests__test_id__end_post
      security:
      - HTTPBearer: []
      parameters:
      - name: test_id
        in: path
        required: true
        schema:
          type: string
          title: Test Id
      - name: winner_variant
        in: query
        required: true
        schema:
          type: string
          title: Winner Variant
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ABTestActionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/ab-tests/{test_id}/performance:
    get:
      tags:
      - A/B Testing
      summary: Get Ab Test Performance
      description: "Get A/B test performance results by variant.\n\nArgs:\n    test_id:\
        \ A/B test ID\n    current_user: Current authenticated user\n    ab_test_manager:\
        \ A/B test manager instance\n\nReturns:\n    Performance results per variant"
      operationId: get_ab_test_performance_api_v1_ab_tests__test_id__performance_get
      security:
      - HTTPBearer: []
      parameters:
      - name: test_id
        in: path
        required: true
        schema:
          type: string
          title: Test Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                title: Response Get Ab Test Performance Api V1 Ab Tests  Test Id  Performance
                  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/events/stream:
    get:
      tags:
      - Events
      summary: Events Stream
      description: "Stream real-time events via Server-Sent Events.\n\nArgs:\n   \
        \ request: FastAPI request object\n    current_user: Current authenticated\
        \ user\n\nReturns:\n    StreamingResponse with SSE format"
      operationId: events_stream_api_v1_events_stream_get
      responses:
        '200':
          description: Server-Sent Events stream for real-time updates
          content:
            application/json:
              schema: {}
            text/event-stream:
              schema:
                type: string
      security:
      - HTTPBearer: []
  /api/v1/events/admin/stream:
    get:
      tags:
      - Events
      summary: Admin Events Stream
      description: "Stream all system events for admin users.\n\nArgs:\n    request:\
        \ FastAPI request object\n    current_user: Current authenticated user (must\
        \ be admin)\n\nReturns:\n    StreamingResponse with SSE format for all events"
      operationId: admin_events_stream_api_v1_events_admin_stream_get
      responses:
        '200':
          description: Admin SSE stream for all system events
          content:
            application/json:
              schema: {}
            text/event-stream:
              schema:
                type: string
      security:
      - HTTPBearer: []
  /api/v1/events/stats:
    get:
      tags:
      - Events
      summary: Get Sse Stats
      description: "Get SSE service statistics.\n\nArgs:\n    current_user: Current\
        \ authenticated user\n\nReturns:\n    SSE service statistics"
      operationId: get_sse_stats_api_v1_events_stats_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSEStatsResponse'
      security:
      - HTTPBearer: []
  /api/v1/events/test-event:
    post:
      tags:
      - Events
      summary: Trigger Test Event
      description: "Trigger a test event for the current user.\n\nArgs:\n    current_user:\
        \ Current authenticated user\n\nReturns:\n    Success message with event ID"
      operationId: trigger_test_event_api_v1_events_test_event_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestEventResponse'
      security:
      - HTTPBearer: []
  /api/v1/events/broadcast-test:
    post:
      tags:
      - Events
      summary: Trigger Broadcast Test
      description: "Trigger a broadcast test event for all users.\n\nArgs:\n    current_user:\
        \ Current authenticated user\n\nReturns:\n    Success message with event ID"
      operationId: trigger_broadcast_test_api_v1_events_broadcast_test_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestEventResponse'
      security:
      - HTTPBearer: []
  /api/v1/plugins/install:
    post:
      tags:
      - Plugins
      summary: Install Plugin
      description: "Install a new plugin.\n\nArgs:\n    install_data: Plugin installation\
        \ data\n    current_user: Current authenticated user\n    plugin_manager:\
        \ Plugin manager instance\n\nReturns:\n    Installed plugin data"
      operationId: install_plugin_api_v1_plugins_install_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginInstallRequest'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/plugins/:
    get:
      tags:
      - Plugins
      summary: List Plugins
      description: "List installed plugins with optional filtering.\n\nArgs:\n   \
        \ request: List request parameters\n    current_user: Current authenticated\
        \ user\n    plugin_manager: Plugin manager instance\n\nReturns:\n    List\
        \ of installed plugins"
      operationId: list_plugins_api_v1_plugins__get
      security:
      - HTTPBearer: []
      parameters:
      - name: plugin_type
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/PluginType'
          - type: 'null'
          title: Plugin Type
      - name: status
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/PluginStatus'
          - type: 'null'
          title: Status
      - name: enabled
        in: query
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Enabled
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/plugins/{plugin_id}:
    get:
      tags:
      - Plugins
      summary: Get Plugin
      description: "Get plugin by ID.\n\nArgs:\n    plugin_id: Plugin ID\n    current_user:\
        \ Current authenticated user\n    plugin_manager: Plugin manager instance\n\
        \nReturns:\n    Plugin data"
      operationId: get_plugin_api_v1_plugins__plugin_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: plugin_id
        in: path
        required: true
        schema:
          type: string
          title: Plugin Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - Plugins
      summary: Update Plugin
      description: "Update a plugin.\n\nArgs:\n    plugin_id: Plugin ID\n    update_data:\
        \ Plugin update data\n    current_user: Current authenticated user\n    plugin_manager:\
        \ Plugin manager instance\n\nReturns:\n    Updated plugin data"
      operationId: update_plugin_api_v1_plugins__plugin_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: plugin_id
        in: path
        required: true
        schema:
          type: string
          title: Plugin Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PluginUpdateRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Plugins
      summary: Uninstall Plugin
      description: "Uninstall a plugin.\n\nArgs:\n    plugin_id: Plugin ID\n    current_user:\
        \ Current authenticated user\n    plugin_manager: Plugin manager instance\n\
        \nReturns:\n    Uninstall result"
      operationId: uninstall_plugin_api_v1_plugins__plugin_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: plugin_id
        in: path
        required: true
        schema:
          type: string
          title: Plugin Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginDeleteResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/plugins/{plugin_id}/enable:
    post:
      tags:
      - Plugins
      summary: Enable Plugin
      description: "Enable a plugin.\n\nArgs:\n    plugin_id: Plugin ID\n    current_user:\
        \ Current authenticated user\n    plugin_manager: Plugin manager instance\n\
        \nReturns:\n    Action result"
      operationId: enable_plugin_api_v1_plugins__plugin_id__enable_post
      security:
      - HTTPBearer: []
      parameters:
      - name: plugin_id
        in: path
        required: true
        schema:
          type: string
          title: Plugin Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginActionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/plugins/{plugin_id}/disable:
    post:
      tags:
      - Plugins
      summary: Disable Plugin
      description: "Disable a plugin.\n\nArgs:\n    plugin_id: Plugin ID\n    current_user:\
        \ Current authenticated user\n    plugin_manager: Plugin manager instance\n\
        \nReturns:\n    Action result"
      operationId: disable_plugin_api_v1_plugins__plugin_id__disable_post
      security:
      - HTTPBearer: []
      parameters:
      - name: plugin_id
        in: path
        required: true
        schema:
          type: string
          title: Plugin Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PluginActionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/jobs/:
    post:
      tags:
      - Jobs
      summary: Create Job
      description: "Create a new job.\n\nArgs:\n    job_data: Job creation data\n\
        \    current_user: Current authenticated user\n\nReturns:\n    Created job\
        \ data"
      operationId: create_job_api_v1_jobs__post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobCreateRequest'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - Jobs
      summary: List Jobs
      description: "List jobs with optional filtering.\n\nArgs:\n    request: List\
        \ request parameters\n    current_user: Current authenticated user\n\nReturns:\n\
        \    List of jobs"
      operationId: list_jobs_api_v1_jobs__get
      security:
      - HTTPBearer: []
      parameters:
      - name: status
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/JobStatus'
          - type: 'null'
          title: Status
      - name: priority
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/JobPriority'
          - type: 'null'
          title: Priority
      - name: function_name
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Function Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/jobs/{job_id}:
    get:
      tags:
      - Jobs
      summary: Get Job
      description: "Get job by ID.\n\nArgs:\n    job_id: Job ID\n    current_user:\
        \ Current authenticated user\n\nReturns:\n    Job data"
      operationId: get_job_api_v1_jobs__job_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
          title: Job Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/jobs/{job_id}/cancel:
    post:
      tags:
      - Jobs
      summary: Cancel Job
      description: "Cancel a job.\n\nArgs:\n    job_id: Job ID\n    current_user:\
        \ Current authenticated user\n\nReturns:\n    Cancellation result"
      operationId: cancel_job_api_v1_jobs__job_id__cancel_post
      security:
      - HTTPBearer: []
      parameters:
      - name: job_id
        in: path
        required: true
        schema:
          type: string
          title: Job Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobActionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/jobs/stats/overview:
    get:
      tags:
      - Jobs
      summary: Get Job Stats
      description: "Get job queue statistics.\n\nArgs:\n    current_user: Current\
        \ authenticated user\n\nReturns:\n    Job statistics"
      operationId: get_job_stats_api_v1_jobs_stats_overview_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatsResponse'
      security:
      - HTTPBearer: []
  /api/v1/data/export:
    post:
      tags:
      - Data Management
      summary: Export Data
      description: Export data in specified format.
      operationId: export_data_api_v1_data_export_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportDataRequest'
        required: true
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportDataResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/data/backup:
    post:
      tags:
      - Data Management
      summary: Create Backup
      description: Create a data backup.
      operationId: create_backup_api_v1_data_backup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRequest'
        required: true
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/data/backups:
    get:
      tags:
      - Data Management
      summary: List Backups
      description: List available backups.
      operationId: list_backups_api_v1_data_backups_get
      security:
      - HTTPBearer: []
      parameters:
      - name: backup_type
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/BackupType'
          - type: 'null'
          title: Backup Type
      - name: status
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/data/restore:
    post:
      tags:
      - Data Management
      summary: Restore From Backup
      description: Restore data from a backup.
      operationId: restore_from_backup_api_v1_data_restore_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreRequest'
        required: true
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestoreResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/data/stats:
    get:
      tags:
      - Data Management
      summary: Get Storage Stats
      description: Get storage statistics and usage information.
      operationId: get_storage_stats_api_v1_data_stats_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageStatsResponse'
      security:
      - HTTPBearer: []
  /api/v1/data/bulk/delete-documents:
    post:
      tags:
      - Data Management
      summary: Bulk Delete Documents
      description: Bulk delete documents.
      operationId: bulk_delete_documents_api_v1_data_bulk_delete_documents_post
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
              title: Document Ids
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkDeleteResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/data/bulk/delete-conversations:
    post:
      tags:
      - Data Management
      summary: Bulk Delete Conversations
      description: Bulk delete conversations.
      operationId: bulk_delete_conversations_api_v1_data_bulk_delete_conversations_post
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
              title: Conversation Ids
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkDeleteResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/data/bulk/delete-prompts:
    post:
      tags:
      - Data Management
      summary: Bulk Delete Prompts
      description: Bulk delete prompts.
      operationId: bulk_delete_prompts_api_v1_data_bulk_delete_prompts_post
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
              title: Prompt Ids
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkDeleteResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - HTTPBearer: []
  /api/v1/models/providers:
    get:
      tags:
      - Model Registry
      summary: List Providers
      description: List all providers.
      operationId: list_providers_api_v1_models_providers_get
      security:
      - HTTPBearer: []
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          description: Page number
          default: 1
          title: Page
        description: Page number
      - name: per_page
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          description: Items per page
          default: 20
          title: Per Page
        description: Items per page
      - name: active_only
        in: query
        required: false
        schema:
          type: boolean
          description: Show only active providers
          default: true
          title: Active Only
        description: Show only active providers
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Model Registry
      summary: Create Provider
      description: Create a new provider.
      operationId: create_provider_api_v1_models_providers_post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/models/providers/{provider_id}:
    get:
      tags:
      - Model Registry
      summary: Get Provider
      description: Get a specific provider.
      operationId: get_provider_api_v1_models_providers__provider_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: provider_id
        in: path
        required: true
        schema:
          type: string
          title: Provider Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - Model Registry
      summary: Update Provider
      description: Update a provider.
      operationId: update_provider_api_v1_models_providers__provider_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: provider_id
        in: path
        required: true
        schema:
          type: string
          title: Provider Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Model Registry
      summary: Delete Provider
      description: Delete a provider and all its dependent models and embedding spaces.
      operationId: delete_provider_api_v1_models_providers__provider_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: provider_id
        in: path
        required: true
        schema:
          type: string
          title: Provider Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderDeleteResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/models/providers/{provider_id}/set-default:
    post:
      tags:
      - Model Registry
      summary: Set Default Provider
      description: Set a provider as default for a model type.
      operationId: set_default_provider_api_v1_models_providers__provider_id__set_default_post
      security:
      - HTTPBearer: []
      parameters:
      - name: provider_id
        in: path
        required: true
        schema:
          type: string
          title: Provider Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultProvider'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderDefaultResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/models/models:
    get:
      tags:
      - Model Registry
      summary: List Models
      description: List all model definitions.
      operationId: list_models_api_v1_models_models_get
      security:
      - HTTPBearer: []
      parameters:
      - name: provider_id
        in: query
        required: false
        schema:
          type: string
          description: Filter by provider ID
          title: Provider Id
        description: Filter by provider ID
      - name: model_type
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ModelType'
          description: Filter by model type
        description: Filter by model type
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          description: Page number
          default: 1
          title: Page
        description: Page number
      - name: per_page
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          description: Items per page
          default: 20
          title: Per Page
        description: Items per page
      - name: active_only
        in: query
        required: false
        schema:
          type: boolean
          description: Show only active models
          default: true
          title: Active Only
        description: Show only active models
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelDefList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Model Registry
      summary: Create Model
      description: Create a new model definition.
      operationId: create_model_api_v1_models_models_post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelDefCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelDefWithProvider'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/models/models/{model_id}:
    get:
      tags:
      - Model Registry
      summary: Get Model
      description: Get a specific model definition.
      operationId: get_model_api_v1_models_models__model_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: model_id
        in: path
        required: true
        schema:
          type: string
          title: Model Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelDefWithProvider'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - Model Registry
      summary: Update Model
      description: Update a model definition.
      operationId: update_model_api_v1_models_models__model_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: model_id
        in: path
        required: true
        schema:
          type: string
          title: Model Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelDefUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelDefWithProvider'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Model Registry
      summary: Delete Model
      description: Delete a model definition and its dependent embedding spaces.
      operationId: delete_model_api_v1_models_models__model_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: model_id
        in: path
        required: true
        schema:
          type: string
          title: Model Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelDeleteResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/models/models/{model_id}/set-default:
    post:
      tags:
      - Model Registry
      summary: Set Default Model
      description: Set a model as default for its type.
      operationId: set_default_model_api_v1_models_models__model_id__set_default_post
      security:
      - HTTPBearer: []
      parameters:
      - name: model_id
        in: path
        required: true
        schema:
          type: string
          title: Model Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelDefaultResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/models/embedding-spaces:
    get:
      tags:
      - Model Registry
      summary: List Embedding Spaces
      description: List all embedding spaces.
      operationId: list_embedding_spaces_api_v1_models_embedding_spaces_get
      security:
      - HTTPBearer: []
      parameters:
      - name: model_id
        in: query
        required: false
        schema:
          type: string
          description: Filter by model ID
          title: Model Id
        description: Filter by model ID
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          description: Page number
          default: 1
          title: Page
        description: Page number
      - name: per_page
        in: query
        required: false
        schema:
          type: integer
          maximum: 100
          minimum: 1
          description: Items per page
          default: 20
          title: Per Page
        description: Items per page
      - name: active_only
        in: query
        required: false
        schema:
          type: boolean
          description: Show only active spaces
          default: true
          title: Active Only
        description: Show only active spaces
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddingSpaceList'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Model Registry
      summary: Create Embedding Space
      description: Create a new embedding space with backing table and index.
      operationId: create_embedding_space_api_v1_models_embedding_spaces_post
      security:
      - HTTPBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddingSpaceCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddingSpaceWithModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/models/embedding-spaces/{space_id}:
    get:
      tags:
      - Model Registry
      summary: Get Embedding Space
      description: Get a specific embedding space.
      operationId: get_embedding_space_api_v1_models_embedding_spaces__space_id__get
      security:
      - HTTPBearer: []
      parameters:
      - name: space_id
        in: path
        required: true
        schema:
          type: string
          title: Space Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddingSpaceWithModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - Model Registry
      summary: Update Embedding Space
      description: Update an embedding space.
      operationId: update_embedding_space_api_v1_models_embedding_spaces__space_id__put
      security:
      - HTTPBearer: []
      parameters:
      - name: space_id
        in: path
        required: true
        schema:
          type: string
          title: Space Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddingSpaceUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddingSpaceWithModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Model Registry
      summary: Delete Embedding Space
      description: Delete an embedding space (does not drop the table).
      operationId: delete_embedding_space_api_v1_models_embedding_spaces__space_id__delete
      security:
      - HTTPBearer: []
      parameters:
      - name: space_id
        in: path
        required: true
        schema:
          type: string
          title: Space Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddingSpaceDeleteResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/models/embedding-spaces/{space_id}/set-default:
    post:
      tags:
      - Model Registry
      summary: Set Default Embedding Space
      description: Set an embedding space as default.
      operationId: set_default_embedding_space_api_v1_models_embedding_spaces__space_id__set_default_post
      security:
      - HTTPBearer: []
      parameters:
      - name: space_id
        in: path
        required: true
        schema:
          type: string
          title: Space Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddingSpaceDefaultResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/models/defaults/provider/{model_type}:
    get:
      tags:
      - Model Registry
      summary: Get Default Provider
      description: Get the default provider for a model type.
      operationId: get_default_provider_api_v1_models_defaults_provider__model_type__get
      security:
      - HTTPBearer: []
      parameters:
      - name: model_type
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ModelType'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/models/defaults/model/{model_type}:
    get:
      tags:
      - Model Registry
      summary: Get Default Model
      description: Get the default model for a type.
      operationId: get_default_model_api_v1_models_defaults_model__model_type__get
      security:
      - HTTPBearer: []
      parameters:
      - name: model_type
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ModelType'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelDefWithProvider'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/models/defaults/embedding-space:
    get:
      tags:
      - Model Registry
      summary: Get Default Embedding Space
      description: Get the default embedding space.
      operationId: get_default_embedding_space_api_v1_models_defaults_embedding_space_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddingSpaceWithModel'
      security:
      - HTTPBearer: []
  /{full_path}:
    get:
      summary: Serve React App
      operationId: serve_react_app__full_path__get
      parameters:
      - name: full_path
        in: path
        required: true
        schema:
          type: string
          title: Full Path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /:
    get:
      summary: Root
      description: Root endpoint.
      operationId: root__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    ABTestActionResponse:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether action was successful
        message:
          type: string
          title: Message
          description: Action result message
        test_id:
          type: string
          title: Test Id
          description: Test ID
        new_status:
          $ref: '#/components/schemas/TestStatus'
          description: New test status
      type: object
      required:
      - success
      - message
      - test_id
      - new_status
      title: ABTestActionResponse
      description: Response schema for test actions (start, pause, complete).
    ABTestCreateRequest:
      properties:
        name:
          type: string
          title: Name
          description: Test name
        description:
          type: string
          title: Description
          description: Test description
        test_type:
          $ref: '#/components/schemas/TestType'
          description: Type of test
        allocation_strategy:
          $ref: '#/components/schemas/VariantAllocation'
          description: Allocation strategy
        variants:
          items:
            $ref: '#/components/schemas/TestVariant'
          type: array
          minItems: 2
          title: Variants
          description: Test variants
        metrics:
          items:
            $ref: '#/components/schemas/MetricType'
          type: array
          minItems: 1
          title: Metrics
          description: Metrics to track
        duration_days:
          type: integer
          maximum: 365.0
          minimum: 1.0
          title: Duration Days
          description: Test duration in days
          default: 7
        min_sample_size:
          type: integer
          minimum: 10.0
          title: Min Sample Size
          description: Minimum sample size
          default: 100
        confidence_level:
          type: number
          maximum: 0.99
          minimum: 0.5
          title: Confidence Level
          description: Statistical confidence level
          default: 0.95
        target_audience:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Target Audience
          description: Target audience criteria
        traffic_percentage:
          type: number
          maximum: 100.0
          minimum: 0.1
          title: Traffic Percentage
          description: Percentage of traffic to include
          default: 100.0
        tags:
          items:
            type: string
          type: array
          title: Tags
          description: Test tags
        metadata:
          additionalProperties: true
          type: object
          title: Metadata
          description: Additional metadata
      type: object
      required:
      - name
      - description
      - test_type
      - allocation_strategy
      - variants
      - metrics
      title: ABTestCreateRequest
      description: Request schema for creating an A/B test.
    ABTestDeleteResponse:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether deletion was successful
        message:
          type: string
          title: Message
          description: Deletion result message
      type: object
      required:
      - success
      - message
      title: ABTestDeleteResponse
      description: Response schema for test deletion.
    ABTestListResponse:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/ABTestResponse'
          type: array
          title: Tests
          description: List of tests
        total:
          type: integer
          title: Total
          description: Total number of tests
      type: object
      required:
      - tests
      - total
      title: ABTestListResponse
      description: Response schema for A/B test list.
    ABTestMetricsResponse:
      properties:
        test_id:
          type: string
          title: Test Id
          description: Test ID
        metrics:
          items:
            $ref: '#/components/schemas/TestMetric'
          type: array
          title: Metrics
          description: Current metrics
        participant_count:
          type: integer
          title: Participant Count
          description: Current participant count
        last_updated:
          type: string
          format: date-time
          title: Last Updated
          description: Last metrics update
      type: object
      required:
      - test_id
      - metrics
      - participant_count
      - last_updated
      title: ABTestMetricsResponse
      description: Response schema for A/B test metrics.
    ABTestResponse:
      properties:
        id:
          type: string
          title: Id
          description: Test ID
        name:
          type: string
          title: Name
          description: Test name
        description:
          type: string
          title: Description
          description: Test description
        test_type:
          $ref: '#/components/schemas/TestType'
          description: Type of test
        status:
          $ref: '#/components/schemas/TestStatus'
          description: Test status
        allocation_strategy:
          $ref: '#/components/schemas/VariantAllocation'
          description: Allocation strategy
        variants:
          items:
            $ref: '#/components/schemas/TestVariant'
          type: array
          title: Variants
          description: Test variants
        metrics:
          items:
            $ref: '#/components/schemas/MetricType'
          type: array
          title: Metrics
          description: Metrics being tracked
        duration_days:
          type: integer
          title: Duration Days
          description: Test duration in days
        min_sample_size:
          type: integer
          title: Min Sample Size
          description: Minimum sample size
        confidence_level:
          type: number
          title: Confidence Level
          description: Statistical confidence level
        target_audience:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Target Audience
          description: Target audience criteria
        traffic_percentage:
          type: number
          title: Traffic Percentage
          description: Percentage of traffic included
        start_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Start Date
          description: Test start date
        end_date:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: End Date
          description: Test end date
        participant_count:
          type: integer
          title: Participant Count
          description: Number of participants
          default: 0
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          title: Updated At
          description: Last update timestamp
        created_by:
          type: string
          title: Created By
          description: Creator
        tags:
          items:
            type: string
          type: array
          title: Tags
          description: Test tags
        metadata:
          additionalProperties: true
          type: object
          title: Metadata
          description: Additional metadata
      type: object
      required:
      - id
      - name
      - description
      - test_type
      - status
      - allocation_strategy
      - variants
      - metrics
      - duration_days
      - min_sample_size
      - confidence_level
      - traffic_percentage
      - created_at
      - updated_at
      - created_by
      - tags
      - metadata
      title: ABTestResponse
      description: Response schema for A/B test data.
    ABTestResultsResponse:
      properties:
        test_id:
          type: string
          title: Test Id
          description: Test ID
        test_name:
          type: string
          title: Test Name
          description: Test name
        status:
          $ref: '#/components/schemas/TestStatus'
          description: Test status
        metrics:
          items:
            $ref: '#/components/schemas/TestMetric'
          type: array
          title: Metrics
          description: Metric results by variant
        statistical_significance:
          additionalProperties:
            type: boolean
          type: object
          title: Statistical Significance
          description: Statistical significance by metric
        confidence_intervals:
          additionalProperties:
            additionalProperties:
              items:
                type: number
              type: array
            type: object
          type: object
          title: Confidence Intervals
          description: Confidence intervals
        winning_variant:
          anyOf:
          - type: string
          - type: 'null'
          title: Winning Variant
          description: Recommended winning variant
        recommendation:
          type: string
          title: Recommendation
          description: Action recommendation
        generated_at:
          type: string
          format: date-time
          title: Generated At
          description: Results generation timestamp
        sample_size:
          type: integer
          title: Sample Size
          description: Total sample size
        duration_days:
          type: integer
          title: Duration Days
          description: Test duration so far
      type: object
      required:
      - test_id
      - test_name
      - status
      - metrics
      - statistical_significance
      - confidence_intervals
      - recommendation
      - generated_at
      - sample_size
      - duration_days
      title: ABTestResultsResponse
      description: Response schema for A/B test results.
    ABTestUpdateRequest:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
          description: Test name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Test description
        status:
          anyOf:
          - $ref: '#/components/schemas/TestStatus'
          - type: 'null'
          description: Test status
        duration_days:
          anyOf:
          - type: integer
            maximum: 365.0
            minimum: 1.0
          - type: 'null'
          title: Duration Days
          description: Test duration in days
        min_sample_size:
          anyOf:
          - type: integer
            minimum: 10.0
          - type: 'null'
          title: Min Sample Size
          description: Minimum sample size
        confidence_level:
          anyOf:
          - type: number
            maximum: 0.99
            minimum: 0.5
          - type: 'null'
          title: Confidence Level
          description: Statistical confidence level
        traffic_percentage:
          anyOf:
          - type: number
            maximum: 100.0
            minimum: 0.1
          - type: 'null'
          title: Traffic Percentage
          description: Traffic percentage
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
          description: Test tags
        metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Metadata
          description: Additional metadata
      type: object
      title: ABTestUpdateRequest
      description: Request schema for updating an A/B test.
    APIKeyCreate:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
          title: Name
          description: API key name
      type: object
      required:
      - name
      title: APIKeyCreate
      description: Schema for API key creation.
    APIKeyResponse:
      properties:
        id:
          type: string
          title: Id
          description: User ID
        api_key:
          type: string
          title: Api Key
          description: API key
        api_key_name:
          type: string
          title: Api Key Name
          description: API key name
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Creation date
      type: object
      required:
      - id
      - api_key
      - api_key_name
      - created_at
      title: APIKeyResponse
      description: Schema for API key response.
    APIKeyRevokeResponse:
      properties:
        message:
          type: string
          title: Message
          description: Success message
      type: object
      required:
      - message
      title: APIKeyRevokeResponse
      description: Schema for API key revoke response.
    AccountDeactivateResponse:
      properties:
        message:
          type: string
          title: Message
          description: Success message
      type: object
      required:
      - message
      title: AccountDeactivateResponse
      description: Schema for account deactivation response.
    AgentCapability:
      properties:
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        required_tools:
          items:
            type: string
          type: array
          title: Required Tools
        required_models:
          items:
            type: string
          type: array
          title: Required Models
        confidence_threshold:
          type: number
          title: Confidence Threshold
          default: 0.7
        enabled:
          type: boolean
          title: Enabled
          default: true
      type: object
      required:
      - name
      - description
      title: AgentCapability
      description: Agent capability definition.
    AgentCreateRequest:
      properties:
        name:
          type: string
          title: Name
          description: Agent name
        description:
          type: string
          title: Description
          description: Agent description
        agent_type:
          $ref: '#/components/schemas/AgentType'
          description: Type of agent
        system_prompt:
          type: string
          title: System Prompt
          description: System prompt for the agent
        personality_traits:
          items:
            type: string
          type: array
          title: Personality Traits
          description: Agent personality traits
        knowledge_domains:
          items:
            type: string
          type: array
          title: Knowledge Domains
          description: Knowledge domains
        response_style:
          type: string
          title: Response Style
          description: Response style
          default: professional
        capabilities:
          items:
            $ref: '#/components/schemas/AgentCapability'
          type: array
          title: Capabilities
          description: Agent capabilities
        available_tools:
          items:
            type: string
          type: array
          title: Available Tools
          description: Available tools
        primary_llm:
          type: string
          title: Primary Llm
          description: Primary LLM provider
          default: openai
        fallback_llm:
          type: string
          title: Fallback Llm
          description: Fallback LLM provider
          default: anthropic
        temperature:
          type: number
          maximum: 2.0
          minimum: 0.0
          title: Temperature
          description: Temperature for responses
          default: 0.7
        max_tokens:
          type: integer
          maximum: 32000.0
          minimum: 1.0
          title: Max Tokens
          description: Maximum tokens
          default: 4096
        max_conversation_length:
          type: integer
          maximum: 1000.0
          minimum: 1.0
          title: Max Conversation Length
          description: Maximum conversation length
          default: 50
        context_window_size:
          type: integer
          maximum: 32000.0
          minimum: 100.0
          title: Context Window Size
          description: Context window size
          default: 4000
        response_timeout:
          type: integer
          maximum: 300.0
          minimum: 1.0
          title: Response Timeout
          description: Response timeout in seconds
          default: 30
        learning_enabled:
          type: boolean
          title: Learning Enabled
          description: Enable learning from feedback
          default: true
        feedback_weight:
          type: number
          maximum: 1.0
          minimum: 0.0
          title: Feedback Weight
          description: Weight for feedback learning
          default: 0.1
        adaptation_threshold:
          type: number
          maximum: 1.0
          minimum: 0.0
          title: Adaptation Threshold
          description: Adaptation threshold
          default: 0.8
        tags:
          items:
            type: string
          type: array
          title: Tags
          description: Agent tags
        metadata:
          additionalProperties: true
          type: object
          title: Metadata
          description: Additional metadata
      type: object
      required:
      - name
      - description
      - agent_type
      - system_prompt
      title: AgentCreateRequest
      description: Request schema for creating an agent.
    AgentDeleteResponse:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether deletion was successful
        message:
          type: string
          title: Message
          description: Deletion result message
      type: object
      required:
      - success
      - message
      title: AgentDeleteResponse
      description: Response schema for agent deletion.
    AgentInteractRequest:
      properties:
        message:
          type: string
          title: Message
          description: Message to send to the agent
        conversation_id:
          type: string
          title: Conversation Id
          description: Conversation ID
        context:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Context
          description: Additional context
      type: object
      required:
      - message
      - conversation_id
      title: AgentInteractRequest
      description: Request schema for interacting with an agent.
    AgentInteractResponse:
      properties:
        agent_id:
          type: string
          title: Agent Id
          description: Agent ID
        response:
          type: string
          title: Response
          description: Agent response
        conversation_id:
          type: string
          title: Conversation Id
          description: Conversation ID
        tools_used:
          items:
            type: string
          type: array
          title: Tools Used
          description: Tools used in response
        confidence_score:
          type: number
          title: Confidence Score
          description: Confidence score
        response_time:
          type: number
          title: Response Time
          description: Response time in seconds
        timestamp:
          type: string
          format: date-time
          title: Timestamp
          description: Response timestamp
      type: object
      required:
      - agent_id
      - response
      - conversation_id
      - tools_used
      - confidence_score
      - response_time
      - timestamp
      title: AgentInteractResponse
      description: Response schema for agent interaction.
    AgentListResponse:
      properties:
        agents:
          items:
            $ref: '#/components/schemas/AgentResponse'
          type: array
          title: Agents
          description: List of agents
        total:
          type: integer
          title: Total
          description: Total number of agents
        page:
          type: integer
          title: Page
          description: Current page number
        per_page:
          type: integer
          title: Per Page
          description: Number of items per page
        total_pages:
          type: integer
          title: Total Pages
          description: Total number of pages
      type: object
      required:
      - agents
      - total
      - page
      - per_page
      - total_pages
      title: AgentListResponse
      description: Response schema for agent list.
    AgentResponse:
      properties:
        id:
          type: string
          title: Id
          description: Agent ID
        name:
          type: string
          title: Name
          description: Agent name
        description:
          type: string
          title: Description
          description: Agent description
        agent_type:
          $ref: '#/components/schemas/AgentType'
          description: Type of agent
        status:
          $ref: '#/components/schemas/AgentStatus'
          description: Agent status
        system_prompt:
          type: string
          title: System Prompt
          description: System prompt
        personality_traits:
          items:
            type: string
          type: array
          title: Personality Traits
          description: Agent personality traits
        knowledge_domains:
          items:
            type: string
          type: array
          title: Knowledge Domains
          description: Knowledge domains
        response_style:
          type: string
          title: Response Style
          description: Response style
        capabilities:
          items:
            $ref: '#/components/schemas/AgentCapability'
          type: array
          title: Capabilities
          description: Agent capabilities
        available_tools:
          items:
            type: string
          type: array
          title: Available Tools
          description: Available tools
        primary_llm:
          type: string
          title: Primary Llm
          description: Primary LLM provider
        fallback_llm:
          type: string
          title: Fallback Llm
          description: Fallback LLM provider
        temperature:
          type: number
          title: Temperature
          description: Temperature for responses
        max_tokens:
          type: integer
          title: Max Tokens
          description: Maximum tokens
        max_conversation_length:
          type: integer
          title: Max Conversation Length
          description: Maximum conversation length
        context_window_size:
          type: integer
          title: Context Window Size
          description: Context window size
        response_timeout:
          type: integer
          title: Response Timeout
          description: Response timeout in seconds
        learning_enabled:
          type: boolean
          title: Learning Enabled
          description: Learning enabled
        feedback_weight:
          type: number
          title: Feedback Weight
          description: Feedback weight
        adaptation_threshold:
          type: number
          title: Adaptation Threshold
          description: Adaptation threshold
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          title: Updated At
          description: Last update timestamp
        created_by:
          type: string
          title: Created By
          description: Creator
        tags:
          items:
            type: string
          type: array
          title: Tags
          description: Agent tags
        metadata:
          additionalProperties: true
          type: object
          title: Metadata
          description: Additional metadata
      type: object
      required:
      - id
      - name
      - description
      - agent_type
      - status
      - system_prompt
      - personality_traits
      - knowledge_domains
      - response_style
      - capabilities
      - available_tools
      - primary_llm
      - fallback_llm
      - temperature
      - max_tokens
      - max_conversation_length
      - context_window_size
      - response_timeout
      - learning_enabled
      - feedback_weight
      - adaptation_threshold
      - created_at
      - updated_at
      - created_by
      - tags
      - metadata
      title: AgentResponse
      description: Response schema for agent data.
    AgentStatsResponse:
      properties:
        total_agents:
          type: integer
          title: Total Agents
          description: Total number of agents
        active_agents:
          type: integer
          title: Active Agents
          description: Number of active agents
        agent_types:
          additionalProperties:
            type: integer
          type: object
          title: Agent Types
          description: Agents by type
        total_interactions:
          type: integer
          title: Total Interactions
          description: Total interactions across all agents
      type: object
      required:
      - total_agents
      - active_agents
      - agent_types
      - total_interactions
      title: AgentStatsResponse
      description: Response schema for agent statistics.
    AgentStatus:
      type: string
      enum:
      - active
      - inactive
      - training
      - error
      - maintenance
      title: AgentStatus
      description: Agent status.
    AgentType:
      type: string
      enum:
      - conversational
      - task_oriented
      - analytical
      - creative
      - research
      - support
      - specialist
      title: AgentType
      description: Types of AI agents.
    AgentUpdateRequest:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
          description: Agent name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Agent description
        system_prompt:
          anyOf:
          - type: string
          - type: 'null'
          title: System Prompt
          description: System prompt for the agent
        status:
          anyOf:
          - $ref: '#/components/schemas/AgentStatus'
          - type: 'null'
          description: Agent status
        personality_traits:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Personality Traits
          description: Agent personality traits
        knowledge_domains:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Knowledge Domains
          description: Knowledge domains
        response_style:
          anyOf:
          - type: string
          - type: 'null'
          title: Response Style
          description: Response style
        capabilities:
          anyOf:
          - items:
              $ref: '#/components/schemas/AgentCapability'
            type: array
          - type: 'null'
          title: Capabilities
          description: Agent capabilities
        available_tools:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Available Tools
          description: Available tools
        primary_llm:
          anyOf:
          - type: string
          - type: 'null'
          title: Primary Llm
          description: Primary LLM provider
        fallback_llm:
          anyOf:
          - type: string
          - type: 'null'
          title: Fallback Llm
          description: Fallback LLM provider
        temperature:
          anyOf:
          - type: number
            maximum: 2.0
            minimum: 0.0
          - type: 'null'
          title: Temperature
          description: Temperature for responses
        max_tokens:
          anyOf:
          - type: integer
            maximum: 32000.0
            minimum: 1.0
          - type: 'null'
          title: Max Tokens
          description: Maximum tokens
        max_conversation_length:
          anyOf:
          - type: integer
            maximum: 1000.0
            minimum: 1.0
          - type: 'null'
          title: Max Conversation Length
          description: Maximum conversation length
        context_window_size:
          anyOf:
          - type: integer
            maximum: 32000.0
            minimum: 100.0
          - type: 'null'
          title: Context Window Size
          description: Context window size
        response_timeout:
          anyOf:
          - type: integer
            maximum: 300.0
            minimum: 1.0
          - type: 'null'
          title: Response Timeout
          description: Response timeout in seconds
        learning_enabled:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Learning Enabled
          description: Enable learning from feedback
        feedback_weight:
          anyOf:
          - type: number
            maximum: 1.0
            minimum: 0.0
          - type: 'null'
          title: Feedback Weight
          description: Weight for feedback learning
        adaptation_threshold:
          anyOf:
          - type: number
            maximum: 1.0
            minimum: 0.0
          - type: 'null'
          title: Adaptation Threshold
          description: Adaptation threshold
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
          description: Agent tags
        metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Metadata
          description: Additional metadata
      type: object
      title: AgentUpdateRequest
      description: Request schema for updating an agent.
    AvailableProvidersResponse:
      properties:
        providers:
          additionalProperties: true
          type: object
          title: Providers
          description: Available LLM providers with their configurations
        total_providers:
          type: integer
          title: Total Providers
          description: Total number of available providers
        supported_features:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          title: Supported Features
          description: Features supported by each provider
      type: object
      required:
      - providers
      - total_providers
      - supported_features
      title: AvailableProvidersResponse
      description: Schema for available providers response.
    AvailableToolResponse:
      properties:
        name:
          type: string
          title: Name
          description: Tool name
        description:
          type: string
          title: Description
          description: Tool description
        type:
          type: string
          title: Type
          description: Tool type (mcp, builtin)
        args_schema:
          additionalProperties: true
          type: object
          title: Args Schema
          description: Tool arguments schema
      type: object
      required:
      - name
      - description
      - type
      - args_schema
      title: AvailableToolResponse
      description: Schema for individual available tool.
    AvailableToolsResponse:
      properties:
        tools:
          items:
            $ref: '#/components/schemas/AvailableToolResponse'
          type: array
          title: Tools
          description: Available tools
      type: object
      required:
      - tools
      title: AvailableToolsResponse
      description: Schema for available tools response.
    BackupListResponse:
      properties:
        backups:
          items:
            $ref: '#/components/schemas/BackupResponse'
          type: array
          title: Backups
          description: List of backups
        total:
          type: integer
          title: Total
          description: Total number of backups
      type: object
      required:
      - backups
      - total
      title: BackupListResponse
      description: Response schema for backup list.
    BackupRequest:
      properties:
        backup_type:
          $ref: '#/components/schemas/BackupType'
          description: Backup type
          default: full
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
          description: Backup name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Backup description
        include_files:
          type: boolean
          title: Include Files
          description: Include uploaded files
          default: true
        include_logs:
          type: boolean
          title: Include Logs
          description: Include system logs
          default: false
        compress:
          type: boolean
          title: Compress
          description: Compress backup
          default: true
        encrypt:
          type: boolean
          title: Encrypt
          description: Encrypt backup
          default: true
        retention_days:
          type: integer
          maximum: 365.0
          minimum: 1.0
          title: Retention Days
          description: Backup retention in days
          default: 30
      type: object
      title: BackupRequest
      description: Request schema for creating a backup via API.
    BackupResponse:
      properties:
        id:
          type: string
          title: Id
          description: Backup ID
        name:
          type: string
          title: Name
          description: Backup name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Backup description
        backup_type:
          $ref: '#/components/schemas/BackupType'
          description: Backup type
        status:
          type: string
          title: Status
          description: Backup status
        file_size:
          anyOf:
          - type: integer
          - type: 'null'
          title: File Size
          description: Backup file size in bytes
        compressed_size:
          anyOf:
          - type: integer
          - type: 'null'
          title: Compressed Size
          description: Compressed size in bytes
        record_count:
          anyOf:
          - type: integer
          - type: 'null'
          title: Record Count
          description: Number of records backed up
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Backup creation timestamp
        completed_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Completed At
          description: Backup completion timestamp
        expires_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Expires At
          description: Backup expiration timestamp
        encrypted:
          type: boolean
          title: Encrypted
          description: Whether backup is encrypted
        compressed:
          type: boolean
          title: Compressed
          description: Whether backup is compressed
        metadata:
          additionalProperties: true
          type: object
          title: Metadata
          description: Backup metadata
      type: object
      required:
      - id
      - name
      - backup_type
      - status
      - created_at
      - encrypted
      - compressed
      - metadata
      title: BackupResponse
      description: Response schema for backup data.
    BackupType:
      type: string
      enum:
      - full
      - incremental
      - differential
      title: BackupType
      description: Types of backups.
    Body_list_agents_api_v1_agents__get:
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationRequest'
          default:
            limit: 50
            offset: 0
        sorting:
          $ref: '#/components/schemas/SortingRequest'
          default:
            sort_by: created_at
            sort_order: desc
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
      type: object
      title: Body_list_agents_api_v1_agents__get
    Body_upload_document_api_v1_documents_upload_post:
      properties:
        file:
          type: string
          format: binary
          title: File
        title:
          type: string
          title: Title
        description:
          type: string
          title: Description
        tags:
          type: string
          title: Tags
        chunk_size:
          type: integer
          title: Chunk Size
          default: 1000
        chunk_overlap:
          type: integer
          title: Chunk Overlap
          default: 200
        is_public:
          type: boolean
          title: Is Public
          default: false
      type: object
      required:
      - file
      title: Body_upload_document_api_v1_documents_upload_post
    BulkDeleteResponse:
      properties:
        total_requested:
          type: integer
          title: Total Requested
          description: Total number of items requested for deletion
        successful_deletions:
          type: integer
          title: Successful Deletions
          description: Number of successful deletions
        failed_deletions:
          type: integer
          title: Failed Deletions
          description: Number of failed deletions
        errors:
          items:
            type: string
          type: array
          title: Errors
          description: List of error messages for failed deletions
      type: object
      required:
      - total_requested
      - successful_deletions
      - failed_deletions
      - errors
      title: BulkDeleteResponse
      description: Response schema for bulk delete operations.
    BulkOperationResult:
      properties:
        total_requested:
          type: integer
          title: Total Requested
          description: Total servers requested
        successful:
          type: integer
          title: Successful
          description: Successfully processed
        failed:
          type: integer
          title: Failed
          description: Failed to process
        results:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Results
          description: Detailed results
        errors:
          items:
            type: string
          type: array
          title: Errors
          description: Error messages
      type: object
      required:
      - total_requested
      - successful
      - failed
      - results
      title: BulkOperationResult
      description: Schema for bulk operation results.
    BulkToolServerOperation:
      properties:
        server_ids:
          items:
            type: string
          type: array
          minItems: 1
          title: Server Ids
          description: List of server IDs
        operation:
          type: string
          title: Operation
          description: Operation to perform
        parameters:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Parameters
          description: Operation parameters
      type: object
      required:
      - server_ids
      - operation
      title: BulkToolServerOperation
      description: Schema for bulk operations on tool servers.
    ChatRequest:
      properties:
        message:
          type: string
          title: Message
          description: User message
        conversation_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Conversation Id
          description: Conversation ID for continuing chat
        profile_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Profile Id
          description: Profile ID to use
        stream:
          type: boolean
          title: Stream
          description: Enable streaming response
          default: false
        workflow:
          type: string
          enum:
          - plain
          - rag
          - tools
          - full
          title: Workflow
          description: 'Workflow type: plain, rag, tools, or full (rag + tools)'
          default: plain
        provider:
          anyOf:
          - type: string
          - type: 'null'
          title: Provider
          description: Override LLM provider for this request
        temperature:
          anyOf:
          - type: number
            maximum: 2.0
            minimum: 0.0
          - type: 'null'
          title: Temperature
          description: Temperature override
        max_tokens:
          anyOf:
          - type: integer
            maximum: 8192.0
            minimum: 1.0
          - type: 'null'
          title: Max Tokens
          description: Max tokens override
        enable_retrieval:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Enable Retrieval
          description: Enable retrieval override
        document_ids:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Document Ids
          description: Document IDs to include in context
        system_prompt_override:
          anyOf:
          - type: string
          - type: 'null'
          title: System Prompt Override
          description: Override system prompt for this request
      type: object
      required:
      - message
      title: ChatRequest
      description: Schema for chat request.
    ChatResponse:
      properties:
        conversation_id:
          type: string
          title: Conversation Id
          description: Conversation ID
        message:
          $ref: '#/components/schemas/MessageResponse'
          description: Assistant response message
        conversation:
          $ref: '#/components/schemas/ConversationResponse'
          description: Updated conversation
      type: object
      required:
      - conversation_id
      - message
      - conversation
      title: ChatResponse
      description: Schema for chat response.
    ConversationCreate:
      properties:
        title:
          type: string
          title: Title
          description: Conversation title
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Conversation description
        profile_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Profile Id
          description: Profile ID to use
        system_prompt:
          anyOf:
          - type: string
          - type: 'null'
          title: System Prompt
          description: System prompt
        enable_retrieval:
          type: boolean
          title: Enable Retrieval
          description: Enable document retrieval
          default: false
      type: object
      required:
      - title
      title: ConversationCreate
      description: Schema for creating a conversation.
    ConversationDeleteResponse:
      properties:
        message:
          type: string
          title: Message
          description: Success message
      type: object
      required:
      - message
      title: ConversationDeleteResponse
      description: Schema for conversation delete response.
    ConversationResponse:
      properties:
        title:
          type: string
          title: Title
          description: Conversation title
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Conversation description
        id:
          type: string
          title: Id
          description: Conversation ID
        user_id:
          type: string
          title: User Id
          description: User ID
        profile_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Profile Id
          description: Profile ID
        status:
          $ref: '#/components/schemas/ConversationStatus'
          description: Conversation status
        llm_provider:
          anyOf:
          - type: string
          - type: 'null'
          title: Llm Provider
          description: LLM provider
        llm_model:
          anyOf:
          - type: string
          - type: 'null'
          title: Llm Model
          description: LLM model
        temperature:
          anyOf:
          - type: number
          - type: 'null'
          title: Temperature
          description: Temperature setting
        max_tokens:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Tokens
          description: Max tokens setting
        enable_retrieval:
          type: boolean
          title: Enable Retrieval
          description: Retrieval enabled
        message_count:
          type: integer
          title: Message Count
          description: Number of messages
        total_tokens:
          type: integer
          title: Total Tokens
          description: Total tokens used
        total_cost:
          type: number
          title: Total Cost
          description: Total cost
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          title: Updated At
          description: Last update timestamp
        last_message_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Message At
          description: Last message timestamp
      type: object
      required:
      - title
      - id
      - user_id
      - status
      - enable_retrieval
      - message_count
      - total_tokens
      - total_cost
      - created_at
      - updated_at
      title: ConversationResponse
      description: Schema for conversation response.
    ConversationSearchResponse:
      properties:
        conversations:
          items:
            $ref: '#/components/schemas/ConversationResponse'
          type: array
          title: Conversations
          description: Conversations
        total:
          type: integer
          title: Total
          description: Total number of conversations
        limit:
          type: integer
          title: Limit
          description: Request limit
        offset:
          type: integer
          title: Offset
          description: Request offset
      type: object
      required:
      - conversations
      - total
      - limit
      - offset
      title: ConversationSearchResponse
      description: Schema for conversation search response.
    ConversationStatsResponse:
      properties:
        total_conversations:
          type: integer
          title: Total Conversations
          description: Total number of conversations
        conversations_by_status:
          additionalProperties:
            type: integer
          type: object
          title: Conversations By Status
          description: Conversations grouped by status
        total_messages:
          type: integer
          title: Total Messages
          description: Total number of messages
        messages_by_role:
          additionalProperties:
            type: integer
          type: object
          title: Messages By Role
          description: Messages grouped by role
        avg_messages_per_conversation:
          type: number
          title: Avg Messages Per Conversation
          description: Average messages per conversation
        total_tokens_used:
          type: integer
          title: Total Tokens Used
          description: Total tokens used
        total_cost:
          type: number
          title: Total Cost
          description: Total cost incurred
        avg_response_time_ms:
          type: number
          title: Avg Response Time Ms
          description: Average response time in milliseconds
        conversations_by_date:
          additionalProperties:
            type: integer
          type: object
          title: Conversations By Date
          description: Conversations by date
        most_active_hours:
          additionalProperties:
            type: integer
          type: object
          title: Most Active Hours
          description: Most active hours
        popular_models:
          additionalProperties:
            type: integer
          type: object
          title: Popular Models
          description: Popular LLM models
        popular_providers:
          additionalProperties:
            type: integer
          type: object
          title: Popular Providers
          description: Popular LLM providers
      type: object
      required:
      - total_conversations
      - conversations_by_status
      - total_messages
      - messages_by_role
      - avg_messages_per_conversation
      - total_tokens_used
      - total_cost
      - avg_response_time_ms
      - conversations_by_date
      - most_active_hours
      - popular_models
      - popular_providers
      title: ConversationStatsResponse
      description: Schema for conversation statistics response.
    ConversationStatus:
      type: string
      enum:
      - active
      - archived
      - deleted
      title: ConversationStatus
      description: Enumeration for conversation status.
    ConversationUpdate:
      properties:
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
          description: Conversation title
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Conversation description
        status:
          anyOf:
          - $ref: '#/components/schemas/ConversationStatus'
          - type: 'null'
          description: Conversation status
      type: object
      title: ConversationUpdate
      description: Schema for updating a conversation.
    ConversationWithMessages:
      properties:
        title:
          type: string
          title: Title
          description: Conversation title
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Conversation description
        id:
          type: string
          title: Id
          description: Conversation ID
        user_id:
          type: string
          title: User Id
          description: User ID
        profile_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Profile Id
          description: Profile ID
        status:
          $ref: '#/components/schemas/ConversationStatus'
          description: Conversation status
        llm_provider:
          anyOf:
          - type: string
          - type: 'null'
          title: Llm Provider
          description: LLM provider
        llm_model:
          anyOf:
          - type: string
          - type: 'null'
          title: Llm Model
          description: LLM model
        temperature:
          anyOf:
          - type: number
          - type: 'null'
          title: Temperature
          description: Temperature setting
        max_tokens:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Tokens
          description: Max tokens setting
        enable_retrieval:
          type: boolean
          title: Enable Retrieval
          description: Retrieval enabled
        message_count:
          type: integer
          title: Message Count
          description: Number of messages
        total_tokens:
          type: integer
          title: Total Tokens
          description: Total tokens used
        total_cost:
          type: number
          title: Total Cost
          description: Total cost
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          title: Updated At
          description: Last update timestamp
        last_message_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Message At
          description: Last message timestamp
        messages:
          items:
            $ref: '#/components/schemas/MessageResponse'
          type: array
          title: Messages
          description: Conversation messages
      type: object
      required:
      - title
      - id
      - user_id
      - status
      - enable_retrieval
      - message_count
      - total_tokens
      - total_cost
      - created_at
      - updated_at
      title: ConversationWithMessages
      description: Schema for conversation with messages.
    CorrelationTraceResponse:
      properties:
        correlation_id:
          type: string
          title: Correlation Id
          description: Correlation ID
        trace_length:
          type: integer
          title: Trace Length
          description: Number of requests in trace
        requests:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Requests
          description: List of requests in trace
      type: object
      required:
      - correlation_id
      - trace_length
      - requests
      title: CorrelationTraceResponse
      description: Schema for correlation trace response.
    DashboardResponse:
      properties:
        conversation_stats:
          $ref: '#/components/schemas/ConversationStatsResponse'
          description: Conversation statistics
        usage_metrics:
          $ref: '#/components/schemas/UsageMetricsResponse'
          description: Usage metrics
        performance_metrics:
          $ref: '#/components/schemas/PerformanceMetricsResponse'
          description: Performance metrics
        document_analytics:
          $ref: '#/components/schemas/DocumentAnalyticsResponse'
          description: Document analytics
        system_health:
          $ref: '#/components/schemas/SystemAnalyticsResponse'
          description: System health metrics
        custom_metrics:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Custom Metrics
          description: Custom metrics
        generated_at:
          type: string
          format: date-time
          title: Generated At
          description: Dashboard generation time
      type: object
      required:
      - conversation_stats
      - usage_metrics
      - performance_metrics
      - document_analytics
      - system_health
      - custom_metrics
      - generated_at
      title: DashboardResponse
      description: Schema for analytics dashboard response.
    DataFormat:
      type: string
      enum:
      - json
      - csv
      - xml
      - parquet
      - sql
      title: DataFormat
      description: Supported data formats.
    DefaultProvider:
      properties:
        provider_id:
          type: string
          title: Provider Id
        model_type:
          $ref: '#/components/schemas/ModelType'
      type: object
      required:
      - provider_id
      - model_type
      title: DefaultProvider
      description: Schema for setting default provider.
    DistanceMetric:
      type: string
      enum:
      - cosine
      - l2
      - ip
      title: DistanceMetric
      description: Distance metrics for vector similarity.
    DocumentAnalyticsResponse:
      properties:
        total_documents:
          type: integer
          title: Total Documents
          description: Total number of documents
        documents_by_status:
          additionalProperties:
            type: integer
          type: object
          title: Documents By Status
          description: Documents by processing status
        documents_by_type:
          additionalProperties:
            type: integer
          type: object
          title: Documents By Type
          description: Documents by file type
        avg_processing_time_seconds:
          type: number
          title: Avg Processing Time Seconds
          description: Average processing time
        processing_success_rate:
          type: number
          title: Processing Success Rate
          description: Processing success rate
        total_chunks:
          type: integer
          title: Total Chunks
          description: Total number of chunks
        avg_chunks_per_document:
          type: number
          title: Avg Chunks Per Document
          description: Average chunks per document
        total_storage_bytes:
          type: integer
          title: Total Storage Bytes
          description: Total storage used
        avg_document_size_bytes:
          type: number
          title: Avg Document Size Bytes
          description: Average document size
        storage_by_type:
          additionalProperties:
            type: integer
          type: object
          title: Storage By Type
          description: Storage usage by document type
        total_searches:
          type: integer
          title: Total Searches
          description: Total number of searches
        avg_search_results:
          type: number
          title: Avg Search Results
          description: Average search results returned
        popular_search_terms:
          additionalProperties:
            type: integer
          type: object
          title: Popular Search Terms
          description: Popular search terms
        total_views:
          type: integer
          title: Total Views
          description: Total document views
        most_viewed_documents:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Most Viewed Documents
          description: Most viewed documents
        documents_by_access_level:
          additionalProperties:
            type: integer
          type: object
          title: Documents By Access Level
          description: Documents by access level
      type: object
      required:
      - total_documents
      - documents_by_status
      - documents_by_type
      - avg_processing_time_seconds
      - processing_success_rate
      - total_chunks
      - avg_chunks_per_document
      - total_storage_bytes
      - avg_document_size_bytes
      - storage_by_type
      - total_searches
      - avg_search_results
      - popular_search_terms
      - total_views
      - most_viewed_documents
      - documents_by_access_level
      title: DocumentAnalyticsResponse
      description: Schema for document analytics response.
    DocumentChunkResponse:
      properties:
        id:
          type: string
          title: Id
          description: Chunk ID
        document_id:
          type: string
          title: Document Id
          description: Document ID
        content:
          type: string
          title: Content
          description: Chunk content
        chunk_index:
          type: integer
          title: Chunk Index
          description: Chunk index
        start_char:
          anyOf:
          - type: integer
          - type: 'null'
          title: Start Char
          description: Start character position
        end_char:
          anyOf:
          - type: integer
          - type: 'null'
          title: End Char
          description: End character position
        extra_metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Extra Metadata
          description: Chunk metadata
        token_count:
          anyOf:
          - type: integer
          - type: 'null'
          title: Token Count
          description: Token count
        language:
          anyOf:
          - type: string
          - type: 'null'
          title: Language
          description: Detected language
        embedding_model:
          anyOf:
          - type: string
          - type: 'null'
          title: Embedding Model
          description: Embedding model used
        embedding_provider:
          anyOf:
          - type: string
          - type: 'null'
          title: Embedding Provider
          description: Embedding provider
        embedding_created_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Embedding Created At
          description: Embedding creation time
        content_hash:
          type: string
          title: Content Hash
          description: Content hash
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Creation time
        updated_at:
          type: string
          format: date-time
          title: Updated At
          description: Last update time
      type: object
      required:
      - id
      - document_id
      - content
      - chunk_index
      - content_hash
      - created_at
      - updated_at
      title: DocumentChunkResponse
      description: Schema for document chunk response.
    DocumentChunksResponse:
      properties:
        chunks:
          items:
            $ref: '#/components/schemas/DocumentChunkResponse'
          type: array
          title: Chunks
          description: List of document chunks
        total_count:
          type: integer
          title: Total Count
          description: Total number of chunks
        limit:
          type: integer
          title: Limit
          description: Applied limit
        offset:
          type: integer
          title: Offset
          description: Applied offset
      type: object
      required:
      - chunks
      - total_count
      - limit
      - offset
      title: DocumentChunksResponse
      description: Schema for document chunks response with pagination.
    DocumentDeleteResponse:
      properties:
        message:
          type: string
          title: Message
          description: Deletion result message
      type: object
      required:
      - message
      title: DocumentDeleteResponse
      description: Response schema for document deletion.
    DocumentListResponse:
      properties:
        documents:
          items:
            $ref: '#/components/schemas/DocumentResponse'
          type: array
          title: Documents
          description: List of documents
        total_count:
          type: integer
          title: Total Count
          description: Total number of documents
        limit:
          type: integer
          title: Limit
          description: Applied limit
        offset:
          type: integer
          title: Offset
          description: Applied offset
      type: object
      required:
      - documents
      - total_count
      - limit
      - offset
      title: DocumentListResponse
      description: Schema for document list response.
    DocumentProcessingRequest:
      properties:
        reprocess:
          type: boolean
          title: Reprocess
          description: Force reprocessing
          default: false
        chunk_size:
          anyOf:
          - type: integer
            maximum: 10000.0
            minimum: 100.0
          - type: 'null'
          title: Chunk Size
          description: Override chunk size
        chunk_overlap:
          anyOf:
          - type: integer
            maximum: 2000.0
            minimum: 0.0
          - type: 'null'
          title: Chunk Overlap
          description: Override chunk overlap
        generate_embeddings:
          type: boolean
          title: Generate Embeddings
          description: Generate embeddings for chunks
          default: true
      type: object
      title: DocumentProcessingRequest
      description: Schema for document processing request.
    DocumentProcessingResponse:
      properties:
        document_id:
          type: string
          title: Document Id
          description: Document ID
        status:
          $ref: '#/components/schemas/DocumentStatus'
          description: Processing status
        message:
          type: string
          title: Message
          description: Status message
        processing_started_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Processing Started At
          description: Processing start time
      type: object
      required:
      - document_id
      - status
      - message
      title: DocumentProcessingResponse
      description: Schema for document processing response.
    DocumentResponse:
      properties:
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
          description: Document title
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Document description
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
          description: Document tags
        extra_metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Extra Metadata
          description: Additional metadata
        is_public:
          type: boolean
          title: Is Public
          description: Whether document is public
          default: false
        id:
          type: string
          title: Id
          description: Document ID
        owner_id:
          type: string
          title: Owner Id
          description: Owner user ID
        filename:
          type: string
          title: Filename
          description: Document filename
        original_filename:
          type: string
          title: Original Filename
          description: Original filename
        file_size:
          type: integer
          title: File Size
          description: File size in bytes
        file_hash:
          type: string
          title: File Hash
          description: File hash (SHA-256)
        mime_type:
          type: string
          title: Mime Type
          description: MIME type
        document_type:
          $ref: '#/components/schemas/DocumentType'
          description: Document type
        status:
          $ref: '#/components/schemas/DocumentStatus'
          description: Processing status
        processing_started_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Processing Started At
          description: Processing start time
        processing_completed_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Processing Completed At
          description: Processing completion time
        processing_error:
          anyOf:
          - type: string
          - type: 'null'
          title: Processing Error
          description: Processing error message
        chunk_size:
          type: integer
          title: Chunk Size
          description: Chunk size
        chunk_overlap:
          type: integer
          title: Chunk Overlap
          description: Chunk overlap
        chunk_count:
          type: integer
          title: Chunk Count
          description: Number of chunks
        version:
          type: integer
          title: Version
          description: Document version
        parent_document_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Parent Document Id
          description: Parent document ID
        view_count:
          type: integer
          title: View Count
          description: View count
        search_count:
          type: integer
          title: Search Count
          description: Search count
        last_accessed_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Accessed At
          description: Last access time
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Creation time
        updated_at:
          type: string
          format: date-time
          title: Updated At
          description: Last update time
      type: object
      required:
      - id
      - owner_id
      - filename
      - original_filename
      - file_size
      - file_hash
      - mime_type
      - document_type
      - status
      - chunk_size
      - chunk_overlap
      - chunk_count
      - version
      - view_count
      - search_count
      - created_at
      - updated_at
      title: DocumentResponse
      description: Schema for document response.
    DocumentSearchRequest:
      properties:
        query:
          type: string
          maxLength: 1000
          minLength: 1
          title: Query
          description: Search query
        limit:
          type: integer
          maximum: 100.0
          minimum: 1.0
          title: Limit
          description: Maximum number of results
          default: 10
        score_threshold:
          type: number
          maximum: 1.0
          minimum: 0.0
          title: Score Threshold
          description: Minimum similarity score
          default: 0.5
        document_types:
          anyOf:
          - items:
              $ref: '#/components/schemas/DocumentType'
            type: array
          - type: 'null'
          title: Document Types
          description: Filter by document types
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
          description: Filter by tags
        include_content:
          type: boolean
          title: Include Content
          description: Include document content in results
          default: false
      type: object
      required:
      - query
      title: DocumentSearchRequest
      description: Schema for document search request.
    DocumentSearchResponse:
      properties:
        results:
          items:
            $ref: '#/components/schemas/DocumentSearchResult'
          type: array
          title: Results
          description: Search results
        total_results:
          type: integer
          title: Total Results
          description: Total number of matching results
        query:
          type: string
          title: Query
          description: Original search query
        score_threshold:
          type: number
          title: Score Threshold
          description: Applied score threshold
      type: object
      required:
      - results
      - total_results
      - query
      - score_threshold
      title: DocumentSearchResponse
      description: Schema for document search response.
    DocumentSearchResult:
      properties:
        document_id:
          type: string
          title: Document Id
          description: Document ID
        chunk_id:
          type: string
          title: Chunk Id
          description: Chunk ID
        score:
          type: number
          title: Score
          description: Similarity score
        content:
          type: string
          title: Content
          description: Matching content
        metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Metadata
          description: Chunk metadata
        document:
          $ref: '#/components/schemas/DocumentResponse'
          description: Document information
      type: object
      required:
      - document_id
      - chunk_id
      - score
      - content
      - document
      title: DocumentSearchResult
      description: Schema for document search result.
    DocumentStatsResponse:
      properties:
        total_documents:
          type: integer
          title: Total Documents
          description: Total number of documents
        total_chunks:
          type: integer
          title: Total Chunks
          description: Total number of chunks
        total_size_bytes:
          type: integer
          title: Total Size Bytes
          description: Total size in bytes
        documents_by_status:
          additionalProperties:
            type: integer
          type: object
          title: Documents By Status
          description: Documents grouped by status
        documents_by_type:
          additionalProperties:
            type: integer
          type: object
          title: Documents By Type
          description: Documents grouped by type
        processing_stats:
          additionalProperties: true
          type: object
          title: Processing Stats
          description: Processing statistics
      type: object
      required:
      - total_documents
      - total_chunks
      - total_size_bytes
      - documents_by_status
      - documents_by_type
      - processing_stats
      title: DocumentStatsResponse
      description: Schema for document statistics response.
    DocumentStatus:
      type: string
      enum:
      - pending
      - processing
      - processed
      - failed
      - archived
      title: DocumentStatus
      description: Enumeration for document processing status.
    DocumentType:
      type: string
      enum:
      - pdf
      - text
      - markdown
      - html
      - doc
      - docx
      - rtf
      - odt
      - csv
      - json
      - xml
      - other
      title: DocumentType
      description: Enumeration for document types.
    DocumentUpdate:
      properties:
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
          description: Document title
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Document description
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
          description: Document tags
        extra_metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Extra Metadata
          description: Additional metadata
        is_public:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Public
          description: Whether document is public
      type: object
      title: DocumentUpdate
      description: Schema for updating a document.
    EmbeddingSpaceCreate:
      properties:
        name:
          type: string
          title: Name
          description: Unique space name
        display_name:
          type: string
          title: Display Name
          description: Human-readable name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Space description
        base_dimensions:
          type: integer
          title: Base Dimensions
          description: Original model dimensions
        effective_dimensions:
          type: integer
          title: Effective Dimensions
          description: Effective dimensions after reduction
        reduction_strategy:
          $ref: '#/components/schemas/ReductionStrategy'
          description: Reduction strategy
          default: none
        reducer_path:
          anyOf:
          - type: string
          - type: 'null'
          title: Reducer Path
          description: Path to reducer file
        reducer_version:
          anyOf:
          - type: string
          - type: 'null'
          title: Reducer Version
          description: Reducer version/hash
        normalize_vectors:
          type: boolean
          title: Normalize Vectors
          description: Whether to normalize vectors
          default: true
        distance_metric:
          $ref: '#/components/schemas/DistanceMetric'
          description: Distance metric
          default: cosine
        table_name:
          type: string
          title: Table Name
          description: Database table name
        index_type:
          type: string
          title: Index Type
          description: Index type
          default: hnsw
        index_config:
          additionalProperties: true
          type: object
          title: Index Config
          description: Index configuration
        is_active:
          type: boolean
          title: Is Active
          description: Whether space is active
          default: true
        is_default:
          type: boolean
          title: Is Default
          description: Whether this is the default space
          default: false
        model_id:
          type: string
          title: Model Id
          description: Model ID
      type: object
      required:
      - name
      - display_name
      - base_dimensions
      - effective_dimensions
      - table_name
      - model_id
      title: EmbeddingSpaceCreate
      description: Schema for creating an embedding space.
    EmbeddingSpaceDefaultResponse:
      properties:
        message:
          type: string
          title: Message
          description: Operation result message
      type: object
      required:
      - message
      title: EmbeddingSpaceDefaultResponse
      description: Response schema for setting default embedding space.
    EmbeddingSpaceDeleteResponse:
      properties:
        message:
          type: string
          title: Message
          description: Deletion result message
      type: object
      required:
      - message
      title: EmbeddingSpaceDeleteResponse
      description: Response schema for embedding space deletion.
    EmbeddingSpaceList:
      properties:
        spaces:
          items:
            $ref: '#/components/schemas/EmbeddingSpaceWithModel'
          type: array
          title: Spaces
        total:
          type: integer
          title: Total
        page:
          type: integer
          title: Page
        per_page:
          type: integer
          title: Per Page
      type: object
      required:
      - spaces
      - total
      - page
      - per_page
      title: EmbeddingSpaceList
      description: List of embedding spaces with pagination.
    EmbeddingSpaceUpdate:
      properties:
        display_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Display Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        reduction_strategy:
          anyOf:
          - $ref: '#/components/schemas/ReductionStrategy'
          - type: 'null'
        reducer_path:
          anyOf:
          - type: string
          - type: 'null'
          title: Reducer Path
        reducer_version:
          anyOf:
          - type: string
          - type: 'null'
          title: Reducer Version
        normalize_vectors:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Normalize Vectors
        distance_metric:
          anyOf:
          - $ref: '#/components/schemas/DistanceMetric'
          - type: 'null'
        index_type:
          anyOf:
          - type: string
          - type: 'null'
          title: Index Type
        index_config:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Index Config
        is_active:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Active
        is_default:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Default
      type: object
      title: EmbeddingSpaceUpdate
      description: Schema for updating an embedding space.
    EmbeddingSpaceWithModel:
      properties:
        name:
          type: string
          title: Name
          description: Unique space name
        display_name:
          type: string
          title: Display Name
          description: Human-readable name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Space description
        base_dimensions:
          type: integer
          title: Base Dimensions
          description: Original model dimensions
        effective_dimensions:
          type: integer
          title: Effective Dimensions
          description: Effective dimensions after reduction
        reduction_strategy:
          $ref: '#/components/schemas/ReductionStrategy'
          description: Reduction strategy
          default: none
        reducer_path:
          anyOf:
          - type: string
          - type: 'null'
          title: Reducer Path
          description: Path to reducer file
        reducer_version:
          anyOf:
          - type: string
          - type: 'null'
          title: Reducer Version
          description: Reducer version/hash
        normalize_vectors:
          type: boolean
          title: Normalize Vectors
          description: Whether to normalize vectors
          default: true
        distance_metric:
          $ref: '#/components/schemas/DistanceMetric'
          description: Distance metric
          default: cosine
        table_name:
          type: string
          title: Table Name
          description: Database table name
        index_type:
          type: string
          title: Index Type
          description: Index type
          default: hnsw
        index_config:
          additionalProperties: true
          type: object
          title: Index Config
          description: Index configuration
        is_active:
          type: boolean
          title: Is Active
          description: Whether space is active
          default: true
        is_default:
          type: boolean
          title: Is Default
          description: Whether this is the default space
          default: false
        id:
          type: string
          title: Id
        model_id:
          type: string
          title: Model Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        model:
          $ref: '#/components/schemas/ModelDefWithProvider'
      type: object
      required:
      - name
      - display_name
      - base_dimensions
      - effective_dimensions
      - table_name
      - id
      - model_id
      - created_at
      - updated_at
      - model
      title: EmbeddingSpaceWithModel
      description: Embedding space with model and provider information.
    ExportDataRequest:
      properties:
        scope:
          $ref: '#/components/schemas/ExportScope'
          description: Export scope
        format:
          $ref: '#/components/schemas/DataFormat'
          description: Export format
          default: json
        user_id:
          anyOf:
          - type: string
          - type: 'null'
          title: User Id
          description: Filter by user ID
        conversation_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Conversation Id
          description: Filter by conversation ID
        date_from:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Date From
          description: Filter from date
        date_to:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Date To
          description: Filter to date
        include_metadata:
          type: boolean
          title: Include Metadata
          description: Include metadata
          default: true
        compress:
          type: boolean
          title: Compress
          description: Compress export file
          default: true
        encrypt:
          type: boolean
          title: Encrypt
          description: Encrypt export file
          default: false
        custom_query:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Custom Query
          description: Custom export query
      type: object
      required:
      - scope
      title: ExportDataRequest
      description: Request schema for data export API.
    ExportDataResponse:
      properties:
        export_id:
          type: string
          title: Export Id
          description: Export ID
        status:
          type: string
          title: Status
          description: Export status
        download_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Download Url
          description: Download URL when ready
        file_size:
          anyOf:
          - type: integer
          - type: 'null'
          title: File Size
          description: File size in bytes
        record_count:
          anyOf:
          - type: integer
          - type: 'null'
          title: Record Count
          description: Number of records exported
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Export creation timestamp
        completed_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Completed At
          description: Export completion timestamp
        expires_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Expires At
          description: Download link expiration
      type: object
      required:
      - export_id
      - status
      - created_at
      title: ExportDataResponse
      description: Response schema for data export.
    ExportScope:
      type: string
      enum:
      - user
      - conversation
      - document
      - analytics
      - full
      - custom
      title: ExportScope
      description: Data export scope.
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    HealthCheckResponse:
      properties:
        status:
          type: string
          title: Status
          description: Health status
        service:
          type: string
          title: Service
          description: Service name
        version:
          type: string
          title: Version
          description: Service version
        environment:
          type: string
          title: Environment
          description: Environment
      type: object
      required:
      - status
      - service
      - version
      - environment
      title: HealthCheckResponse
      description: Schema for health check response.
    JobActionResponse:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether action was successful
        message:
          type: string
          title: Message
          description: Action result message
        job_id:
          type: string
          title: Job Id
          description: Job ID
      type: object
      required:
      - success
      - message
      - job_id
      title: JobActionResponse
      description: Response schema for job actions.
    JobCreateRequest:
      properties:
        name:
          type: string
          title: Name
          description: Job name
        function_name:
          type: string
          title: Function Name
          description: Function to execute
        args:
          items: {}
          type: array
          title: Args
          description: Function arguments
        kwargs:
          additionalProperties: true
          type: object
          title: Kwargs
          description: Function keyword arguments
        priority:
          $ref: '#/components/schemas/JobPriority'
          description: Job priority
          default: normal
        max_retries:
          type: integer
          maximum: 10.0
          minimum: 0.0
          title: Max Retries
          description: Maximum retry attempts
          default: 3
        schedule_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Schedule At
          description: Schedule job for later execution
      type: object
      required:
      - name
      - function_name
      title: JobCreateRequest
      description: Request schema for creating a job.
    JobListResponse:
      properties:
        jobs:
          items:
            $ref: '#/components/schemas/JobResponse'
          type: array
          title: Jobs
          description: List of jobs
        total:
          type: integer
          title: Total
          description: Total number of jobs
      type: object
      required:
      - jobs
      - total
      title: JobListResponse
      description: Response schema for job list.
    JobPriority:
      type: string
      enum:
      - low
      - normal
      - high
      - critical
      title: JobPriority
      description: Job priority levels.
    JobResponse:
      properties:
        id:
          type: string
          title: Id
          description: Job ID
        name:
          type: string
          title: Name
          description: Job name
        function_name:
          type: string
          title: Function Name
          description: Function name
        priority:
          $ref: '#/components/schemas/JobPriority'
          description: Job priority
        status:
          $ref: '#/components/schemas/JobStatus'
          description: Job status
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Creation timestamp
        started_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Started At
          description: Start timestamp
        completed_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Completed At
          description: Completion timestamp
        scheduled_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Scheduled At
          description: Scheduled execution time
        retry_count:
          type: integer
          title: Retry Count
          description: Number of retry attempts
        max_retries:
          type: integer
          title: Max Retries
          description: Maximum retry attempts
        error_message:
          anyOf:
          - type: string
          - type: 'null'
          title: Error Message
          description: Error message if failed
        result:
          anyOf:
          - {}
          - type: 'null'
          title: Result
          description: Job result if completed
        progress:
          type: integer
          maximum: 100.0
          minimum: 0.0
          title: Progress
          description: Job progress percentage
          default: 0
        progress_message:
          anyOf:
          - type: string
          - type: 'null'
          title: Progress Message
          description: Progress message
      type: object
      required:
      - id
      - name
      - function_name
      - priority
      - status
      - created_at
      - retry_count
      - max_retries
      title: JobResponse
      description: Response schema for job data.
    JobStatsResponse:
      properties:
        total_jobs:
          type: integer
          title: Total Jobs
          description: Total number of jobs
        pending_jobs:
          type: integer
          title: Pending Jobs
          description: Number of pending jobs
        running_jobs:
          type: integer
          title: Running Jobs
          description: Number of running jobs
        completed_jobs:
          type: integer
          title: Completed Jobs
          description: Number of completed jobs
        failed_jobs:
          type: integer
          title: Failed Jobs
          description: Number of failed jobs
        queue_size:
          type: integer
          title: Queue Size
          description: Current queue size
        active_workers:
          type: integer
          title: Active Workers
          description: Number of active workers
      type: object
      required:
      - total_jobs
      - pending_jobs
      - running_jobs
      - completed_jobs
      - failed_jobs
      - queue_size
      - active_workers
      title: JobStatsResponse
      description: Response schema for job statistics.
    JobStatus:
      type: string
      enum:
      - pending
      - running
      - completed
      - failed
      - cancelled
      - retrying
      title: JobStatus
      description: Job execution status.
    LogoutResponse:
      properties:
        message:
          type: string
          title: Message
          description: Success message
      type: object
      required:
      - message
      title: LogoutResponse
      description: Schema for logout response.
    McpStatusResponse:
      properties:
        status:
          type: string
          title: Status
          description: MCP service status
        servers:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Servers
          description: Connected servers
        last_check:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Check
          description: Last health check time
        errors:
          items:
            type: string
          type: array
          title: Errors
          description: Any error messages
      type: object
      required:
      - status
      - servers
      title: McpStatusResponse
      description: Schema for MCP status response.
    MessageCreate:
      properties:
        role:
          $ref: '#/components/schemas/MessageRole'
          description: Message role
        content:
          type: string
          title: Content
          description: Message content
      type: object
      required:
      - role
      - content
      title: MessageCreate
      description: Schema for creating a message.
    MessageDeleteResponse:
      properties:
        message:
          type: string
          title: Message
          description: Deletion result message
      type: object
      required:
      - message
      title: MessageDeleteResponse
      description: Response schema for message deletion.
    MessageResponse:
      properties:
        role:
          $ref: '#/components/schemas/MessageRole'
          description: Message role
        content:
          type: string
          title: Content
          description: Message content
        id:
          type: string
          title: Id
          description: Message ID
        conversation_id:
          type: string
          title: Conversation Id
          description: Conversation ID
        sequence_number:
          type: integer
          title: Sequence Number
          description: Message sequence number
        prompt_tokens:
          anyOf:
          - type: integer
          - type: 'null'
          title: Prompt Tokens
          description: Prompt tokens used
        completion_tokens:
          anyOf:
          - type: integer
          - type: 'null'
          title: Completion Tokens
          description: Completion tokens used
        total_tokens:
          anyOf:
          - type: integer
          - type: 'null'
          title: Total Tokens
          description: Total tokens used
        model_used:
          anyOf:
          - type: string
          - type: 'null'
          title: Model Used
          description: Model used for generation
        provider_used:
          anyOf:
          - type: string
          - type: 'null'
          title: Provider Used
          description: Provider used
        response_time_ms:
          anyOf:
          - type: integer
          - type: 'null'
          title: Response Time Ms
          description: Response time in milliseconds
        cost:
          anyOf:
          - type: number
          - type: 'null'
          title: Cost
          description: Cost of the message
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Creation timestamp
      type: object
      required:
      - role
      - content
      - id
      - conversation_id
      - sequence_number
      - created_at
      title: MessageResponse
      description: Schema for message response.
    MessageRole:
      type: string
      enum:
      - user
      - assistant
      - system
      - tool
      title: MessageRole
      description: Enumeration for message roles.
    MetricType:
      type: string
      enum:
      - response_time
      - user_satisfaction
      - accuracy
      - engagement
      - conversion
      - error_rate
      - token_usage
      - custom
      title: MetricType
      description: Types of metrics to track.
    MetricsResponse:
      properties:
        timestamp:
          type: string
          title: Timestamp
          description: Metrics collection timestamp
        service:
          type: string
          title: Service
          description: Service name
        version:
          type: string
          title: Version
          description: Service version
        environment:
          type: string
          title: Environment
          description: Environment
        health:
          additionalProperties: true
          type: object
          title: Health
          description: Health metrics
        performance:
          additionalProperties: true
          type: object
          title: Performance
          description: Performance statistics
        endpoints:
          additionalProperties: true
          type: object
          title: Endpoints
          description: Endpoint statistics
      type: object
      required:
      - timestamp
      - service
      - version
      - environment
      - health
      - performance
      - endpoints
      title: MetricsResponse
      description: Schema for application metrics response.
    ModelDefCreate:
      properties:
        name:
          type: string
          title: Name
          description: Model name
        model_type:
          $ref: '#/components/schemas/ModelType'
          description: Type of model
        display_name:
          type: string
          title: Display Name
          description: Human-readable name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Model description
        model_name:
          type: string
          title: Model Name
          description: Actual model name for API calls
        max_tokens:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Tokens
          description: Maximum tokens
        context_length:
          anyOf:
          - type: integer
          - type: 'null'
          title: Context Length
          description: Context length
        dimensions:
          anyOf:
          - type: integer
          - type: 'null'
          title: Dimensions
          description: Embedding dimensions
        chunk_size:
          anyOf:
          - type: integer
          - type: 'null'
          title: Chunk Size
          description: Default chunk size
        supports_batch:
          type: boolean
          title: Supports Batch
          description: Supports batch processing
          default: true
        max_batch_size:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Batch Size
          description: Maximum batch size
        default_config:
          additionalProperties: true
          type: object
          title: Default Config
          description: Default configuration
        is_active:
          type: boolean
          title: Is Active
          description: Whether model is active
          default: true
        is_default:
          type: boolean
          title: Is Default
          description: Whether this is the default model
          default: false
        provider_id:
          type: string
          title: Provider Id
          description: Provider ID
      type: object
      required:
      - name
      - model_type
      - display_name
      - model_name
      - provider_id
      title: ModelDefCreate
      description: Schema for creating a model definition.
    ModelDefList:
      properties:
        models:
          items:
            $ref: '#/components/schemas/ModelDefWithProvider'
          type: array
          title: Models
        total:
          type: integer
          title: Total
        page:
          type: integer
          title: Page
        per_page:
          type: integer
          title: Per Page
      type: object
      required:
      - models
      - total
      - page
      - per_page
      title: ModelDefList
      description: List of model definitions with pagination.
    ModelDefUpdate:
      properties:
        display_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Display Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        model_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Model Name
        max_tokens:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Tokens
        context_length:
          anyOf:
          - type: integer
          - type: 'null'
          title: Context Length
        dimensions:
          anyOf:
          - type: integer
          - type: 'null'
          title: Dimensions
        chunk_size:
          anyOf:
          - type: integer
          - type: 'null'
          title: Chunk Size
        supports_batch:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Supports Batch
        max_batch_size:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Batch Size
        default_config:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Default Config
        is_active:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Active
        is_default:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Default
      type: object
      title: ModelDefUpdate
      description: Schema for updating a model definition.
    ModelDefWithProvider:
      properties:
        name:
          type: string
          title: Name
          description: Model name
        model_type:
          $ref: '#/components/schemas/ModelType'
          description: Type of model
        display_name:
          type: string
          title: Display Name
          description: Human-readable name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Model description
        model_name:
          type: string
          title: Model Name
          description: Actual model name for API calls
        max_tokens:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Tokens
          description: Maximum tokens
        context_length:
          anyOf:
          - type: integer
          - type: 'null'
          title: Context Length
          description: Context length
        dimensions:
          anyOf:
          - type: integer
          - type: 'null'
          title: Dimensions
          description: Embedding dimensions
        chunk_size:
          anyOf:
          - type: integer
          - type: 'null'
          title: Chunk Size
          description: Default chunk size
        supports_batch:
          type: boolean
          title: Supports Batch
          description: Supports batch processing
          default: true
        max_batch_size:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Batch Size
          description: Maximum batch size
        default_config:
          additionalProperties: true
          type: object
          title: Default Config
          description: Default configuration
        is_active:
          type: boolean
          title: Is Active
          description: Whether model is active
          default: true
        is_default:
          type: boolean
          title: Is Default
          description: Whether this is the default model
          default: false
        id:
          type: string
          title: Id
        provider_id:
          type: string
          title: Provider Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
        provider:
          $ref: '#/components/schemas/Provider'
      type: object
      required:
      - name
      - model_type
      - display_name
      - model_name
      - id
      - provider_id
      - created_at
      - updated_at
      - provider
      title: ModelDefWithProvider
      description: Model definition with provider information.
    ModelDefaultResponse:
      properties:
        message:
          type: string
          title: Message
          description: Operation result message
      type: object
      required:
      - message
      title: ModelDefaultResponse
      description: Response schema for setting default model.
    ModelDeleteResponse:
      properties:
        message:
          type: string
          title: Message
          description: Deletion result message
      type: object
      required:
      - message
      title: ModelDeleteResponse
      description: Response schema for model deletion.
    ModelType:
      type: string
      enum:
      - llm
      - embedding
      title: ModelType
      description: Types of AI models.
    OAuthConfigSchema:
      properties:
        client_id:
          type: string
          title: Client Id
          description: OAuth client ID
        client_secret:
          type: string
          title: Client Secret
          description: OAuth client secret
        token_url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Token Url
          description: OAuth token endpoint URL
        scope:
          anyOf:
          - type: string
          - type: 'null'
          title: Scope
          description: OAuth scope
      type: object
      required:
      - client_id
      - client_secret
      - token_url
      title: OAuthConfigSchema
      description: OAuth configuration for remote servers.
    PaginationRequest:
      properties:
        limit:
          type: integer
          maximum: 100.0
          minimum: 1.0
          title: Limit
          description: Maximum number of results
          default: 50
        offset:
          type: integer
          minimum: 0.0
          title: Offset
          description: Number of results to skip
          default: 0
      type: object
      title: PaginationRequest
      description: Common pagination request schema.
    PasswordChange:
      properties:
        current_password:
          type: string
          title: Current Password
          description: Current password
        new_password:
          type: string
          maxLength: 128
          minLength: 8
          title: New Password
          description: New password
      type: object
      required:
      - current_password
      - new_password
      title: PasswordChange
      description: Schema for password change.
    PasswordChangeResponse:
      properties:
        message:
          type: string
          title: Message
          description: Success message
      type: object
      required:
      - message
      title: PasswordChangeResponse
      description: Schema for password change response.
    PasswordResetConfirmResponse:
      properties:
        message:
          type: string
          title: Message
          description: Success message
      type: object
      required:
      - message
      title: PasswordResetConfirmResponse
      description: Schema for password reset confirmation response.
    PasswordResetRequestResponse:
      properties:
        message:
          type: string
          title: Message
          description: Success message
      type: object
      required:
      - message
      title: PasswordResetRequestResponse
      description: Schema for password reset request response.
    PerformanceMetricsResponse:
      properties:
        avg_response_time_ms:
          type: number
          title: Avg Response Time Ms
          description: Average response time
        median_response_time_ms:
          type: number
          title: Median Response Time Ms
          description: Median response time
        p95_response_time_ms:
          type: number
          title: P95 Response Time Ms
          description: 95th percentile response time
        p99_response_time_ms:
          type: number
          title: P99 Response Time Ms
          description: 99th percentile response time
        requests_per_minute:
          type: number
          title: Requests Per Minute
          description: Average requests per minute
        tokens_per_minute:
          type: number
          title: Tokens Per Minute
          description: Average tokens per minute
        total_errors:
          type: integer
          title: Total Errors
          description: Total number of errors
        error_rate:
          type: number
          title: Error Rate
          description: Error rate percentage
        errors_by_type:
          additionalProperties:
            type: integer
          type: object
          title: Errors By Type
          description: Errors grouped by type
        performance_by_model:
          additionalProperties:
            additionalProperties:
              type: number
            type: object
          type: object
          title: Performance By Model
          description: Performance metrics by model
        performance_by_provider:
          additionalProperties:
            additionalProperties:
              type: number
            type: object
          type: object
          title: Performance By Provider
          description: Performance metrics by provider
        database_response_time_ms:
          type: number
          title: Database Response Time Ms
          description: Average database response time
        vector_search_time_ms:
          type: number
          title: Vector Search Time Ms
          description: Average vector search time
        embedding_generation_time_ms:
          type: number
          title: Embedding Generation Time Ms
          description: Average embedding generation time
      type: object
      required:
      - avg_response_time_ms
      - median_response_time_ms
      - p95_response_time_ms
      - p99_response_time_ms
      - requests_per_minute
      - tokens_per_minute
      - total_errors
      - error_rate
      - errors_by_type
      - performance_by_model
      - performance_by_provider
      - database_response_time_ms
      - vector_search_time_ms
      - embedding_generation_time_ms
      title: PerformanceMetricsResponse
      description: Schema for performance metrics response.
    PerformanceStatsResponse:
      properties:
        total_executions:
          type: integer
          title: Total Executions
          description: Total number of executions
        avg_execution_time_ms:
          type: integer
          title: Avg Execution Time Ms
          description: Average execution time in milliseconds
        min_execution_time_ms:
          type: integer
          title: Min Execution Time Ms
          description: Minimum execution time in milliseconds
        max_execution_time_ms:
          type: integer
          title: Max Execution Time Ms
          description: Maximum execution time in milliseconds
        workflow_types:
          additionalProperties:
            type: integer
          type: object
          title: Workflow Types
          description: Execution count by workflow type
        error_counts:
          additionalProperties:
            type: integer
          type: object
          title: Error Counts
          description: Error count by type
        cache_stats:
          additionalProperties: true
          type: object
          title: Cache Stats
          description: Cache statistics
        tool_stats:
          additionalProperties: true
          type: object
          title: Tool Stats
          description: Tool usage statistics
        timestamp:
          type: number
          title: Timestamp
          description: Statistics timestamp
      type: object
      required:
      - total_executions
      - avg_execution_time_ms
      - min_execution_time_ms
      - max_execution_time_ms
      - workflow_types
      - error_counts
      - cache_stats
      - tool_stats
      - timestamp
      title: PerformanceStatsResponse
      description: Schema for performance statistics response.
    PluginActionResponse:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether action was successful
        message:
          type: string
          title: Message
          description: Action result message
        plugin_id:
          type: string
          title: Plugin Id
          description: Plugin ID
      type: object
      required:
      - success
      - message
      - plugin_id
      title: PluginActionResponse
      description: Response schema for plugin actions.
    PluginDeleteResponse:
      properties:
        success:
          type: boolean
          title: Success
          description: Whether deletion was successful
        message:
          type: string
          title: Message
          description: Deletion result message
      type: object
      required:
      - success
      - message
      title: PluginDeleteResponse
      description: Response schema for plugin deletion.
    PluginInstallRequest:
      properties:
        plugin_path:
          type: string
          title: Plugin Path
          description: Path to plugin file or directory
        enable_on_install:
          type: boolean
          title: Enable On Install
          description: Enable plugin after installation
          default: true
      type: object
      required:
      - plugin_path
      title: PluginInstallRequest
      description: Request schema for installing a plugin.
    PluginListResponse:
      properties:
        plugins:
          items:
            $ref: '#/components/schemas/PluginResponse'
          type: array
          title: Plugins
          description: List of plugins
        total:
          type: integer
          title: Total
          description: Total number of plugins
      type: object
      required:
      - plugins
      - total
      title: PluginListResponse
      description: Response schema for plugin list.
    PluginResponse:
      properties:
        id:
          type: string
          title: Id
          description: Plugin ID
        name:
          type: string
          title: Name
          description: Plugin name
        version:
          type: string
          title: Version
          description: Plugin version
        description:
          type: string
          title: Description
          description: Plugin description
        author:
          type: string
          title: Author
          description: Plugin author
        plugin_type:
          $ref: '#/components/schemas/PluginType'
          description: Plugin type
        status:
          $ref: '#/components/schemas/PluginStatus'
          description: Plugin status
        entry_point:
          type: string
          title: Entry Point
          description: Plugin entry point
        capabilities:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Capabilities
          description: Plugin capabilities
        dependencies:
          items:
            type: string
          type: array
          title: Dependencies
          description: Plugin dependencies
        permissions:
          items:
            type: string
          type: array
          title: Permissions
          description: Required permissions
        enabled:
          type: boolean
          title: Enabled
          description: Whether plugin is enabled
        error_message:
          anyOf:
          - type: string
          - type: 'null'
          title: Error Message
          description: Error message if any
        installed_at:
          type: string
          format: date-time
          title: Installed At
          description: Installation timestamp
        updated_at:
          type: string
          format: date-time
          title: Updated At
          description: Last update timestamp
        metadata:
          additionalProperties: true
          type: object
          title: Metadata
          description: Additional metadata
      type: object
      required:
      - id
      - name
      - version
      - description
      - author
      - plugin_type
      - status
      - entry_point
      - capabilities
      - dependencies
      - permissions
      - enabled
      - installed_at
      - updated_at
      - metadata
      title: PluginResponse
      description: Response schema for plugin data.
    PluginStatus:
      type: string
      enum:
      - installed
      - active
      - inactive
      - error
      - updating
      title: PluginStatus
      description: Plugin status.
    PluginType:
      type: string
      enum:
      - tool
      - workflow
      - integration
      - middleware
      - handler
      - extension
      title: PluginType
      description: Types of plugins.
    PluginUpdateRequest:
      properties:
        enabled:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Enabled
          description: Enable/disable plugin
        configuration:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Configuration
          description: Plugin configuration
      type: object
      title: PluginUpdateRequest
      description: Request schema for updating a plugin.
    ProfileCloneRequest:
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
          title: Name
          description: New profile name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: New profile description
        modifications:
          anyOf:
          - $ref: '#/components/schemas/ProfileUpdate'
          - type: 'null'
          description: Modifications to apply to cloned profile
      type: object
      required:
      - name
      title: ProfileCloneRequest
      description: Schema for profile clone request.
    ProfileCreate:
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
          title: Name
          description: Profile name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Profile description
        profile_type:
          $ref: '#/components/schemas/ProfileType'
          description: Profile type
          default: custom
        llm_provider:
          type: string
          title: Llm Provider
          description: LLM provider (openai, anthropic, etc.)
        llm_model:
          type: string
          title: Llm Model
          description: LLM model name
        temperature:
          type: number
          maximum: 2.0
          minimum: 0.0
          title: Temperature
          description: Temperature for generation
          default: 0.7
        top_p:
          anyOf:
          - type: number
            maximum: 1.0
            minimum: 0.0
          - type: 'null'
          title: Top P
          description: Top-p sampling parameter
        top_k:
          anyOf:
          - type: integer
            minimum: 1.0
          - type: 'null'
          title: Top K
          description: Top-k sampling parameter
        max_tokens:
          type: integer
          maximum: 100000.0
          minimum: 1.0
          title: Max Tokens
          description: Maximum tokens to generate
          default: 4096
        presence_penalty:
          anyOf:
          - type: number
            maximum: 2.0
            minimum: -2.0
          - type: 'null'
          title: Presence Penalty
          description: Presence penalty
        frequency_penalty:
          anyOf:
          - type: number
            maximum: 2.0
            minimum: -2.0
          - type: 'null'
          title: Frequency Penalty
          description: Frequency penalty
        context_window:
          type: integer
          maximum: 200000.0
          minimum: 1.0
          title: Context Window
          description: Context window size
          default: 4096
        system_prompt:
          anyOf:
          - type: string
          - type: 'null'
          title: System Prompt
          description: System prompt template
        memory_enabled:
          type: boolean
          title: Memory Enabled
          description: Enable conversation memory
          default: true
        memory_strategy:
          anyOf:
          - type: string
          - type: 'null'
          title: Memory Strategy
          description: Memory management strategy
        enable_retrieval:
          type: boolean
          title: Enable Retrieval
          description: Enable document retrieval
          default: false
        retrieval_limit:
          type: integer
          maximum: 50.0
          minimum: 1.0
          title: Retrieval Limit
          description: Number of documents to retrieve
          default: 5
        retrieval_score_threshold:
          type: number
          maximum: 1.0
          minimum: 0.0
          title: Retrieval Score Threshold
          description: Minimum retrieval score
          default: 0.7
        enable_tools:
          type: boolean
          title: Enable Tools
          description: Enable tool calling
          default: false
        available_tools:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Available Tools
          description: List of available tools
        tool_choice:
          anyOf:
          - type: string
          - type: 'null'
          title: Tool Choice
          description: Tool choice strategy
        content_filter_enabled:
          type: boolean
          title: Content Filter Enabled
          description: Enable content filtering
          default: true
        safety_level:
          anyOf:
          - type: string
          - type: 'null'
          title: Safety Level
          description: Safety level
        response_format:
          anyOf:
          - type: string
          - type: 'null'
          title: Response Format
          description: Response format (json, text, markdown)
        stream_response:
          type: boolean
          title: Stream Response
          description: Enable streaming responses
          default: true
        seed:
          anyOf:
          - type: integer
          - type: 'null'
          title: Seed
          description: Random seed for reproducibility
        stop_sequences:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Stop Sequences
          description: Stop sequences
        logit_bias:
          anyOf:
          - additionalProperties:
              type: number
            type: object
          - type: 'null'
          title: Logit Bias
          description: Logit bias adjustments
        embedding_provider:
          anyOf:
          - type: string
          - type: 'null'
          title: Embedding Provider
          description: Embedding provider
        embedding_model:
          anyOf:
          - type: string
          - type: 'null'
          title: Embedding Model
          description: Embedding model
        is_public:
          type: boolean
          title: Is Public
          description: Whether profile is public
          default: false
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
          description: Profile tags
        extra_metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Extra Metadata
          description: Additional metadata
      type: object
      required:
      - name
      - llm_provider
      - llm_model
      title: ProfileCreate
      description: Schema for creating a profile.
    ProfileDeleteResponse:
      properties:
        message:
          type: string
          title: Message
          description: Success message
      type: object
      required:
      - message
      title: ProfileDeleteResponse
      description: Schema for profile delete response.
    ProfileListResponse:
      properties:
        profiles:
          items:
            $ref: '#/components/schemas/ProfileResponse'
          type: array
          title: Profiles
          description: List of profiles
        total_count:
          type: integer
          title: Total Count
          description: Total number of profiles
        limit:
          type: integer
          title: Limit
          description: Applied limit
        offset:
          type: integer
          title: Offset
          description: Applied offset
      type: object
      required:
      - profiles
      - total_count
      - limit
      - offset
      title: ProfileListResponse
      description: Schema for profile list response.
    ProfileResponse:
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
          title: Name
          description: Profile name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Profile description
        profile_type:
          $ref: '#/components/schemas/ProfileType'
          description: Profile type
          default: custom
        llm_provider:
          type: string
          title: Llm Provider
          description: LLM provider (openai, anthropic, etc.)
        llm_model:
          type: string
          title: Llm Model
          description: LLM model name
        temperature:
          type: number
          maximum: 2.0
          minimum: 0.0
          title: Temperature
          description: Temperature for generation
          default: 0.7
        top_p:
          anyOf:
          - type: number
            maximum: 1.0
            minimum: 0.0
          - type: 'null'
          title: Top P
          description: Top-p sampling parameter
        top_k:
          anyOf:
          - type: integer
            minimum: 1.0
          - type: 'null'
          title: Top K
          description: Top-k sampling parameter
        max_tokens:
          type: integer
          maximum: 100000.0
          minimum: 1.0
          title: Max Tokens
          description: Maximum tokens to generate
          default: 4096
        presence_penalty:
          anyOf:
          - type: number
            maximum: 2.0
            minimum: -2.0
          - type: 'null'
          title: Presence Penalty
          description: Presence penalty
        frequency_penalty:
          anyOf:
          - type: number
            maximum: 2.0
            minimum: -2.0
          - type: 'null'
          title: Frequency Penalty
          description: Frequency penalty
        context_window:
          type: integer
          maximum: 200000.0
          minimum: 1.0
          title: Context Window
          description: Context window size
          default: 4096
        system_prompt:
          anyOf:
          - type: string
          - type: 'null'
          title: System Prompt
          description: System prompt template
        memory_enabled:
          type: boolean
          title: Memory Enabled
          description: Enable conversation memory
          default: true
        memory_strategy:
          anyOf:
          - type: string
          - type: 'null'
          title: Memory Strategy
          description: Memory management strategy
        enable_retrieval:
          type: boolean
          title: Enable Retrieval
          description: Enable document retrieval
          default: false
        retrieval_limit:
          type: integer
          maximum: 50.0
          minimum: 1.0
          title: Retrieval Limit
          description: Number of documents to retrieve
          default: 5
        retrieval_score_threshold:
          type: number
          maximum: 1.0
          minimum: 0.0
          title: Retrieval Score Threshold
          description: Minimum retrieval score
          default: 0.7
        enable_tools:
          type: boolean
          title: Enable Tools
          description: Enable tool calling
          default: false
        available_tools:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Available Tools
          description: List of available tools
        tool_choice:
          anyOf:
          - type: string
          - type: 'null'
          title: Tool Choice
          description: Tool choice strategy
        content_filter_enabled:
          type: boolean
          title: Content Filter Enabled
          description: Enable content filtering
          default: true
        safety_level:
          anyOf:
          - type: string
          - type: 'null'
          title: Safety Level
          description: Safety level
        response_format:
          anyOf:
          - type: string
          - type: 'null'
          title: Response Format
          description: Response format (json, text, markdown)
        stream_response:
          type: boolean
          title: Stream Response
          description: Enable streaming responses
          default: true
        seed:
          anyOf:
          - type: integer
          - type: 'null'
          title: Seed
          description: Random seed for reproducibility
        stop_sequences:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Stop Sequences
          description: Stop sequences
        logit_bias:
          anyOf:
          - additionalProperties:
              type: number
            type: object
          - type: 'null'
          title: Logit Bias
          description: Logit bias adjustments
        embedding_provider:
          anyOf:
          - type: string
          - type: 'null'
          title: Embedding Provider
          description: Embedding provider
        embedding_model:
          anyOf:
          - type: string
          - type: 'null'
          title: Embedding Model
          description: Embedding model
        is_public:
          type: boolean
          title: Is Public
          description: Whether profile is public
          default: false
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
          description: Profile tags
        extra_metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Extra Metadata
          description: Additional metadata
        id:
          type: string
          title: Id
          description: Profile ID
        owner_id:
          type: string
          title: Owner Id
          description: Owner user ID
        usage_count:
          type: integer
          title: Usage Count
          description: Number of times used
        total_tokens_used:
          type: integer
          title: Total Tokens Used
          description: Total tokens used
        total_cost:
          type: number
          title: Total Cost
          description: Total cost incurred
        last_used_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Used At
          description: Last usage time
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Creation time
        updated_at:
          type: string
          format: date-time
          title: Updated At
          description: Last update time
      type: object
      required:
      - name
      - llm_provider
      - llm_model
      - id
      - owner_id
      - usage_count
      - total_tokens_used
      - total_cost
      - created_at
      - updated_at
      title: ProfileResponse
      description: Schema for profile response.
    ProfileStatsResponse:
      properties:
        total_profiles:
          type: integer
          title: Total Profiles
          description: Total number of profiles
        profiles_by_type:
          additionalProperties:
            type: integer
          type: object
          title: Profiles By Type
          description: Profiles grouped by type
        profiles_by_provider:
          additionalProperties:
            type: integer
          type: object
          title: Profiles By Provider
          description: Profiles grouped by LLM provider
        most_used_profiles:
          items:
            $ref: '#/components/schemas/ProfileResponse'
          type: array
          title: Most Used Profiles
          description: Most frequently used profiles
        recent_profiles:
          items:
            $ref: '#/components/schemas/ProfileResponse'
          type: array
          title: Recent Profiles
          description: Recently created profiles
        usage_stats:
          additionalProperties: true
          type: object
          title: Usage Stats
          description: Usage statistics
      type: object
      required:
      - total_profiles
      - profiles_by_type
      - profiles_by_provider
      - most_used_profiles
      - recent_profiles
      - usage_stats
      title: ProfileStatsResponse
      description: Schema for profile statistics response.
    ProfileTestRequest:
      properties:
        test_message:
          type: string
          maxLength: 1000
          minLength: 1
          title: Test Message
          description: Test message
        include_retrieval:
          type: boolean
          title: Include Retrieval
          description: Include retrieval in test
          default: false
        include_tools:
          type: boolean
          title: Include Tools
          description: Include tools in test
          default: false
      type: object
      required:
      - test_message
      title: ProfileTestRequest
      description: Schema for profile test request.
    ProfileTestResponse:
      properties:
        profile_id:
          type: string
          title: Profile Id
          description: Profile ID
        test_message:
          type: string
          title: Test Message
          description: Test message sent
        response:
          type: string
          title: Response
          description: Generated response
        usage_info:
          additionalProperties: true
          type: object
          title: Usage Info
          description: Token usage and cost information
        response_time_ms:
          type: integer
          title: Response Time Ms
          description: Response time in milliseconds
        retrieval_results:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Retrieval Results
          description: Retrieval results if enabled
        tools_used:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tools Used
          description: Tools used if enabled
      type: object
      required:
      - profile_id
      - test_message
      - response
      - usage_info
      - response_time_ms
      title: ProfileTestResponse
      description: Schema for profile test response.
    ProfileType:
      type: string
      enum:
      - conversational
      - analytical
      - creative
      - technical
      - custom
      title: ProfileType
      description: Enumeration for profile types.
    ProfileUpdate:
      properties:
        name:
          anyOf:
          - type: string
            maxLength: 255
            minLength: 1
          - type: 'null'
          title: Name
          description: Profile name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Profile description
        profile_type:
          anyOf:
          - $ref: '#/components/schemas/ProfileType'
          - type: 'null'
          description: Profile type
        llm_provider:
          anyOf:
          - type: string
          - type: 'null'
          title: Llm Provider
          description: LLM provider
        llm_model:
          anyOf:
          - type: string
          - type: 'null'
          title: Llm Model
          description: LLM model name
        temperature:
          anyOf:
          - type: number
            maximum: 2.0
            minimum: 0.0
          - type: 'null'
          title: Temperature
          description: Temperature
        top_p:
          anyOf:
          - type: number
            maximum: 1.0
            minimum: 0.0
          - type: 'null'
          title: Top P
          description: Top-p parameter
        top_k:
          anyOf:
          - type: integer
            minimum: 1.0
          - type: 'null'
          title: Top K
          description: Top-k parameter
        max_tokens:
          anyOf:
          - type: integer
            maximum: 100000.0
            minimum: 1.0
          - type: 'null'
          title: Max Tokens
          description: Maximum tokens
        presence_penalty:
          anyOf:
          - type: number
            maximum: 2.0
            minimum: -2.0
          - type: 'null'
          title: Presence Penalty
          description: Presence penalty
        frequency_penalty:
          anyOf:
          - type: number
            maximum: 2.0
            minimum: -2.0
          - type: 'null'
          title: Frequency Penalty
          description: Frequency penalty
        context_window:
          anyOf:
          - type: integer
            maximum: 200000.0
            minimum: 1.0
          - type: 'null'
          title: Context Window
          description: Context window size
        system_prompt:
          anyOf:
          - type: string
          - type: 'null'
          title: System Prompt
          description: System prompt template
        memory_enabled:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Memory Enabled
          description: Enable conversation memory
        memory_strategy:
          anyOf:
          - type: string
          - type: 'null'
          title: Memory Strategy
          description: Memory management strategy
        enable_retrieval:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Enable Retrieval
          description: Enable document retrieval
        retrieval_limit:
          anyOf:
          - type: integer
            maximum: 50.0
            minimum: 1.0
          - type: 'null'
          title: Retrieval Limit
          description: Number of documents to retrieve
        retrieval_score_threshold:
          anyOf:
          - type: number
            maximum: 1.0
            minimum: 0.0
          - type: 'null'
          title: Retrieval Score Threshold
          description: Minimum retrieval score
        enable_tools:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Enable Tools
          description: Enable tool calling
        available_tools:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Available Tools
          description: List of available tools
        tool_choice:
          anyOf:
          - type: string
          - type: 'null'
          title: Tool Choice
          description: Tool choice strategy
        content_filter_enabled:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Content Filter Enabled
          description: Enable content filtering
        safety_level:
          anyOf:
          - type: string
          - type: 'null'
          title: Safety Level
          description: Safety level
        response_format:
          anyOf:
          - type: string
          - type: 'null'
          title: Response Format
          description: Response format
        stream_response:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Stream Response
          description: Enable streaming responses
        seed:
          anyOf:
          - type: integer
          - type: 'null'
          title: Seed
          description: Random seed
        stop_sequences:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Stop Sequences
          description: Stop sequences
        logit_bias:
          anyOf:
          - additionalProperties:
              type: number
            type: object
          - type: 'null'
          title: Logit Bias
          description: Logit bias adjustments
        embedding_provider:
          anyOf:
          - type: string
          - type: 'null'
          title: Embedding Provider
          description: Embedding provider
        embedding_model:
          anyOf:
          - type: string
          - type: 'null'
          title: Embedding Model
          description: Embedding model
        is_public:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Public
          description: Whether profile is public
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
          description: Profile tags
        extra_metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Extra Metadata
          description: Additional metadata
      type: object
      title: ProfileUpdate
      description: Schema for updating a profile.
    PromptCategory:
      type: string
      enum:
      - general
      - creative
      - analytical
      - technical
      - educational
      - business
      - coding
      - custom
      title: PromptCategory
      description: Enumeration for prompt categories.
    PromptCloneRequest:
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
          title: Name
          description: New prompt name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: New prompt description
        modifications:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Modifications
          description: Modifications to apply
      type: object
      required:
      - name
      title: PromptCloneRequest
      description: Schema for prompt clone request.
    PromptCreate:
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
          title: Name
          description: Prompt name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Prompt description
        prompt_type:
          $ref: '#/components/schemas/PromptType'
          description: Prompt type
          default: template
        category:
          $ref: '#/components/schemas/PromptCategory'
          description: Prompt category
          default: general
        content:
          type: string
          minLength: 1
          title: Content
          description: Prompt content/template
        variables:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Variables
          description: Template variables
        template_format:
          type: string
          title: Template Format
          description: Template format (f-string, jinja2, mustache)
          default: f-string
        input_schema:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Input Schema
          description: JSON schema for input validation
        output_schema:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Output Schema
          description: JSON schema for output validation
        max_length:
          anyOf:
          - type: integer
            minimum: 1.0
          - type: 'null'
          title: Max Length
          description: Maximum content length
        min_length:
          anyOf:
          - type: integer
            minimum: 1.0
          - type: 'null'
          title: Min Length
          description: Minimum content length
        required_variables:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Required Variables
          description: Required template variables
        examples:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Examples
          description: Usage examples
        test_cases:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Test Cases
          description: Test cases
        suggested_temperature:
          anyOf:
          - type: number
            maximum: 2.0
            minimum: 0.0
          - type: 'null'
          title: Suggested Temperature
          description: Suggested temperature
        suggested_max_tokens:
          anyOf:
          - type: integer
            minimum: 1.0
          - type: 'null'
          title: Suggested Max Tokens
          description: Suggested max tokens
        suggested_providers:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Suggested Providers
          description: Suggested LLM providers
        is_chain:
          type: boolean
          title: Is Chain
          description: Whether this is a chain prompt
          default: false
        chain_steps:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Chain Steps
          description: Chain execution steps
        parent_prompt_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Parent Prompt Id
          description: Parent prompt ID for chains
        is_public:
          type: boolean
          title: Is Public
          description: Whether prompt is public
          default: false
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
          description: Prompt tags
        extra_metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Extra Metadata
          description: Additional metadata
      type: object
      required:
      - name
      - content
      title: PromptCreate
      description: Schema for creating a prompt.
    PromptDeleteResponse:
      properties:
        message:
          type: string
          title: Message
          description: Success message
      type: object
      required:
      - message
      title: PromptDeleteResponse
      description: Schema for prompt delete response.
    PromptListResponse:
      properties:
        prompts:
          items:
            $ref: '#/components/schemas/PromptResponse'
          type: array
          title: Prompts
          description: List of prompts
        total_count:
          type: integer
          title: Total Count
          description: Total number of prompts
        limit:
          type: integer
          title: Limit
          description: Requested limit
        offset:
          type: integer
          title: Offset
          description: Requested offset
      type: object
      required:
      - prompts
      - total_count
      - limit
      - offset
      title: PromptListResponse
      description: Schema for prompt list response.
    PromptResponse:
      properties:
        id:
          type: string
          title: Id
          description: Prompt ID
        owner_id:
          type: string
          title: Owner Id
          description: Owner user ID
        name:
          type: string
          title: Name
          description: Prompt name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Prompt description
        prompt_type:
          $ref: '#/components/schemas/PromptType'
          description: Prompt type
        category:
          $ref: '#/components/schemas/PromptCategory'
          description: Prompt category
        content:
          type: string
          title: Content
          description: Prompt content/template
        variables:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Variables
          description: Template variables
        template_format:
          type: string
          title: Template Format
          description: Template format
        input_schema:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Input Schema
          description: Input validation schema
        output_schema:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Output Schema
          description: Output validation schema
        max_length:
          anyOf:
          - type: integer
          - type: 'null'
          title: Max Length
          description: Maximum content length
        min_length:
          anyOf:
          - type: integer
          - type: 'null'
          title: Min Length
          description: Minimum content length
        required_variables:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Required Variables
          description: Required template variables
        examples:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Examples
          description: Usage examples
        test_cases:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Test Cases
          description: Test cases
        suggested_temperature:
          anyOf:
          - type: number
          - type: 'null'
          title: Suggested Temperature
          description: Suggested temperature
        suggested_max_tokens:
          anyOf:
          - type: integer
          - type: 'null'
          title: Suggested Max Tokens
          description: Suggested max tokens
        suggested_providers:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Suggested Providers
          description: Suggested LLM providers
        is_chain:
          type: boolean
          title: Is Chain
          description: Whether this is a chain prompt
        chain_steps:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Chain Steps
          description: Chain execution steps
        parent_prompt_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Parent Prompt Id
          description: Parent prompt ID
        version:
          type: integer
          title: Version
          description: Prompt version
        is_latest:
          type: boolean
          title: Is Latest
          description: Whether this is the latest version
        changelog:
          anyOf:
          - type: string
          - type: 'null'
          title: Changelog
          description: Version changelog
        is_public:
          type: boolean
          title: Is Public
          description: Whether prompt is public
        rating:
          anyOf:
          - type: number
          - type: 'null'
          title: Rating
          description: Average rating
        rating_count:
          type: integer
          title: Rating Count
          description: Number of ratings
        usage_count:
          type: integer
          title: Usage Count
          description: Usage count
        success_rate:
          anyOf:
          - type: number
          - type: 'null'
          title: Success Rate
          description: Success rate
        avg_response_time_ms:
          anyOf:
          - type: integer
          - type: 'null'
          title: Avg Response Time Ms
          description: Average response time
        last_used_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Used At
          description: Last used timestamp
        total_tokens_used:
          type: integer
          title: Total Tokens Used
          description: Total tokens used
        total_cost:
          type: number
          title: Total Cost
          description: Total cost
        avg_tokens_per_use:
          anyOf:
          - type: number
          - type: 'null'
          title: Avg Tokens Per Use
          description: Average tokens per use
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
          description: Prompt tags
        extra_metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Extra Metadata
          description: Additional metadata
        content_hash:
          type: string
          title: Content Hash
          description: Content hash
        estimated_tokens:
          anyOf:
          - type: integer
          - type: 'null'
          title: Estimated Tokens
          description: Estimated token count
        language:
          anyOf:
          - type: string
          - type: 'null'
          title: Language
          description: Content language
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          title: Updated At
          description: Last update timestamp
      type: object
      required:
      - id
      - owner_id
      - name
      - prompt_type
      - category
      - content
      - template_format
      - is_chain
      - version
      - is_latest
      - is_public
      - rating_count
      - usage_count
      - total_tokens_used
      - total_cost
      - content_hash
      - created_at
      - updated_at
      title: PromptResponse
      description: Schema for prompt response.
    PromptStatsResponse:
      properties:
        total_prompts:
          type: integer
          title: Total Prompts
          description: Total number of prompts
        prompts_by_type:
          additionalProperties:
            type: integer
          type: object
          title: Prompts By Type
          description: Prompts by type
        prompts_by_category:
          additionalProperties:
            type: integer
          type: object
          title: Prompts By Category
          description: Prompts by category
        most_used_prompts:
          items:
            $ref: '#/components/schemas/PromptResponse'
          type: array
          title: Most Used Prompts
          description: Most used prompts
        recent_prompts:
          items:
            $ref: '#/components/schemas/PromptResponse'
          type: array
          title: Recent Prompts
          description: Recently created prompts
        usage_stats:
          additionalProperties: true
          type: object
          title: Usage Stats
          description: Usage statistics
      type: object
      required:
      - total_prompts
      - prompts_by_type
      - prompts_by_category
      - most_used_prompts
      - recent_prompts
      - usage_stats
      title: PromptStatsResponse
      description: Schema for prompt statistics response.
    PromptTestRequest:
      properties:
        variables:
          additionalProperties: true
          type: object
          title: Variables
          description: Variables to test with
        validate_only:
          type: boolean
          title: Validate Only
          description: Only validate, don't render
          default: false
      type: object
      required:
      - variables
      title: PromptTestRequest
      description: Schema for prompt test request.
    PromptTestResponse:
      properties:
        rendered_content:
          anyOf:
          - type: string
          - type: 'null'
          title: Rendered Content
          description: Rendered prompt content
        validation_result:
          additionalProperties: true
          type: object
          title: Validation Result
          description: Validation results
        estimated_tokens:
          anyOf:
          - type: integer
          - type: 'null'
          title: Estimated Tokens
          description: Estimated token count
        test_duration_ms:
          type: integer
          title: Test Duration Ms
          description: Test execution time
      type: object
      required:
      - validation_result
      - test_duration_ms
      title: PromptTestResponse
      description: Schema for prompt test response.
    PromptType:
      type: string
      enum:
      - system
      - user
      - assistant
      - chain
      - template
      title: PromptType
      description: Enumeration for prompt types.
    PromptUpdate:
      properties:
        name:
          anyOf:
          - type: string
            maxLength: 255
            minLength: 1
          - type: 'null'
          title: Name
          description: Prompt name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Prompt description
        prompt_type:
          anyOf:
          - $ref: '#/components/schemas/PromptType'
          - type: 'null'
          description: Prompt type
        category:
          anyOf:
          - $ref: '#/components/schemas/PromptCategory'
          - type: 'null'
          description: Prompt category
        content:
          anyOf:
          - type: string
            minLength: 1
          - type: 'null'
          title: Content
          description: Prompt content/template
        variables:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Variables
          description: Template variables
        template_format:
          anyOf:
          - type: string
          - type: 'null'
          title: Template Format
          description: Template format
        input_schema:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Input Schema
          description: Input validation schema
        output_schema:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Output Schema
          description: Output validation schema
        max_length:
          anyOf:
          - type: integer
            minimum: 1.0
          - type: 'null'
          title: Max Length
          description: Maximum content length
        min_length:
          anyOf:
          - type: integer
            minimum: 1.0
          - type: 'null'
          title: Min Length
          description: Minimum content length
        required_variables:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Required Variables
          description: Required template variables
        examples:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Examples
          description: Usage examples
        test_cases:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Test Cases
          description: Test cases
        suggested_temperature:
          anyOf:
          - type: number
            maximum: 2.0
            minimum: 0.0
          - type: 'null'
          title: Suggested Temperature
          description: Suggested temperature
        suggested_max_tokens:
          anyOf:
          - type: integer
            minimum: 1.0
          - type: 'null'
          title: Suggested Max Tokens
          description: Suggested max tokens
        suggested_providers:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Suggested Providers
          description: Suggested LLM providers
        is_chain:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Chain
          description: Whether this is a chain prompt
        chain_steps:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Chain Steps
          description: Chain execution steps
        parent_prompt_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Parent Prompt Id
          description: Parent prompt ID
        is_public:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Public
          description: Whether prompt is public
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Tags
          description: Prompt tags
        extra_metadata:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Extra Metadata
          description: Additional metadata
      type: object
      title: PromptUpdate
      description: Schema for updating a prompt.
    Provider:
      properties:
        name:
          type: string
          title: Name
          description: Unique provider name
        provider_type:
          $ref: '#/components/schemas/ProviderType'
          description: Type of provider
        display_name:
          type: string
          title: Display Name
          description: Human-readable name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Provider description
        api_key_required:
          type: boolean
          title: Api Key Required
          description: Whether API key is required
          default: true
        base_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Base Url
          description: Base URL for API
        default_config:
          additionalProperties: true
          type: object
          title: Default Config
          description: Default configuration
        is_active:
          type: boolean
          title: Is Active
          description: Whether provider is active
          default: true
        is_default:
          type: boolean
          title: Is Default
          description: Whether this is the default provider
          default: false
        id:
          type: string
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - name
      - provider_type
      - display_name
      - id
      - created_at
      - updated_at
      title: Provider
      description: Full provider schema.
    ProviderCreate:
      properties:
        name:
          type: string
          title: Name
          description: Unique provider name
        provider_type:
          $ref: '#/components/schemas/ProviderType'
          description: Type of provider
        display_name:
          type: string
          title: Display Name
          description: Human-readable name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Provider description
        api_key_required:
          type: boolean
          title: Api Key Required
          description: Whether API key is required
          default: true
        base_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Base Url
          description: Base URL for API
        default_config:
          additionalProperties: true
          type: object
          title: Default Config
          description: Default configuration
        is_active:
          type: boolean
          title: Is Active
          description: Whether provider is active
          default: true
        is_default:
          type: boolean
          title: Is Default
          description: Whether this is the default provider
          default: false
      type: object
      required:
      - name
      - provider_type
      - display_name
      title: ProviderCreate
      description: Schema for creating a provider.
    ProviderDefaultResponse:
      properties:
        message:
          type: string
          title: Message
          description: Operation result message
      type: object
      required:
      - message
      title: ProviderDefaultResponse
      description: Response schema for setting default provider.
    ProviderDeleteResponse:
      properties:
        message:
          type: string
          title: Message
          description: Deletion result message
      type: object
      required:
      - message
      title: ProviderDeleteResponse
      description: Response schema for provider deletion.
    ProviderList:
      properties:
        providers:
          items:
            $ref: '#/components/schemas/Provider'
          type: array
          title: Providers
        total:
          type: integer
          title: Total
        page:
          type: integer
          title: Page
        per_page:
          type: integer
          title: Per Page
      type: object
      required:
      - providers
      - total
      - page
      - per_page
      title: ProviderList
      description: List of providers with pagination.
    ProviderType:
      type: string
      enum:
      - openai
      - anthropic
      - google
      - cohere
      - mistral
      title: ProviderType
      description: Types of AI providers.
    ProviderUpdate:
      properties:
        display_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Display Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        api_key_required:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Api Key Required
        base_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Base Url
        default_config:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Default Config
        is_active:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Active
        is_default:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Default
      type: object
      title: ProviderUpdate
      description: Schema for updating a provider.
    ReadinessCheckResponse:
      properties:
        status:
          type: string
          title: Status
          description: Readiness status
        service:
          type: string
          title: Service
          description: Service name
        version:
          type: string
          title: Version
          description: Service version
        environment:
          type: string
          title: Environment
          description: Environment
        checks:
          additionalProperties: true
          type: object
          title: Checks
          description: Health check results
      type: object
      required:
      - status
      - service
      - version
      - environment
      - checks
      title: ReadinessCheckResponse
      description: Schema for readiness check response.
    ReductionStrategy:
      type: string
      enum:
      - none
      - truncate
      - reducer
      title: ReductionStrategy
      description: Dimensionality reduction strategies.
    RestoreRequest:
      properties:
        backup_id:
          type: string
          title: Backup Id
          description: Backup ID to restore from
        restore_options:
          additionalProperties: true
          type: object
          title: Restore Options
          description: Restore options
        create_backup_before_restore:
          type: boolean
          title: Create Backup Before Restore
          description: Create backup before restore
          default: true
        verify_integrity:
          type: boolean
          title: Verify Integrity
          description: Verify backup integrity before restore
          default: true
      type: object
      required:
      - backup_id
      title: RestoreRequest
      description: Request schema for restoring from backup.
    RestoreResponse:
      properties:
        restore_id:
          type: string
          title: Restore Id
          description: Restore operation ID
        backup_id:
          type: string
          title: Backup Id
          description: Source backup ID
        status:
          type: string
          title: Status
          description: Restore status
        progress:
          type: integer
          maximum: 100.0
          minimum: 0.0
          title: Progress
          description: Restore progress percentage
          default: 0
        records_restored:
          type: integer
          title: Records Restored
          description: Number of records restored
          default: 0
        started_at:
          type: string
          format: date-time
          title: Started At
          description: Restore start timestamp
        completed_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Completed At
          description: Restore completion timestamp
        error_message:
          anyOf:
          - type: string
          - type: 'null'
          title: Error Message
          description: Error message if failed
      type: object
      required:
      - restore_id
      - backup_id
      - status
      - started_at
      title: RestoreResponse
      description: Response schema for restore operation.
    RoleToolAccessCreate:
      properties:
        role:
          $ref: '#/components/schemas/UserRole'
          description: User role
        tool_pattern:
          anyOf:
          - type: string
          - type: 'null'
          title: Tool Pattern
          description: Tool name pattern
        server_pattern:
          anyOf:
          - type: string
          - type: 'null'
          title: Server Pattern
          description: Server name pattern
        access_level:
          $ref: '#/components/schemas/ToolAccessLevel'
          description: Access level
        default_rate_limit_per_hour:
          anyOf:
          - type: integer
            minimum: 0.0
          - type: 'null'
          title: Default Rate Limit Per Hour
        default_rate_limit_per_day:
          anyOf:
          - type: integer
            minimum: 0.0
          - type: 'null'
          title: Default Rate Limit Per Day
        allowed_hours:
          anyOf:
          - items:
              type: integer
            type: array
          - type: 'null'
          title: Allowed Hours
        allowed_days:
          anyOf:
          - items:
              type: integer
            type: array
          - type: 'null'
          title: Allowed Days
      type: object
      required:
      - role
      - access_level
      title: RoleToolAccessCreate
      description: Schema for creating role-based tool access.
    RoleToolAccessResponse:
      properties:
        role:
          $ref: '#/components/schemas/UserRole'
          description: User role
        tool_pattern:
          anyOf:
          - type: string
          - type: 'null'
          title: Tool Pattern
          description: Tool name pattern
        server_pattern:
          anyOf:
          - type: string
          - type: 'null'
          title: Server Pattern
          description: Server name pattern
        access_level:
          $ref: '#/components/schemas/ToolAccessLevel'
          description: Access level
        default_rate_limit_per_hour:
          anyOf:
          - type: integer
            minimum: 0.0
          - type: 'null'
          title: Default Rate Limit Per Hour
        default_rate_limit_per_day:
          anyOf:
          - type: integer
            minimum: 0.0
          - type: 'null'
          title: Default Rate Limit Per Day
        allowed_hours:
          anyOf:
          - items:
              type: integer
            type: array
          - type: 'null'
          title: Allowed Hours
        allowed_days:
          anyOf:
          - items:
              type: integer
            type: array
          - type: 'null'
          title: Allowed Days
        id:
          type: string
          title: Id
          description: Access rule ID
        created_by:
          type: string
          title: Created By
          description: Creator user ID
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Creation timestamp
      type: object
      required:
      - role
      - access_level
      - id
      - created_by
      - created_at
      title: RoleToolAccessResponse
      description: Schema for role-based tool access response.
    SSEStatsResponse:
      properties:
        total_connections:
          type: integer
          title: Total Connections
          description: Total active connections
        your_connections:
          type: integer
          title: Your Connections
          description: Your active connections
      type: object
      required:
      - total_connections
      - your_connections
      title: SSEStatsResponse
      description: Response schema for SSE service statistics.
    ServerStatus:
      type: string
      enum:
      - enabled
      - disabled
      - error
      - starting
      - stopping
      title: ServerStatus
      description: Enumeration for server status.
    ServerToolResponse:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
          title: Name
          description: Tool name
        display_name:
          type: string
          maxLength: 200
          minLength: 1
          title: Display Name
          description: Display name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Tool description
        args_schema:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Args Schema
          description: Tool arguments schema
        bypass_when_unavailable:
          type: boolean
          title: Bypass When Unavailable
          description: Bypass when tool is unavailable
          default: false
        id:
          type: string
          title: Id
          description: Tool ID
        server_id:
          type: string
          title: Server Id
          description: Server ID
        status:
          $ref: '#/components/schemas/ToolStatus'
          description: Tool status
        is_available:
          type: boolean
          title: Is Available
          description: Tool availability
        total_calls:
          type: integer
          title: Total Calls
          description: Total number of calls
        total_errors:
          type: integer
          title: Total Errors
          description: Total number of errors
        last_called:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Called
          description: Last call timestamp
        last_error:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Error
          description: Last error message
        avg_response_time_ms:
          anyOf:
          - type: number
          - type: 'null'
          title: Avg Response Time Ms
          description: Average response time
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          title: Updated At
          description: Last update timestamp
      type: object
      required:
      - name
      - display_name
      - id
      - server_id
      - status
      - is_available
      - total_calls
      - total_errors
      - created_at
      - updated_at
      title: ServerToolResponse
      description: Schema for server tool response.
    ServerToolsResponse:
      properties:
        tools:
          items:
            $ref: '#/components/schemas/ServerToolResponse'
          type: array
          title: Tools
          description: List of server tools
        total_count:
          type: integer
          title: Total Count
          description: Total number of tools
        limit:
          type: integer
          title: Limit
          description: Applied limit
        offset:
          type: integer
          title: Offset
          description: Applied offset
      type: object
      required:
      - tools
      - total_count
      - limit
      - offset
      title: ServerToolsResponse
      description: Schema for server tools response with pagination.
    SortingRequest:
      properties:
        sort_by:
          type: string
          title: Sort By
          description: Sort field
          default: created_at
        sort_order:
          type: string
          pattern: ^(asc|desc)$
          title: Sort Order
          description: Sort order
          default: desc
      type: object
      title: SortingRequest
      description: Common sorting request schema.
    StorageStatsResponse:
      properties:
        total_size:
          type: integer
          title: Total Size
          description: Total storage used in bytes
        database_size:
          type: integer
          title: Database Size
          description: Database size in bytes
        files_size:
          type: integer
          title: Files Size
          description: Uploaded files size in bytes
        backups_size:
          type: integer
          title: Backups Size
          description: Backups size in bytes
        exports_size:
          type: integer
          title: Exports Size
          description: Exports size in bytes
        total_records:
          type: integer
          title: Total Records
          description: Total number of records
        total_files:
          type: integer
          title: Total Files
          description: Total number of files
        total_backups:
          type: integer
          title: Total Backups
          description: Total number of backups
        storage_by_type:
          additionalProperties:
            type: integer
          type: object
          title: Storage By Type
          description: Storage usage by data type
        storage_by_user:
          additionalProperties:
            type: integer
          type: object
          title: Storage By User
          description: Storage usage by user
        growth_rate_mb_per_day:
          type: number
          title: Growth Rate Mb Per Day
          description: Storage growth rate in MB per day
        projected_size_30_days:
          type: integer
          title: Projected Size 30 Days
          description: Projected size in 30 days
        last_updated:
          type: string
          format: date-time
          title: Last Updated
          description: Statistics last updated timestamp
      type: object
      required:
      - total_size
      - database_size
      - files_size
      - backups_size
      - exports_size
      - total_records
      - total_files
      - total_backups
      - storage_by_type
      - storage_by_user
      - growth_rate_mb_per_day
      - projected_size_30_days
      - last_updated
      title: StorageStatsResponse
      description: Response schema for storage statistics.
    SystemAnalyticsResponse:
      properties:
        total_users:
          type: integer
          title: Total Users
          description: Total number of users
        active_users_today:
          type: integer
          title: Active Users Today
          description: Active users today
        active_users_week:
          type: integer
          title: Active Users Week
          description: Active users this week
        active_users_month:
          type: integer
          title: Active Users Month
          description: Active users this month
        system_uptime_seconds:
          type: number
          title: System Uptime Seconds
          description: System uptime in seconds
        avg_cpu_usage:
          type: number
          title: Avg Cpu Usage
          description: Average CPU usage percentage
        avg_memory_usage:
          type: number
          title: Avg Memory Usage
          description: Average memory usage percentage
        database_connections:
          type: integer
          title: Database Connections
          description: Current database connections
        total_api_requests:
          type: integer
          title: Total Api Requests
          description: Total API requests
        requests_per_endpoint:
          additionalProperties:
            type: integer
          type: object
          title: Requests Per Endpoint
          description: Requests by endpoint
        avg_api_response_time:
          type: number
          title: Avg Api Response Time
          description: Average API response time
        api_error_rate:
          type: number
          title: Api Error Rate
          description: API error rate
        storage_usage_bytes:
          type: integer
          title: Storage Usage Bytes
          description: Total storage usage
        vector_database_size_bytes:
          type: integer
          title: Vector Database Size Bytes
          description: Vector database size
        cache_hit_rate:
          type: number
          title: Cache Hit Rate
          description: Cache hit rate
      type: object
      required:
      - total_users
      - active_users_today
      - active_users_week
      - active_users_month
      - system_uptime_seconds
      - avg_cpu_usage
      - avg_memory_usage
      - database_connections
      - total_api_requests
      - requests_per_endpoint
      - avg_api_response_time
      - api_error_rate
      - storage_usage_bytes
      - vector_database_size_bytes
      - cache_hit_rate
      title: SystemAnalyticsResponse
      description: Schema for system analytics response.
    TestEventResponse:
      properties:
        message:
          type: string
          title: Message
          description: Response message
        event_id:
          type: string
          title: Event Id
          description: Generated event ID
      type: object
      required:
      - message
      - event_id
      title: TestEventResponse
      description: Response schema for test event.
    TestMetric:
      properties:
        metric_type:
          $ref: '#/components/schemas/MetricType'
          description: Type of metric
        variant_name:
          type: string
          title: Variant Name
          description: Variant name
        value:
          type: number
          title: Value
          description: Metric value
        sample_size:
          type: integer
          title: Sample Size
          description: Sample size
        confidence_interval:
          anyOf:
          - items:
              type: number
            type: array
          - type: 'null'
          title: Confidence Interval
          description: 95% confidence interval
      type: object
      required:
      - metric_type
      - variant_name
      - value
      - sample_size
      title: TestMetric
      description: Test metric data.
    TestStatus:
      type: string
      enum:
      - draft
      - running
      - paused
      - completed
      - cancelled
      title: TestStatus
      description: A/B test status.
    TestType:
      type: string
      enum:
      - prompt
      - model
      - parameter
      - workflow
      - template
      title: TestType
      description: Types of A/B tests.
    TestVariant:
      properties:
        name:
          type: string
          title: Name
          description: Variant name
        description:
          type: string
          title: Description
          description: Variant description
        configuration:
          additionalProperties: true
          type: object
          title: Configuration
          description: Variant configuration
        weight:
          type: number
          minimum: 0.0
          title: Weight
          description: Variant weight for allocation
          default: 1.0
      type: object
      required:
      - name
      - description
      - configuration
      title: TestVariant
      description: Test variant definition.
    TokenRefresh:
      properties:
        refresh_token:
          type: string
          title: Refresh Token
          description: Refresh token
      type: object
      required:
      - refresh_token
      title: TokenRefresh
      description: Schema for token refresh request.
    TokenRefreshResponse:
      properties:
        access_token:
          type: string
          title: Access Token
          description: New access token
        refresh_token:
          type: string
          title: Refresh Token
          description: New refresh token
        token_type:
          type: string
          title: Token Type
          description: Token type
          default: bearer
        expires_in:
          type: integer
          title: Expires In
          description: Token expiration time in seconds
      type: object
      required:
      - access_token
      - refresh_token
      - expires_in
      title: TokenRefreshResponse
      description: Schema for token refresh response.
    TokenResponse:
      properties:
        access_token:
          type: string
          title: Access Token
          description: JWT access token
        refresh_token:
          type: string
          title: Refresh Token
          description: JWT refresh token
        token_type:
          type: string
          title: Token Type
          description: Token type
          default: bearer
        expires_in:
          type: integer
          title: Expires In
          description: Token expiration time in seconds
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User information
      type: object
      required:
      - access_token
      - refresh_token
      - expires_in
      - user
      title: TokenResponse
      description: Schema for authentication token response.
    ToolAccessLevel:
      type: string
      enum:
      - none
      - read
      - execute
      - admin
      title: ToolAccessLevel
      description: Access levels for tools.
    ToolAccessResult:
      properties:
        allowed:
          type: boolean
          title: Allowed
          description: Whether access is allowed
        access_level:
          $ref: '#/components/schemas/ToolAccessLevel'
          description: Access level
        rate_limit_remaining_hour:
          anyOf:
          - type: integer
          - type: 'null'
          title: Rate Limit Remaining Hour
          description: Remaining hourly calls
        rate_limit_remaining_day:
          anyOf:
          - type: integer
          - type: 'null'
          title: Rate Limit Remaining Day
          description: Remaining daily calls
        restriction_reason:
          anyOf:
          - type: string
          - type: 'null'
          title: Restriction Reason
          description: Reason if restricted
        expires_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Expires At
          description: Permission expiry
      type: object
      required:
      - allowed
      - access_level
      title: ToolAccessResult
      description: Schema for tool access check result.
    ToolOperationResponse:
      properties:
        success:
          type: boolean
          title: Success
          description: Operation success status
        message:
          type: string
          title: Message
          description: Operation result message
      type: object
      required:
      - success
      - message
      title: ToolOperationResponse
      description: Schema for tool operation response.
    ToolPermissionCreate:
      properties:
        user_id:
          type: string
          title: User Id
          description: User ID
        tool_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Tool Id
          description: Specific tool ID
        server_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Server Id
          description: Server ID (for all tools)
        access_level:
          $ref: '#/components/schemas/ToolAccessLevel'
          description: Access level
        rate_limit_per_hour:
          anyOf:
          - type: integer
            minimum: 0.0
          - type: 'null'
          title: Rate Limit Per Hour
          description: Hourly rate limit
        rate_limit_per_day:
          anyOf:
          - type: integer
            minimum: 0.0
          - type: 'null'
          title: Rate Limit Per Day
          description: Daily rate limit
        allowed_hours:
          anyOf:
          - items:
              type: integer
            type: array
          - type: 'null'
          title: Allowed Hours
          description: Allowed hours (0-23)
        allowed_days:
          anyOf:
          - items:
              type: integer
            type: array
          - type: 'null'
          title: Allowed Days
          description: Allowed weekdays (0-6)
        expires_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Expires At
          description: Permission expiry
      type: object
      required:
      - user_id
      - access_level
      title: ToolPermissionCreate
      description: Schema for creating tool permissions.
    ToolPermissionResponse:
      properties:
        user_id:
          type: string
          title: User Id
          description: User ID
        tool_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Tool Id
          description: Specific tool ID
        server_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Server Id
          description: Server ID (for all tools)
        access_level:
          $ref: '#/components/schemas/ToolAccessLevel'
          description: Access level
        rate_limit_per_hour:
          anyOf:
          - type: integer
            minimum: 0.0
          - type: 'null'
          title: Rate Limit Per Hour
          description: Hourly rate limit
        rate_limit_per_day:
          anyOf:
          - type: integer
            minimum: 0.0
          - type: 'null'
          title: Rate Limit Per Day
          description: Daily rate limit
        allowed_hours:
          anyOf:
          - items:
              type: integer
            type: array
          - type: 'null'
          title: Allowed Hours
          description: Allowed hours (0-23)
        allowed_days:
          anyOf:
          - items:
              type: integer
            type: array
          - type: 'null'
          title: Allowed Days
          description: Allowed weekdays (0-6)
        expires_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Expires At
          description: Permission expiry
        id:
          type: string
          title: Id
          description: Permission ID
        granted_by:
          type: string
          title: Granted By
          description: Granter user ID
        granted_at:
          type: string
          format: date-time
          title: Granted At
          description: Grant timestamp
        usage_count:
          type: integer
          title: Usage Count
          description: Usage count
        last_used:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Used
          description: Last used timestamp
      type: object
      required:
      - user_id
      - access_level
      - id
      - granted_by
      - granted_at
      - usage_count
      title: ToolPermissionResponse
      description: Schema for tool permission response.
    ToolPermissionUpdate:
      properties:
        access_level:
          anyOf:
          - $ref: '#/components/schemas/ToolAccessLevel'
          - type: 'null'
        rate_limit_per_hour:
          anyOf:
          - type: integer
            minimum: 0.0
          - type: 'null'
          title: Rate Limit Per Hour
        rate_limit_per_day:
          anyOf:
          - type: integer
            minimum: 0.0
          - type: 'null'
          title: Rate Limit Per Day
        allowed_hours:
          anyOf:
          - items:
              type: integer
            type: array
          - type: 'null'
          title: Allowed Hours
        allowed_days:
          anyOf:
          - items:
              type: integer
            type: array
          - type: 'null'
          title: Allowed Days
        expires_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Expires At
      type: object
      title: ToolPermissionUpdate
      description: Schema for updating tool permissions.
    ToolServerCreate:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
          title: Name
          description: Server name
        display_name:
          type: string
          maxLength: 200
          minLength: 1
          title: Display Name
          description: Display name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Server description
        base_url:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Base Url
          description: Base URL for the remote server (null for built-in servers)
        transport_type:
          type: string
          pattern: ^(http|sse|stdio)$
          title: Transport Type
          description: 'Transport type: http, sse, or stdio'
          default: http
        oauth_config:
          anyOf:
          - $ref: '#/components/schemas/OAuthConfigSchema'
          - type: 'null'
          description: OAuth configuration if required
        headers:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
          title: Headers
          description: Additional HTTP headers
        timeout:
          type: integer
          maximum: 300.0
          minimum: 5.0
          title: Timeout
          description: Request timeout in seconds
          default: 30
        auto_start:
          type: boolean
          title: Auto Start
          description: Auto-connect to server on system startup
          default: true
        auto_update:
          type: boolean
          title: Auto Update
          description: Auto-update server capabilities
          default: true
        max_failures:
          type: integer
          maximum: 10.0
          minimum: 1.0
          title: Max Failures
          description: Maximum consecutive failures before disabling
          default: 3
      type: object
      required:
      - name
      - display_name
      title: ToolServerCreate
      description: Schema for creating a tool server.
    ToolServerDeleteResponse:
      properties:
        message:
          type: string
          title: Message
          description: Success message
      type: object
      required:
      - message
      title: ToolServerDeleteResponse
      description: Schema for tool server delete response.
    ToolServerHealthCheck:
      properties:
        server_id:
          type: string
          title: Server Id
          description: Server ID
        server_name:
          type: string
          title: Server Name
          description: Server name
        status:
          $ref: '#/components/schemas/ServerStatus'
          description: Server status
        is_running:
          type: boolean
          title: Is Running
          description: Whether server is running
        is_responsive:
          type: boolean
          title: Is Responsive
          description: Whether server is responsive
        tools_count:
          type: integer
          title: Tools Count
          description: Number of available tools
        last_check:
          type: string
          format: date-time
          title: Last Check
          description: Last health check time
        error_message:
          anyOf:
          - type: string
          - type: 'null'
          title: Error Message
          description: Error message if unhealthy
      type: object
      required:
      - server_id
      - server_name
      - status
      - is_running
      - is_responsive
      - tools_count
      - last_check
      title: ToolServerHealthCheck
      description: Schema for tool server health check.
    ToolServerMetrics:
      properties:
        server_id:
          type: string
          title: Server Id
          description: Server ID
        server_name:
          type: string
          title: Server Name
          description: Server name
        status:
          $ref: '#/components/schemas/ServerStatus'
          description: Server status
        total_tools:
          type: integer
          title: Total Tools
          description: Total number of tools
        enabled_tools:
          type: integer
          title: Enabled Tools
          description: Number of enabled tools
        total_calls:
          type: integer
          title: Total Calls
          description: Total tool calls
        total_errors:
          type: integer
          title: Total Errors
          description: Total errors
        success_rate:
          type: number
          maximum: 1.0
          minimum: 0.0
          title: Success Rate
          description: Success rate
        avg_response_time_ms:
          anyOf:
          - type: number
          - type: 'null'
          title: Avg Response Time Ms
          description: Average response time
        last_activity:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Activity
          description: Last activity timestamp
        uptime_percentage:
          anyOf:
          - type: number
            maximum: 1.0
            minimum: 0.0
          - type: 'null'
          title: Uptime Percentage
          description: Uptime percentage
      type: object
      required:
      - server_id
      - server_name
      - status
      - total_tools
      - enabled_tools
      - total_calls
      - total_errors
      - success_rate
      title: ToolServerMetrics
      description: Schema for tool server metrics.
    ToolServerOperationResponse:
      properties:
        success:
          type: boolean
          title: Success
          description: Operation success status
        message:
          type: string
          title: Message
          description: Operation result message
      type: object
      required:
      - success
      - message
      title: ToolServerOperationResponse
      description: Schema for tool server operation response.
    ToolServerResponse:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
          title: Name
          description: Server name
        display_name:
          type: string
          maxLength: 200
          minLength: 1
          title: Display Name
          description: Display name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
          description: Server description
        base_url:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Base Url
          description: Base URL for the remote server (null for built-in servers)
        transport_type:
          type: string
          pattern: ^(http|sse|stdio)$
          title: Transport Type
          description: 'Transport type: http, sse, or stdio'
          default: http
        oauth_config:
          anyOf:
          - $ref: '#/components/schemas/OAuthConfigSchema'
          - type: 'null'
          description: OAuth configuration if required
        headers:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
          title: Headers
          description: Additional HTTP headers
        timeout:
          type: integer
          maximum: 300.0
          minimum: 5.0
          title: Timeout
          description: Request timeout in seconds
          default: 30
        auto_start:
          type: boolean
          title: Auto Start
          description: Auto-connect to server on system startup
          default: true
        auto_update:
          type: boolean
          title: Auto Update
          description: Auto-update server capabilities
          default: true
        max_failures:
          type: integer
          maximum: 10.0
          minimum: 1.0
          title: Max Failures
          description: Maximum consecutive failures before disabling
          default: 3
        id:
          type: string
          title: Id
          description: Server ID
        status:
          $ref: '#/components/schemas/ServerStatus'
          description: Server status
        is_builtin:
          type: boolean
          title: Is Builtin
          description: Whether server is built-in
        last_health_check:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Health Check
          description: Last health check
        last_startup_success:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Startup Success
          description: Last successful startup
        last_startup_error:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Startup Error
          description: Last startup error
        consecutive_failures:
          type: integer
          title: Consecutive Failures
          description: Consecutive failure count
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          title: Updated At
          description: Last update timestamp
        created_by:
          anyOf:
          - type: string
          - type: 'null'
          title: Created By
          description: Creator user ID
        tools:
          items:
            $ref: '#/components/schemas/ServerToolResponse'
          type: array
          title: Tools
          description: Server tools
      type: object
      required:
      - name
      - display_name
      - id
      - status
      - is_builtin
      - consecutive_failures
      - created_at
      - updated_at
      title: ToolServerResponse
      description: Schema for tool server response.
    ToolServerUpdate:
      properties:
        display_name:
          anyOf:
          - type: string
            maxLength: 200
            minLength: 1
          - type: 'null'
          title: Display Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        base_url:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Base Url
        transport_type:
          anyOf:
          - type: string
            pattern: ^(http|sse|stdio)$
          - type: 'null'
          title: Transport Type
        oauth_config:
          anyOf:
          - $ref: '#/components/schemas/OAuthConfigSchema'
          - type: 'null'
        headers:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
          title: Headers
        timeout:
          anyOf:
          - type: integer
            maximum: 300.0
            minimum: 5.0
          - type: 'null'
          title: Timeout
        auto_start:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Auto Start
        auto_update:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Auto Update
        max_failures:
          anyOf:
          - type: integer
            maximum: 10.0
            minimum: 1.0
          - type: 'null'
          title: Max Failures
      type: object
      title: ToolServerUpdate
      description: Schema for updating a remote tool server.
    ToolStatus:
      type: string
      enum:
      - enabled
      - disabled
      - unavailable
      - error
      title: ToolStatus
      description: Enumeration for tool status.
    UsageMetricsResponse:
      properties:
        total_prompt_tokens:
          type: integer
          title: Total Prompt Tokens
          description: Total prompt tokens
        total_completion_tokens:
          type: integer
          title: Total Completion Tokens
          description: Total completion tokens
        total_tokens:
          type: integer
          title: Total Tokens
          description: Total tokens used
        tokens_by_model:
          additionalProperties:
            type: integer
          type: object
          title: Tokens By Model
          description: Token usage by model
        tokens_by_provider:
          additionalProperties:
            type: integer
          type: object
          title: Tokens By Provider
          description: Token usage by provider
        total_cost:
          type: number
          title: Total Cost
          description: Total cost
        cost_by_model:
          additionalProperties:
            type: number
          type: object
          title: Cost By Model
          description: Cost by model
        cost_by_provider:
          additionalProperties:
            type: number
          type: object
          title: Cost By Provider
          description: Cost by provider
        daily_usage:
          additionalProperties:
            type: integer
          type: object
          title: Daily Usage
          description: Daily token usage
        daily_cost:
          additionalProperties:
            type: number
          type: object
          title: Daily Cost
          description: Daily cost
        avg_response_time:
          type: number
          title: Avg Response Time
          description: Average response time
        response_times_by_model:
          additionalProperties:
            type: number
          type: object
          title: Response Times By Model
          description: Response times by model
        active_days:
          type: integer
          title: Active Days
          description: Number of active days
        peak_usage_hour:
          type: integer
          title: Peak Usage Hour
          description: Peak usage hour
        conversations_per_day:
          type: number
          title: Conversations Per Day
          description: Average conversations per day
      type: object
      required:
      - total_prompt_tokens
      - total_completion_tokens
      - total_tokens
      - tokens_by_model
      - tokens_by_provider
      - total_cost
      - cost_by_model
      - cost_by_provider
      - daily_usage
      - daily_cost
      - avg_response_time
      - response_times_by_model
      - active_days
      - peak_usage_hour
      - conversations_per_day
      title: UsageMetricsResponse
      description: Schema for usage metrics response.
    UserCreate:
      properties:
        email:
          type: string
          format: email
          title: Email
          description: User email address
        username:
          type: string
          maxLength: 50
          minLength: 3
          title: Username
          description: Username
        full_name:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Full Name
          description: Full name
        bio:
          anyOf:
          - type: string
            maxLength: 1000
          - type: 'null'
          title: Bio
          description: User bio
        avatar_url:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Avatar Url
          description: Avatar URL
        password:
          type: string
          maxLength: 128
          minLength: 8
          title: Password
          description: Password
      type: object
      required:
      - email
      - username
      - password
      title: UserCreate
      description: Schema for user registration.
    UserLogin:
      properties:
        username:
          type: string
          maxLength: 50
          minLength: 3
          title: Username
          description: Username
        password:
          type: string
          title: Password
          description: Password
      type: object
      required:
      - username
      - password
      title: UserLogin
      description: Schema for user login.
    UserResponse:
      properties:
        email:
          type: string
          format: email
          title: Email
          description: User email address
        username:
          type: string
          maxLength: 50
          minLength: 3
          title: Username
          description: Username
        full_name:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Full Name
          description: Full name
        bio:
          anyOf:
          - type: string
            maxLength: 1000
          - type: 'null'
          title: Bio
          description: User bio
        avatar_url:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Avatar Url
          description: Avatar URL
        id:
          type: string
          title: Id
          description: User ID
        is_active:
          type: boolean
          title: Is Active
          description: Is user active
        is_verified:
          type: boolean
          title: Is Verified
          description: Is user email verified
        default_llm_provider:
          anyOf:
          - type: string
          - type: 'null'
          title: Default Llm Provider
          description: Default LLM provider
        default_profile_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Default Profile Id
          description: Default profile ID
        created_at:
          type: string
          format: date-time
          title: Created At
          description: Account creation date
        updated_at:
          type: string
          format: date-time
          title: Updated At
          description: Last update date
        last_login_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Last Login At
          description: Last login date
      type: object
      required:
      - email
      - username
      - id
      - is_active
      - is_verified
      - created_at
      - updated_at
      title: UserResponse
      description: Schema for user response.
    UserRole:
      type: string
      enum:
      - guest
      - user
      - power_user
      - admin
      - super_admin
      title: UserRole
      description: User roles for tool access.
    UserToolAccessCheck:
      properties:
        user_id:
          type: string
          title: User Id
          description: User ID
        tool_name:
          type: string
          title: Tool Name
          description: Tool name
        server_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Server Name
          description: Server name
      type: object
      required:
      - user_id
      - tool_name
      title: UserToolAccessCheck
      description: Schema for checking user tool access.
    UserUpdate:
      properties:
        full_name:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Full Name
          description: Full name
        bio:
          anyOf:
          - type: string
            maxLength: 1000
          - type: 'null'
          title: Bio
          description: User bio
        avatar_url:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Avatar Url
          description: Avatar URL
        default_llm_provider:
          anyOf:
          - type: string
          - type: 'null'
          title: Default Llm Provider
          description: Default LLM provider
        default_profile_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Default Profile Id
          description: Default profile ID
      type: object
      title: UserUpdate
      description: Schema for user profile updates.
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    VariantAllocation:
      type: string
      enum:
      - equal
      - weighted
      - gradual_rollout
      - user_attribute
      title: VariantAllocation
      description: Variant allocation strategies.
    WorkflowTemplateInfo:
      properties:
        name:
          type: string
          title: Name
          description: Template name
        workflow_type:
          type: string
          title: Workflow Type
          description: Workflow type
        description:
          type: string
          title: Description
          description: Template description
        required_tools:
          items:
            type: string
          type: array
          title: Required Tools
          description: Required tools
        required_retrievers:
          items:
            type: string
          type: array
          title: Required Retrievers
          description: Required retrievers
        default_params:
          additionalProperties: true
          type: object
          title: Default Params
          description: Default parameters
      type: object
      required:
      - name
      - workflow_type
      - description
      - required_tools
      - required_retrievers
      - default_params
      title: WorkflowTemplateInfo
      description: Schema for workflow template information.
    WorkflowTemplatesResponse:
      properties:
        templates:
          additionalProperties:
            $ref: '#/components/schemas/WorkflowTemplateInfo'
          type: object
          title: Templates
          description: Available templates
        total_count:
          type: integer
          title: Total Count
          description: Total number of templates
      type: object
      required:
      - templates
      - total_count
      title: WorkflowTemplatesResponse
      description: Schema for workflow templates response.
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
servers:
- url: http://localhost:8000
  description: Development server
- url: https://api.chatter.ai
  description: Production server
externalDocs:
  description: Chatter Documentation
  url: https://github.com/lllucius/chatter#readme
x-logo:
  url: https://github.com/lllucius/chatter/raw/main/docs/logo.png
tags:
- name: Health
  description: Health check and system status endpoints
- name: Authentication
  description: User authentication and authorization endpoints
- name: Chat
  description: Core chat and conversation endpoints with LLM integration
- name: Documents
  description: Document management and knowledge base endpoints
- name: Profiles
  description: LLM profile and prompt management endpoints
- name: Analytics
  description: Usage analytics and reporting endpoints
- name: Tool Servers
  description: MCP tool server management endpoints
