/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * # Advanced AI Chatbot Backend API Platform  A comprehensive Python-based backend API platform for building advanced AI chatbots, implemented with FastAPI, LangChain, LangGraph, Postgres, PGVector, and SQLAlchemy.  ## Features  ### Core API Features - **RESTful API** with FastAPI and OpenAPI/Swagger documentation - **Async-first architecture** with uvloop and hypercorn - **Streaming responses** for real-time LLM output - **Authentication** with JWT/OAuth2 and session management - **Rate limiting** and security validations - **Health checks** with `/healthz` and `/readyz` endpoints - **API versioning** with modular router architecture  ### LLM & AI Features - **LangChain integration** for LLM orchestration and chain management - **LangGraph workflows** for advanced conversation logic - **Multiple LLM providers** with pluggable architecture (OpenAI, Anthropic, etc.) - **Prompt management** with storage and versioning - **Tool calling** with MCP (Model Context Protocol) integration - **Multi-turn context** management and conversation history - **Profile management** for LLM parameters (temperature, top_k, etc.)  ### Vector Store & Knowledge Base - **Multiple vector stores** (PGVector, Pinecone, Qdrant, ChromaDB) - **Document processing** with unstructured data support - **Semantic search** and retrieval-augmented generation (RAG) - **Chunking strategies** for optimal retrieval - **Embedding management** with multiple providers  ### Data & Analytics - **Comprehensive analytics** for conversations, usage, and performance - **Cost tracking** and token usage monitoring - **User behavior analytics** and system health metrics - **Export capabilities** for reporting and analysis  ## Authentication  All API endpoints (except health checks and documentation) require authentication. Use the `/api/v1/auth/login` endpoint to obtain access tokens.  ## Rate Limiting  API requests are rate-limited. Check response headers for current limits.  ## SDK  A Python SDK is available for easy integration. See the SDK documentation for details.  ## Support  - GitHub: https://github.com/lllucius/chatter - Documentation: https://github.com/lllucius/chatter#readme - Issues: https://github.com/lllucius/chatter/issues
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@chatter.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { AgentCapability } from './agent-capability';
// May contain unused imports in some cases
// @ts-ignore
import type { AgentStatus } from './agent-status';
// May contain unused imports in some cases
// @ts-ignore
import type { AgentType } from './agent-type';

/**
 * Response schema for agent data.
 * @export
 * @interface AgentResponse
 */
export interface AgentResponse {
    /**
     * Agent ID
     * @type {string}
     * @memberof AgentResponse
     */
    'id': string;
    /**
     * Agent name
     * @type {string}
     * @memberof AgentResponse
     */
    'name': string;
    /**
     * Agent description
     * @type {string}
     * @memberof AgentResponse
     */
    'description': string;
    /**
     * Type of agent
     * @type {AgentType}
     * @memberof AgentResponse
     */
    'agent_type': AgentType;
    /**
     * Agent status
     * @type {AgentStatus}
     * @memberof AgentResponse
     */
    'status': AgentStatus;
    /**
     * System prompt
     * @type {string}
     * @memberof AgentResponse
     */
    'system_prompt': string;
    /**
     * Agent personality traits
     * @type {Array<string>}
     * @memberof AgentResponse
     */
    'personality_traits': Array<string>;
    /**
     * Knowledge domains
     * @type {Array<string>}
     * @memberof AgentResponse
     */
    'knowledge_domains': Array<string>;
    /**
     * Response style
     * @type {string}
     * @memberof AgentResponse
     */
    'response_style': string;
    /**
     * Agent capabilities
     * @type {Array<AgentCapability>}
     * @memberof AgentResponse
     */
    'capabilities': Array<AgentCapability>;
    /**
     * Available tools
     * @type {Array<string>}
     * @memberof AgentResponse
     */
    'available_tools': Array<string>;
    /**
     * Primary LLM provider
     * @type {string}
     * @memberof AgentResponse
     */
    'primary_llm': string;
    /**
     * Fallback LLM provider
     * @type {string}
     * @memberof AgentResponse
     */
    'fallback_llm': string;
    /**
     * Temperature for responses
     * @type {number}
     * @memberof AgentResponse
     */
    'temperature': number;
    /**
     * Maximum tokens
     * @type {number}
     * @memberof AgentResponse
     */
    'max_tokens': number;
    /**
     * Maximum conversation length
     * @type {number}
     * @memberof AgentResponse
     */
    'max_conversation_length': number;
    /**
     * Context window size
     * @type {number}
     * @memberof AgentResponse
     */
    'context_window_size': number;
    /**
     * Response timeout in seconds
     * @type {number}
     * @memberof AgentResponse
     */
    'response_timeout': number;
    /**
     * Learning enabled
     * @type {boolean}
     * @memberof AgentResponse
     */
    'learning_enabled': boolean;
    /**
     * Feedback weight
     * @type {number}
     * @memberof AgentResponse
     */
    'feedback_weight': number;
    /**
     * Adaptation threshold
     * @type {number}
     * @memberof AgentResponse
     */
    'adaptation_threshold': number;
    /**
     * Creation timestamp
     * @type {string}
     * @memberof AgentResponse
     */
    'created_at': string;
    /**
     * Last update timestamp
     * @type {string}
     * @memberof AgentResponse
     */
    'updated_at': string;
    /**
     * Creator
     * @type {string}
     * @memberof AgentResponse
     */
    'created_by': string;
    /**
     * Agent tags
     * @type {Array<string>}
     * @memberof AgentResponse
     */
    'tags': Array<string>;
    /**
     * Additional metadata
     * @type {{ [key: string]: any; }}
     * @memberof AgentResponse
     */
    'metadata': { [key: string]: any; };
}



