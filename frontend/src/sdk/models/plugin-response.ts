/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * # Advanced AI Chatbot Backend API Platform  A comprehensive Python-based backend API platform for building advanced AI chatbots, implemented with FastAPI, LangChain, LangGraph, Postgres, PGVector, and SQLAlchemy.  ## Features  ### Core API Features - **RESTful API** with FastAPI and OpenAPI/Swagger documentation - **Async-first architecture** with uvloop and hypercorn - **Streaming responses** for real-time LLM output - **Authentication** with JWT/OAuth2 and session management - **Rate limiting** and security validations - **Health checks** with `/healthz` and `/readyz` endpoints - **API versioning** with modular router architecture  ### LLM & AI Features - **LangChain integration** for LLM orchestration and chain management - **LangGraph workflows** for advanced conversation logic - **Multiple LLM providers** with pluggable architecture (OpenAI, Anthropic, etc.) - **Prompt management** with storage and versioning - **Tool calling** with MCP (Model Context Protocol) integration - **Multi-turn context** management and conversation history - **Profile management** for LLM parameters (temperature, top_k, etc.)  ### Vector Store & Knowledge Base - **Multiple vector stores** (PGVector, Pinecone, Qdrant, ChromaDB) - **Document processing** with unstructured data support - **Semantic search** and retrieval-augmented generation (RAG) - **Chunking strategies** for optimal retrieval - **Embedding management** with multiple providers  ### Data & Analytics - **Comprehensive analytics** for conversations, usage, and performance - **Cost tracking** and token usage monitoring - **User behavior analytics** and system health metrics - **Export capabilities** for reporting and analysis  ## Authentication  All API endpoints (except health checks and documentation) require authentication. Use the `/api/v1/auth/login` endpoint to obtain access tokens.  ## Rate Limiting  API requests are rate-limited. Check response headers for current limits.  ## SDK  A Python SDK is available for easy integration. See the SDK documentation for details.  ## Support  - GitHub: https://github.com/lllucius/chatter - Documentation: https://github.com/lllucius/chatter#readme - Issues: https://github.com/lllucius/chatter/issues
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: support@chatter.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { PluginStatus } from './plugin-status';
// May contain unused imports in some cases
// @ts-ignore
import type { PluginType } from './plugin-type';

/**
 * Response schema for plugin data.
 * @export
 * @interface PluginResponse
 */
export interface PluginResponse {
    /**
     * Plugin ID
     * @type {string}
     * @memberof PluginResponse
     */
    'id': string;
    /**
     * Plugin name
     * @type {string}
     * @memberof PluginResponse
     */
    'name': string;
    /**
     * Plugin version
     * @type {string}
     * @memberof PluginResponse
     */
    'version': string;
    /**
     * Plugin description
     * @type {string}
     * @memberof PluginResponse
     */
    'description': string;
    /**
     * Plugin author
     * @type {string}
     * @memberof PluginResponse
     */
    'author': string;
    /**
     * Plugin type
     * @type {PluginType}
     * @memberof PluginResponse
     */
    'plugin_type': PluginType;
    /**
     * Plugin status
     * @type {PluginStatus}
     * @memberof PluginResponse
     */
    'status': PluginStatus;
    /**
     * Plugin entry point
     * @type {string}
     * @memberof PluginResponse
     */
    'entry_point': string;
    /**
     * Plugin capabilities
     * @type {Array<{ [key: string]: any; } | null>}
     * @memberof PluginResponse
     */
    'capabilities': Array<{ [key: string]: any; } | null>;
    /**
     * Plugin dependencies
     * @type {Array<string>}
     * @memberof PluginResponse
     */
    'dependencies': Array<string>;
    /**
     * Required permissions
     * @type {Array<string>}
     * @memberof PluginResponse
     */
    'permissions': Array<string>;
    /**
     * Whether plugin is enabled
     * @type {boolean}
     * @memberof PluginResponse
     */
    'enabled': boolean;
    /**
     * 
     * @type {string}
     * @memberof PluginResponse
     */
    'error_message'?: string | null;
    /**
     * Installation timestamp
     * @type {string}
     * @memberof PluginResponse
     */
    'installed_at': string;
    /**
     * Last update timestamp
     * @type {string}
     * @memberof PluginResponse
     */
    'updated_at': string;
    /**
     * Additional metadata
     * @type {{ [key: string]: any; }}
     * @memberof PluginResponse
     */
    'metadata': { [key: string]: any; };
}



