/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AgentResponse } from './AgentResponse';
import {
    AgentResponseFromJSON,
    AgentResponseFromJSONTyped,
    AgentResponseToJSON,
    AgentResponseToJSONTyped,
} from './AgentResponse';

/**
 * Response schema for agent list.
 * @export
 * @interface AgentListResponse
 */
export interface AgentListResponse {
    /**
     * List of agents
     * @type {Array<AgentResponse>}
     * @memberof AgentListResponse
     */
    agents: Array<AgentResponse>;
    /**
     * Total number of agents
     * @type {number}
     * @memberof AgentListResponse
     */
    total: number;
    /**
     * Current page number
     * @type {number}
     * @memberof AgentListResponse
     */
    page: number;
    /**
     * Number of items per page
     * @type {number}
     * @memberof AgentListResponse
     */
    perPage: number;
    /**
     * Total number of pages
     * @type {number}
     * @memberof AgentListResponse
     */
    totalPages: number;
}

/**
 * Check if a given object implements the AgentListResponse interface.
 */
export function instanceOfAgentListResponse(value: object): value is AgentListResponse {
    if (!('agents' in value) || value['agents'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('page' in value) || value['page'] === undefined) return false;
    if (!('perPage' in value) || value['perPage'] === undefined) return false;
    if (!('totalPages' in value) || value['totalPages'] === undefined) return false;
    return true;
}

export function AgentListResponseFromJSON(json: any): AgentListResponse {
    return AgentListResponseFromJSONTyped(json, false);
}

export function AgentListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'agents': ((json['agents'] as Array<any>).map(AgentResponseFromJSON)),
        'total': json['total'],
        'page': json['page'],
        'perPage': json['per_page'],
        'totalPages': json['total_pages'],
    };
}

export function AgentListResponseToJSON(json: any): AgentListResponse {
    return AgentListResponseToJSONTyped(json, false);
}

export function AgentListResponseToJSONTyped(value?: AgentListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'agents': ((value['agents'] as Array<any>).map(AgentResponseToJSON)),
        'total': value['total'],
        'page': value['page'],
        'per_page': value['perPage'],
        'total_pages': value['totalPages'],
    };
}

