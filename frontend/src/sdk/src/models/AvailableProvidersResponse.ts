/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for available providers response.
 * @export
 * @interface AvailableProvidersResponse
 */
export interface AvailableProvidersResponse {
    /**
     * Available LLM providers with their configurations
     * @type {{ [key: string]: any; }}
     * @memberof AvailableProvidersResponse
     */
    providers: { [key: string]: any; };
    /**
     * Total number of available providers
     * @type {number}
     * @memberof AvailableProvidersResponse
     */
    totalProviders: number;
    /**
     * Features supported by each provider
     * @type {{ [key: string]: Array<string>; }}
     * @memberof AvailableProvidersResponse
     */
    supportedFeatures: { [key: string]: Array<string>; };
}

/**
 * Check if a given object implements the AvailableProvidersResponse interface.
 */
export function instanceOfAvailableProvidersResponse(value: object): value is AvailableProvidersResponse {
    if (!('providers' in value) || value['providers'] === undefined) return false;
    if (!('totalProviders' in value) || value['totalProviders'] === undefined) return false;
    if (!('supportedFeatures' in value) || value['supportedFeatures'] === undefined) return false;
    return true;
}

export function AvailableProvidersResponseFromJSON(json: any): AvailableProvidersResponse {
    return AvailableProvidersResponseFromJSONTyped(json, false);
}

export function AvailableProvidersResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AvailableProvidersResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'providers': json['providers'],
        'totalProviders': json['total_providers'],
        'supportedFeatures': json['supported_features'],
    };
}

export function AvailableProvidersResponseToJSON(json: any): AvailableProvidersResponse {
    return AvailableProvidersResponseToJSONTyped(json, false);
}

export function AvailableProvidersResponseToJSONTyped(value?: AvailableProvidersResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'providers': value['providers'],
        'total_providers': value['totalProviders'],
        'supported_features': value['supportedFeatures'],
    };
}

