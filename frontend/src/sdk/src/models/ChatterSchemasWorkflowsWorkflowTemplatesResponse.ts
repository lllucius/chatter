/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkflowTemplateResponse } from './WorkflowTemplateResponse';
import {
    WorkflowTemplateResponseFromJSON,
    WorkflowTemplateResponseFromJSONTyped,
    WorkflowTemplateResponseToJSON,
    WorkflowTemplateResponseToJSONTyped,
} from './WorkflowTemplateResponse';

/**
 * Schema for workflow templates list response.
 * @export
 * @interface ChatterSchemasWorkflowsWorkflowTemplatesResponse
 */
export interface ChatterSchemasWorkflowsWorkflowTemplatesResponse {
    /**
     * Workflow templates
     * @type {Array<WorkflowTemplateResponse>}
     * @memberof ChatterSchemasWorkflowsWorkflowTemplatesResponse
     */
    templates: Array<WorkflowTemplateResponse>;
    /**
     * Total number of templates
     * @type {number}
     * @memberof ChatterSchemasWorkflowsWorkflowTemplatesResponse
     */
    totalCount: number;
}

/**
 * Check if a given object implements the ChatterSchemasWorkflowsWorkflowTemplatesResponse interface.
 */
export function instanceOfChatterSchemasWorkflowsWorkflowTemplatesResponse(value: object): value is ChatterSchemasWorkflowsWorkflowTemplatesResponse {
    if (!('templates' in value) || value['templates'] === undefined) return false;
    if (!('totalCount' in value) || value['totalCount'] === undefined) return false;
    return true;
}

export function ChatterSchemasWorkflowsWorkflowTemplatesResponseFromJSON(json: any): ChatterSchemasWorkflowsWorkflowTemplatesResponse {
    return ChatterSchemasWorkflowsWorkflowTemplatesResponseFromJSONTyped(json, false);
}

export function ChatterSchemasWorkflowsWorkflowTemplatesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatterSchemasWorkflowsWorkflowTemplatesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'templates': ((json['templates'] as Array<any>).map(WorkflowTemplateResponseFromJSON)),
        'totalCount': json['total_count'],
    };
}

export function ChatterSchemasWorkflowsWorkflowTemplatesResponseToJSON(json: any): ChatterSchemasWorkflowsWorkflowTemplatesResponse {
    return ChatterSchemasWorkflowsWorkflowTemplatesResponseToJSONTyped(json, false);
}

export function ChatterSchemasWorkflowsWorkflowTemplatesResponseToJSONTyped(value?: ChatterSchemasWorkflowsWorkflowTemplatesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'templates': ((value['templates'] as Array<any>).map(WorkflowTemplateResponseToJSON)),
        'total_count': value['totalCount'],
    };
}

