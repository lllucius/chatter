/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelType } from './ModelType';
import {
    ModelTypeFromJSON,
    ModelTypeFromJSONTyped,
    ModelTypeToJSON,
    ModelTypeToJSONTyped,
} from './ModelType';

/**
 * Schema for setting default provider.
 * @export
 * @interface DefaultProvider
 */
export interface DefaultProvider {
    /**
     * 
     * @type {ModelType}
     * @memberof DefaultProvider
     */
    modelType: ModelType;
}



/**
 * Check if a given object implements the DefaultProvider interface.
 */
export function instanceOfDefaultProvider(value: object): value is DefaultProvider {
    if (!('modelType' in value) || value['modelType'] === undefined) return false;
    return true;
}

export function DefaultProviderFromJSON(json: any): DefaultProvider {
    return DefaultProviderFromJSONTyped(json, false);
}

export function DefaultProviderFromJSONTyped(json: any, ignoreDiscriminator: boolean): DefaultProvider {
    if (json == null) {
        return json;
    }
    return {
        
        'modelType': ModelTypeFromJSON(json['model_type']),
    };
}

export function DefaultProviderToJSON(json: any): DefaultProvider {
    return DefaultProviderToJSONTyped(json, false);
}

export function DefaultProviderToJSONTyped(value?: DefaultProvider | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'model_type': ModelTypeToJSON(value['modelType']),
    };
}

