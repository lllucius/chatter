/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentStatus } from './DocumentStatus';
import {
    DocumentStatusFromJSON,
    DocumentStatusFromJSONTyped,
    DocumentStatusToJSON,
    DocumentStatusToJSONTyped,
} from './DocumentStatus';

/**
 * Schema for document processing response.
 * @export
 * @interface DocumentProcessingResponse
 */
export interface DocumentProcessingResponse {
    /**
     * Document ID
     * @type {string}
     * @memberof DocumentProcessingResponse
     */
    documentId: string;
    /**
     * 
     * @type {DocumentStatus}
     * @memberof DocumentProcessingResponse
     */
    status: DocumentStatus;
    /**
     * Status message
     * @type {string}
     * @memberof DocumentProcessingResponse
     */
    message: string;
    /**
     * 
     * @type {Date}
     * @memberof DocumentProcessingResponse
     */
    processingStartedAt?: Date | null;
}



/**
 * Check if a given object implements the DocumentProcessingResponse interface.
 */
export function instanceOfDocumentProcessingResponse(value: object): value is DocumentProcessingResponse {
    if (!('documentId' in value) || value['documentId'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    return true;
}

export function DocumentProcessingResponseFromJSON(json: any): DocumentProcessingResponse {
    return DocumentProcessingResponseFromJSONTyped(json, false);
}

export function DocumentProcessingResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentProcessingResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'documentId': json['document_id'],
        'status': DocumentStatusFromJSON(json['status']),
        'message': json['message'],
        'processingStartedAt': json['processing_started_at'] == null ? undefined : (new Date(json['processing_started_at'])),
    };
}

export function DocumentProcessingResponseToJSON(json: any): DocumentProcessingResponse {
    return DocumentProcessingResponseToJSONTyped(json, false);
}

export function DocumentProcessingResponseToJSONTyped(value?: DocumentProcessingResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'document_id': value['documentId'],
        'status': DocumentStatusToJSON(value['status']),
        'message': value['message'],
        'processing_started_at': value['processingStartedAt'] === null ? null : ((value['processingStartedAt'] as any)?.toISOString()),
    };
}

