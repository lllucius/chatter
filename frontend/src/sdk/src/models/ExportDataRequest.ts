/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DataFormat } from './DataFormat';
import {
    DataFormatFromJSON,
    DataFormatFromJSONTyped,
    DataFormatToJSON,
    DataFormatToJSONTyped,
} from './DataFormat';
import type { ExportScope } from './ExportScope';
import {
    ExportScopeFromJSON,
    ExportScopeFromJSONTyped,
    ExportScopeToJSON,
    ExportScopeToJSONTyped,
} from './ExportScope';

/**
 * Request schema for data export API.
 * @export
 * @interface ExportDataRequest
 */
export interface ExportDataRequest {
    /**
     * 
     * @type {ExportScope}
     * @memberof ExportDataRequest
     */
    scope: ExportScope;
    /**
     * 
     * @type {DataFormat}
     * @memberof ExportDataRequest
     */
    format?: DataFormat;
    /**
     * 
     * @type {string}
     * @memberof ExportDataRequest
     */
    userId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExportDataRequest
     */
    conversationId?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof ExportDataRequest
     */
    dateFrom?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof ExportDataRequest
     */
    dateTo?: Date | null;
    /**
     * Include metadata
     * @type {boolean}
     * @memberof ExportDataRequest
     */
    includeMetadata?: boolean;
    /**
     * Compress export file
     * @type {boolean}
     * @memberof ExportDataRequest
     */
    compress?: boolean;
    /**
     * Encrypt export file
     * @type {boolean}
     * @memberof ExportDataRequest
     */
    encrypt?: boolean;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ExportDataRequest
     */
    customQuery?: { [key: string]: any; } | null;
}



/**
 * Check if a given object implements the ExportDataRequest interface.
 */
export function instanceOfExportDataRequest(value: object): value is ExportDataRequest {
    if (!('scope' in value) || value['scope'] === undefined) return false;
    return true;
}

export function ExportDataRequestFromJSON(json: any): ExportDataRequest {
    return ExportDataRequestFromJSONTyped(json, false);
}

export function ExportDataRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExportDataRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'scope': ExportScopeFromJSON(json['scope']),
        'format': json['format'] == null ? undefined : DataFormatFromJSON(json['format']),
        'userId': json['user_id'] == null ? undefined : json['user_id'],
        'conversationId': json['conversation_id'] == null ? undefined : json['conversation_id'],
        'dateFrom': json['date_from'] == null ? undefined : (new Date(json['date_from'])),
        'dateTo': json['date_to'] == null ? undefined : (new Date(json['date_to'])),
        'includeMetadata': json['include_metadata'] == null ? undefined : json['include_metadata'],
        'compress': json['compress'] == null ? undefined : json['compress'],
        'encrypt': json['encrypt'] == null ? undefined : json['encrypt'],
        'customQuery': json['custom_query'] == null ? undefined : json['custom_query'],
    };
}

export function ExportDataRequestToJSON(json: any): ExportDataRequest {
    return ExportDataRequestToJSONTyped(json, false);
}

export function ExportDataRequestToJSONTyped(value?: ExportDataRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'scope': ExportScopeToJSON(value['scope']),
        'format': DataFormatToJSON(value['format']),
        'user_id': value['userId'],
        'conversation_id': value['conversationId'],
        'date_from': value['dateFrom'] === null ? null : ((value['dateFrom'] as any)?.toISOString()),
        'date_to': value['dateTo'] === null ? null : ((value['dateTo'] as any)?.toISOString()),
        'include_metadata': value['includeMetadata'],
        'compress': value['compress'],
        'encrypt': value['encrypt'],
        'custom_query': value['customQuery'],
    };
}

