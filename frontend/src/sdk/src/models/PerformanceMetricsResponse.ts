/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for performance metrics response.
 * @export
 * @interface PerformanceMetricsResponse
 */
export interface PerformanceMetricsResponse {
    /**
     * Average response time
     * @type {number}
     * @memberof PerformanceMetricsResponse
     */
    avgResponseTimeMs: number;
    /**
     * Median response time
     * @type {number}
     * @memberof PerformanceMetricsResponse
     */
    medianResponseTimeMs: number;
    /**
     * 95th percentile response time
     * @type {number}
     * @memberof PerformanceMetricsResponse
     */
    p95ResponseTimeMs: number;
    /**
     * 99th percentile response time
     * @type {number}
     * @memberof PerformanceMetricsResponse
     */
    p99ResponseTimeMs: number;
    /**
     * Average requests per minute
     * @type {number}
     * @memberof PerformanceMetricsResponse
     */
    requestsPerMinute: number;
    /**
     * Average tokens per minute
     * @type {number}
     * @memberof PerformanceMetricsResponse
     */
    tokensPerMinute: number;
    /**
     * Total number of errors
     * @type {number}
     * @memberof PerformanceMetricsResponse
     */
    totalErrors: number;
    /**
     * Error rate percentage
     * @type {number}
     * @memberof PerformanceMetricsResponse
     */
    errorRate: number;
    /**
     * Errors grouped by type
     * @type {{ [key: string]: number; }}
     * @memberof PerformanceMetricsResponse
     */
    errorsByType: { [key: string]: number; };
    /**
     * Performance metrics by model
     * @type {{ [key: string]: { [key: string]: number; }; }}
     * @memberof PerformanceMetricsResponse
     */
    performanceByModel: { [key: string]: { [key: string]: number; }; };
    /**
     * Performance metrics by provider
     * @type {{ [key: string]: { [key: string]: number; }; }}
     * @memberof PerformanceMetricsResponse
     */
    performanceByProvider: { [key: string]: { [key: string]: number; }; };
    /**
     * Average database response time
     * @type {number}
     * @memberof PerformanceMetricsResponse
     */
    databaseResponseTimeMs: number;
    /**
     * Average vector search time
     * @type {number}
     * @memberof PerformanceMetricsResponse
     */
    vectorSearchTimeMs: number;
    /**
     * Average embedding generation time
     * @type {number}
     * @memberof PerformanceMetricsResponse
     */
    embeddingGenerationTimeMs: number;
}

/**
 * Check if a given object implements the PerformanceMetricsResponse interface.
 */
export function instanceOfPerformanceMetricsResponse(value: object): value is PerformanceMetricsResponse {
    if (!('avgResponseTimeMs' in value) || value['avgResponseTimeMs'] === undefined) return false;
    if (!('medianResponseTimeMs' in value) || value['medianResponseTimeMs'] === undefined) return false;
    if (!('p95ResponseTimeMs' in value) || value['p95ResponseTimeMs'] === undefined) return false;
    if (!('p99ResponseTimeMs' in value) || value['p99ResponseTimeMs'] === undefined) return false;
    if (!('requestsPerMinute' in value) || value['requestsPerMinute'] === undefined) return false;
    if (!('tokensPerMinute' in value) || value['tokensPerMinute'] === undefined) return false;
    if (!('totalErrors' in value) || value['totalErrors'] === undefined) return false;
    if (!('errorRate' in value) || value['errorRate'] === undefined) return false;
    if (!('errorsByType' in value) || value['errorsByType'] === undefined) return false;
    if (!('performanceByModel' in value) || value['performanceByModel'] === undefined) return false;
    if (!('performanceByProvider' in value) || value['performanceByProvider'] === undefined) return false;
    if (!('databaseResponseTimeMs' in value) || value['databaseResponseTimeMs'] === undefined) return false;
    if (!('vectorSearchTimeMs' in value) || value['vectorSearchTimeMs'] === undefined) return false;
    if (!('embeddingGenerationTimeMs' in value) || value['embeddingGenerationTimeMs'] === undefined) return false;
    return true;
}

export function PerformanceMetricsResponseFromJSON(json: any): PerformanceMetricsResponse {
    return PerformanceMetricsResponseFromJSONTyped(json, false);
}

export function PerformanceMetricsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PerformanceMetricsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'avgResponseTimeMs': json['avg_response_time_ms'],
        'medianResponseTimeMs': json['median_response_time_ms'],
        'p95ResponseTimeMs': json['p95_response_time_ms'],
        'p99ResponseTimeMs': json['p99_response_time_ms'],
        'requestsPerMinute': json['requests_per_minute'],
        'tokensPerMinute': json['tokens_per_minute'],
        'totalErrors': json['total_errors'],
        'errorRate': json['error_rate'],
        'errorsByType': json['errors_by_type'],
        'performanceByModel': json['performance_by_model'],
        'performanceByProvider': json['performance_by_provider'],
        'databaseResponseTimeMs': json['database_response_time_ms'],
        'vectorSearchTimeMs': json['vector_search_time_ms'],
        'embeddingGenerationTimeMs': json['embedding_generation_time_ms'],
    };
}

export function PerformanceMetricsResponseToJSON(json: any): PerformanceMetricsResponse {
    return PerformanceMetricsResponseToJSONTyped(json, false);
}

export function PerformanceMetricsResponseToJSONTyped(value?: PerformanceMetricsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'avg_response_time_ms': value['avgResponseTimeMs'],
        'median_response_time_ms': value['medianResponseTimeMs'],
        'p95_response_time_ms': value['p95ResponseTimeMs'],
        'p99_response_time_ms': value['p99ResponseTimeMs'],
        'requests_per_minute': value['requestsPerMinute'],
        'tokens_per_minute': value['tokensPerMinute'],
        'total_errors': value['totalErrors'],
        'error_rate': value['errorRate'],
        'errors_by_type': value['errorsByType'],
        'performance_by_model': value['performanceByModel'],
        'performance_by_provider': value['performanceByProvider'],
        'database_response_time_ms': value['databaseResponseTimeMs'],
        'vector_search_time_ms': value['vectorSearchTimeMs'],
        'embedding_generation_time_ms': value['embeddingGenerationTimeMs'],
    };
}

