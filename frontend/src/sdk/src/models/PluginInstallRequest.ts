/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Request schema for installing a plugin.
 * @export
 * @interface PluginInstallRequest
 */
export interface PluginInstallRequest {
    /**
     * Path to plugin file or directory
     * @type {string}
     * @memberof PluginInstallRequest
     */
    pluginPath: string;
    /**
     * Enable plugin after installation
     * @type {boolean}
     * @memberof PluginInstallRequest
     */
    enableOnInstall?: boolean;
}

/**
 * Check if a given object implements the PluginInstallRequest interface.
 */
export function instanceOfPluginInstallRequest(value: object): value is PluginInstallRequest {
    if (!('pluginPath' in value) || value['pluginPath'] === undefined) return false;
    return true;
}

export function PluginInstallRequestFromJSON(json: any): PluginInstallRequest {
    return PluginInstallRequestFromJSONTyped(json, false);
}

export function PluginInstallRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PluginInstallRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'pluginPath': json['plugin_path'],
        'enableOnInstall': json['enable_on_install'] == null ? undefined : json['enable_on_install'],
    };
}

export function PluginInstallRequestToJSON(json: any): PluginInstallRequest {
    return PluginInstallRequestToJSONTyped(json, false);
}

export function PluginInstallRequestToJSONTyped(value?: PluginInstallRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'plugin_path': value['pluginPath'],
        'enable_on_install': value['enableOnInstall'],
    };
}

