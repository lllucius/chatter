/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Types of plugins.
 * @export
 */
export const PluginType = {
    tool: 'tool',
    workflow: 'workflow',
    integration: 'integration',
    middleware: 'middleware',
    handler: 'handler',
    extension: 'extension'
} as const;
export type PluginType = typeof PluginType[keyof typeof PluginType];


export function instanceOfPluginType(value: any): boolean {
    for (const key in PluginType) {
        if (Object.prototype.hasOwnProperty.call(PluginType, key)) {
            if (PluginType[key as keyof typeof PluginType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function PluginTypeFromJSON(json: any): PluginType {
    return PluginTypeFromJSONTyped(json, false);
}

export function PluginTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PluginType {
    return json as PluginType;
}

export function PluginTypeToJSON(value?: PluginType | null): any {
    return value as any;
}

export function PluginTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): PluginType {
    return value as PluginType;
}

