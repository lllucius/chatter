/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProfileType } from './ProfileType';
import {
    ProfileTypeFromJSON,
    ProfileTypeFromJSONTyped,
    ProfileTypeToJSON,
    ProfileTypeToJSONTyped,
} from './ProfileType';

/**
 * Schema for updating a profile.
 * @export
 * @interface ProfileUpdate
 */
export interface ProfileUpdate {
    /**
     * 
     * @type {string}
     * @memberof ProfileUpdate
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProfileUpdate
     */
    description?: string | null;
    /**
     * 
     * @type {ProfileType}
     * @memberof ProfileUpdate
     */
    profileType?: ProfileType | null;
    /**
     * 
     * @type {string}
     * @memberof ProfileUpdate
     */
    llmProvider?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProfileUpdate
     */
    llmModel?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ProfileUpdate
     */
    temperature?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ProfileUpdate
     */
    topP?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ProfileUpdate
     */
    topK?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ProfileUpdate
     */
    maxTokens?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ProfileUpdate
     */
    presencePenalty?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ProfileUpdate
     */
    frequencyPenalty?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ProfileUpdate
     */
    contextWindow?: number | null;
    /**
     * 
     * @type {string}
     * @memberof ProfileUpdate
     */
    systemPrompt?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ProfileUpdate
     */
    memoryEnabled?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof ProfileUpdate
     */
    memoryStrategy?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ProfileUpdate
     */
    enableRetrieval?: boolean | null;
    /**
     * 
     * @type {number}
     * @memberof ProfileUpdate
     */
    retrievalLimit?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ProfileUpdate
     */
    retrievalScoreThreshold?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof ProfileUpdate
     */
    enableTools?: boolean | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProfileUpdate
     */
    availableTools?: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof ProfileUpdate
     */
    toolChoice?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ProfileUpdate
     */
    contentFilterEnabled?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof ProfileUpdate
     */
    safetyLevel?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProfileUpdate
     */
    responseFormat?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ProfileUpdate
     */
    streamResponse?: boolean | null;
    /**
     * 
     * @type {number}
     * @memberof ProfileUpdate
     */
    seed?: number | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProfileUpdate
     */
    stopSequences?: Array<string> | null;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof ProfileUpdate
     */
    logitBias?: { [key: string]: number; } | null;
    /**
     * 
     * @type {string}
     * @memberof ProfileUpdate
     */
    embeddingProvider?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProfileUpdate
     */
    embeddingModel?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ProfileUpdate
     */
    isPublic?: boolean | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProfileUpdate
     */
    tags?: Array<string> | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ProfileUpdate
     */
    extraMetadata?: { [key: string]: any; } | null;
}



/**
 * Check if a given object implements the ProfileUpdate interface.
 */
export function instanceOfProfileUpdate(value: object): value is ProfileUpdate {
    return true;
}

export function ProfileUpdateFromJSON(json: any): ProfileUpdate {
    return ProfileUpdateFromJSONTyped(json, false);
}

export function ProfileUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'profileType': json['profile_type'] == null ? undefined : ProfileTypeFromJSON(json['profile_type']),
        'llmProvider': json['llm_provider'] == null ? undefined : json['llm_provider'],
        'llmModel': json['llm_model'] == null ? undefined : json['llm_model'],
        'temperature': json['temperature'] == null ? undefined : json['temperature'],
        'topP': json['top_p'] == null ? undefined : json['top_p'],
        'topK': json['top_k'] == null ? undefined : json['top_k'],
        'maxTokens': json['max_tokens'] == null ? undefined : json['max_tokens'],
        'presencePenalty': json['presence_penalty'] == null ? undefined : json['presence_penalty'],
        'frequencyPenalty': json['frequency_penalty'] == null ? undefined : json['frequency_penalty'],
        'contextWindow': json['context_window'] == null ? undefined : json['context_window'],
        'systemPrompt': json['system_prompt'] == null ? undefined : json['system_prompt'],
        'memoryEnabled': json['memory_enabled'] == null ? undefined : json['memory_enabled'],
        'memoryStrategy': json['memory_strategy'] == null ? undefined : json['memory_strategy'],
        'enableRetrieval': json['enable_retrieval'] == null ? undefined : json['enable_retrieval'],
        'retrievalLimit': json['retrieval_limit'] == null ? undefined : json['retrieval_limit'],
        'retrievalScoreThreshold': json['retrieval_score_threshold'] == null ? undefined : json['retrieval_score_threshold'],
        'enableTools': json['enable_tools'] == null ? undefined : json['enable_tools'],
        'availableTools': json['available_tools'] == null ? undefined : json['available_tools'],
        'toolChoice': json['tool_choice'] == null ? undefined : json['tool_choice'],
        'contentFilterEnabled': json['content_filter_enabled'] == null ? undefined : json['content_filter_enabled'],
        'safetyLevel': json['safety_level'] == null ? undefined : json['safety_level'],
        'responseFormat': json['response_format'] == null ? undefined : json['response_format'],
        'streamResponse': json['stream_response'] == null ? undefined : json['stream_response'],
        'seed': json['seed'] == null ? undefined : json['seed'],
        'stopSequences': json['stop_sequences'] == null ? undefined : json['stop_sequences'],
        'logitBias': json['logit_bias'] == null ? undefined : json['logit_bias'],
        'embeddingProvider': json['embedding_provider'] == null ? undefined : json['embedding_provider'],
        'embeddingModel': json['embedding_model'] == null ? undefined : json['embedding_model'],
        'isPublic': json['is_public'] == null ? undefined : json['is_public'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'extraMetadata': json['extra_metadata'] == null ? undefined : json['extra_metadata'],
    };
}

export function ProfileUpdateToJSON(json: any): ProfileUpdate {
    return ProfileUpdateToJSONTyped(json, false);
}

export function ProfileUpdateToJSONTyped(value?: ProfileUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'profile_type': ProfileTypeToJSON(value['profileType']),
        'llm_provider': value['llmProvider'],
        'llm_model': value['llmModel'],
        'temperature': value['temperature'],
        'top_p': value['topP'],
        'top_k': value['topK'],
        'max_tokens': value['maxTokens'],
        'presence_penalty': value['presencePenalty'],
        'frequency_penalty': value['frequencyPenalty'],
        'context_window': value['contextWindow'],
        'system_prompt': value['systemPrompt'],
        'memory_enabled': value['memoryEnabled'],
        'memory_strategy': value['memoryStrategy'],
        'enable_retrieval': value['enableRetrieval'],
        'retrieval_limit': value['retrievalLimit'],
        'retrieval_score_threshold': value['retrievalScoreThreshold'],
        'enable_tools': value['enableTools'],
        'available_tools': value['availableTools'],
        'tool_choice': value['toolChoice'],
        'content_filter_enabled': value['contentFilterEnabled'],
        'safety_level': value['safetyLevel'],
        'response_format': value['responseFormat'],
        'stream_response': value['streamResponse'],
        'seed': value['seed'],
        'stop_sequences': value['stopSequences'],
        'logit_bias': value['logitBias'],
        'embedding_provider': value['embeddingProvider'],
        'embedding_model': value['embeddingModel'],
        'is_public': value['isPublic'],
        'tags': value['tags'],
        'extra_metadata': value['extraMetadata'],
    };
}

