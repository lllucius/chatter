/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Types of AI providers.
 * @export
 */
export const ProviderType = {
    openai: 'openai',
    anthropic: 'anthropic',
    google: 'google',
    cohere: 'cohere',
    mistral: 'mistral'
} as const;
export type ProviderType = typeof ProviderType[keyof typeof ProviderType];


export function instanceOfProviderType(value: any): boolean {
    for (const key in ProviderType) {
        if (Object.prototype.hasOwnProperty.call(ProviderType, key)) {
            if (ProviderType[key as keyof typeof ProviderType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function ProviderTypeFromJSON(json: any): ProviderType {
    return ProviderTypeFromJSONTyped(json, false);
}

export function ProviderTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProviderType {
    return json as ProviderType;
}

export function ProviderTypeToJSON(value?: ProviderType | null): any {
    return value as any;
}

export function ProviderTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): ProviderType {
    return value as ProviderType;
}

