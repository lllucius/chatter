/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ToolAccessLevel } from './ToolAccessLevel';
import {
    ToolAccessLevelFromJSON,
    ToolAccessLevelFromJSONTyped,
    ToolAccessLevelToJSON,
    ToolAccessLevelToJSONTyped,
} from './ToolAccessLevel';
import type { UserRole } from './UserRole';
import {
    UserRoleFromJSON,
    UserRoleFromJSONTyped,
    UserRoleToJSON,
    UserRoleToJSONTyped,
} from './UserRole';

/**
 * Schema for role-based tool access response.
 * @export
 * @interface RoleToolAccessResponse
 */
export interface RoleToolAccessResponse {
    /**
     * 
     * @type {UserRole}
     * @memberof RoleToolAccessResponse
     */
    role: UserRole;
    /**
     * 
     * @type {string}
     * @memberof RoleToolAccessResponse
     */
    toolPattern?: string | null;
    /**
     * 
     * @type {string}
     * @memberof RoleToolAccessResponse
     */
    serverPattern?: string | null;
    /**
     * 
     * @type {ToolAccessLevel}
     * @memberof RoleToolAccessResponse
     */
    accessLevel: ToolAccessLevel;
    /**
     * 
     * @type {number}
     * @memberof RoleToolAccessResponse
     */
    defaultRateLimitPerHour?: number | null;
    /**
     * 
     * @type {number}
     * @memberof RoleToolAccessResponse
     */
    defaultRateLimitPerDay?: number | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof RoleToolAccessResponse
     */
    allowedHours?: Array<number> | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof RoleToolAccessResponse
     */
    allowedDays?: Array<number> | null;
    /**
     * Access rule ID
     * @type {string}
     * @memberof RoleToolAccessResponse
     */
    id: string;
    /**
     * Creator user ID
     * @type {string}
     * @memberof RoleToolAccessResponse
     */
    createdBy: string;
    /**
     * Creation timestamp
     * @type {Date}
     * @memberof RoleToolAccessResponse
     */
    createdAt: Date;
}



/**
 * Check if a given object implements the RoleToolAccessResponse interface.
 */
export function instanceOfRoleToolAccessResponse(value: object): value is RoleToolAccessResponse {
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('accessLevel' in value) || value['accessLevel'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function RoleToolAccessResponseFromJSON(json: any): RoleToolAccessResponse {
    return RoleToolAccessResponseFromJSONTyped(json, false);
}

export function RoleToolAccessResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoleToolAccessResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'role': UserRoleFromJSON(json['role']),
        'toolPattern': json['tool_pattern'] == null ? undefined : json['tool_pattern'],
        'serverPattern': json['server_pattern'] == null ? undefined : json['server_pattern'],
        'accessLevel': ToolAccessLevelFromJSON(json['access_level']),
        'defaultRateLimitPerHour': json['default_rate_limit_per_hour'] == null ? undefined : json['default_rate_limit_per_hour'],
        'defaultRateLimitPerDay': json['default_rate_limit_per_day'] == null ? undefined : json['default_rate_limit_per_day'],
        'allowedHours': json['allowed_hours'] == null ? undefined : json['allowed_hours'],
        'allowedDays': json['allowed_days'] == null ? undefined : json['allowed_days'],
        'id': json['id'],
        'createdBy': json['created_by'],
        'createdAt': (new Date(json['created_at'])),
    };
}

export function RoleToolAccessResponseToJSON(json: any): RoleToolAccessResponse {
    return RoleToolAccessResponseToJSONTyped(json, false);
}

export function RoleToolAccessResponseToJSONTyped(value?: RoleToolAccessResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'role': UserRoleToJSON(value['role']),
        'tool_pattern': value['toolPattern'],
        'server_pattern': value['serverPattern'],
        'access_level': ToolAccessLevelToJSON(value['accessLevel']),
        'default_rate_limit_per_hour': value['defaultRateLimitPerHour'],
        'default_rate_limit_per_day': value['defaultRateLimitPerDay'],
        'allowed_hours': value['allowedHours'],
        'allowed_days': value['allowedDays'],
        'id': value['id'],
        'created_by': value['createdBy'],
        'created_at': ((value['createdAt']).toISOString()),
    };
}

