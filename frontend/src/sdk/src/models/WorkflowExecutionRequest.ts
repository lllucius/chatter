/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for starting a workflow execution.
 * @export
 * @interface WorkflowExecutionRequest
 */
export interface WorkflowExecutionRequest {
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof WorkflowExecutionRequest
     */
    inputData?: { [key: string]: any; } | null;
    /**
     * Workflow definition ID
     * @type {string}
     * @memberof WorkflowExecutionRequest
     */
    definitionId: string;
}

/**
 * Check if a given object implements the WorkflowExecutionRequest interface.
 */
export function instanceOfWorkflowExecutionRequest(value: object): value is WorkflowExecutionRequest {
    if (!('definitionId' in value) || value['definitionId'] === undefined) return false;
    return true;
}

export function WorkflowExecutionRequestFromJSON(json: any): WorkflowExecutionRequest {
    return WorkflowExecutionRequestFromJSONTyped(json, false);
}

export function WorkflowExecutionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowExecutionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'inputData': json['input_data'] == null ? undefined : json['input_data'],
        'definitionId': json['definition_id'],
    };
}

export function WorkflowExecutionRequestToJSON(json: any): WorkflowExecutionRequest {
    return WorkflowExecutionRequestToJSONTyped(json, false);
}

export function WorkflowExecutionRequestToJSONTyped(value?: WorkflowExecutionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'input_data': value['inputData'],
        'definition_id': value['definitionId'],
    };
}

