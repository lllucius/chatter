/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for workflow node data.
 * @export
 * @interface WorkflowNodeData
 */
export interface WorkflowNodeData {
    /**
     * Node display label
     * @type {string}
     * @memberof WorkflowNodeData
     */
    label: string;
    /**
     * Type of the node
     * @type {string}
     * @memberof WorkflowNodeData
     */
    nodeType: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof WorkflowNodeData
     */
    config?: { [key: string]: any; } | null;
}

/**
 * Check if a given object implements the WorkflowNodeData interface.
 */
export function instanceOfWorkflowNodeData(value: object): value is WorkflowNodeData {
    if (!('label' in value) || value['label'] === undefined) return false;
    if (!('nodeType' in value) || value['nodeType'] === undefined) return false;
    return true;
}

export function WorkflowNodeDataFromJSON(json: any): WorkflowNodeData {
    return WorkflowNodeDataFromJSONTyped(json, false);
}

export function WorkflowNodeDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowNodeData {
    if (json == null) {
        return json;
    }
    return {
        
        'label': json['label'],
        'nodeType': json['nodeType'],
        'config': json['config'] == null ? undefined : json['config'],
    };
}

export function WorkflowNodeDataToJSON(json: any): WorkflowNodeData {
    return WorkflowNodeDataToJSONTyped(json, false);
}

export function WorkflowNodeDataToJSONTyped(value?: WorkflowNodeData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'label': value['label'],
        'nodeType': value['nodeType'],
        'config': value['config'],
    };
}

