/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for workflow template information.
 * @export
 * @interface WorkflowTemplateInfo
 */
export interface WorkflowTemplateInfo {
    /**
     * Template name
     * @type {string}
     * @memberof WorkflowTemplateInfo
     */
    name: string;
    /**
     * Workflow type
     * @type {string}
     * @memberof WorkflowTemplateInfo
     */
    workflowType: string;
    /**
     * Template description
     * @type {string}
     * @memberof WorkflowTemplateInfo
     */
    description: string;
    /**
     * Required tools
     * @type {Array<string>}
     * @memberof WorkflowTemplateInfo
     */
    requiredTools: Array<string>;
    /**
     * Required retrievers
     * @type {Array<string>}
     * @memberof WorkflowTemplateInfo
     */
    requiredRetrievers: Array<string>;
    /**
     * Default parameters
     * @type {{ [key: string]: any; }}
     * @memberof WorkflowTemplateInfo
     */
    defaultParams: { [key: string]: any; };
}

/**
 * Check if a given object implements the WorkflowTemplateInfo interface.
 */
export function instanceOfWorkflowTemplateInfo(value: object): value is WorkflowTemplateInfo {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('workflowType' in value) || value['workflowType'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('requiredTools' in value) || value['requiredTools'] === undefined) return false;
    if (!('requiredRetrievers' in value) || value['requiredRetrievers'] === undefined) return false;
    if (!('defaultParams' in value) || value['defaultParams'] === undefined) return false;
    return true;
}

export function WorkflowTemplateInfoFromJSON(json: any): WorkflowTemplateInfo {
    return WorkflowTemplateInfoFromJSONTyped(json, false);
}

export function WorkflowTemplateInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowTemplateInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'workflowType': json['workflow_type'],
        'description': json['description'],
        'requiredTools': json['required_tools'],
        'requiredRetrievers': json['required_retrievers'],
        'defaultParams': json['default_params'],
    };
}

export function WorkflowTemplateInfoToJSON(json: any): WorkflowTemplateInfo {
    return WorkflowTemplateInfoToJSONTyped(json, false);
}

export function WorkflowTemplateInfoToJSONTyped(value?: WorkflowTemplateInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'workflow_type': value['workflowType'],
        'description': value['description'],
        'required_tools': value['requiredTools'],
        'required_retrievers': value['requiredRetrievers'],
        'default_params': value['defaultParams'],
    };
}

