/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for workflow template response.
 * @export
 * @interface WorkflowTemplateResponse
 */
export interface WorkflowTemplateResponse {
    /**
     * Template name
     * @type {string}
     * @memberof WorkflowTemplateResponse
     */
    name: string;
    /**
     * Template description
     * @type {string}
     * @memberof WorkflowTemplateResponse
     */
    description: string;
    /**
     * Workflow type
     * @type {string}
     * @memberof WorkflowTemplateResponse
     */
    workflowType: string;
    /**
     * Template category
     * @type {string}
     * @memberof WorkflowTemplateResponse
     */
    category?: string;
    /**
     * Default parameters
     * @type {{ [key: string]: any; }}
     * @memberof WorkflowTemplateResponse
     */
    defaultParams?: { [key: string]: any; };
    /**
     * 
     * @type {Array<string>}
     * @memberof WorkflowTemplateResponse
     */
    requiredTools?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof WorkflowTemplateResponse
     */
    requiredRetrievers?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof WorkflowTemplateResponse
     */
    tags?: Array<string> | null;
    /**
     * Whether template is public
     * @type {boolean}
     * @memberof WorkflowTemplateResponse
     */
    isPublic?: boolean;
    /**
     * Unique node identifier
     * @type {string}
     * @memberof WorkflowTemplateResponse
     */
    id: string;
    /**
     * Owner user ID
     * @type {string}
     * @memberof WorkflowTemplateResponse
     */
    ownerId: string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowTemplateResponse
     */
    baseTemplateId?: string | null;
    /**
     * Whether template is built-in
     * @type {boolean}
     * @memberof WorkflowTemplateResponse
     */
    isBuiltin?: boolean;
    /**
     * Template version
     * @type {number}
     * @memberof WorkflowTemplateResponse
     */
    version?: number;
    /**
     * Whether this is the latest version
     * @type {boolean}
     * @memberof WorkflowTemplateResponse
     */
    isLatest?: boolean;
    /**
     * 
     * @type {number}
     * @memberof WorkflowTemplateResponse
     */
    rating?: number | null;
    /**
     * Number of ratings
     * @type {number}
     * @memberof WorkflowTemplateResponse
     */
    ratingCount?: number;
    /**
     * Usage count
     * @type {number}
     * @memberof WorkflowTemplateResponse
     */
    usageCount?: number;
    /**
     * 
     * @type {number}
     * @memberof WorkflowTemplateResponse
     */
    successRate?: number | null;
    /**
     * Configuration hash
     * @type {string}
     * @memberof WorkflowTemplateResponse
     */
    configHash: string;
    /**
     * 
     * @type {number}
     * @memberof WorkflowTemplateResponse
     */
    estimatedComplexity?: number | null;
}

/**
 * Check if a given object implements the WorkflowTemplateResponse interface.
 */
export function instanceOfWorkflowTemplateResponse(value: object): value is WorkflowTemplateResponse {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('workflowType' in value) || value['workflowType'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('ownerId' in value) || value['ownerId'] === undefined) return false;
    if (!('configHash' in value) || value['configHash'] === undefined) return false;
    return true;
}

export function WorkflowTemplateResponseFromJSON(json: any): WorkflowTemplateResponse {
    return WorkflowTemplateResponseFromJSONTyped(json, false);
}

export function WorkflowTemplateResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowTemplateResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'],
        'workflowType': json['workflow_type'],
        'category': json['category'] == null ? undefined : json['category'],
        'defaultParams': json['default_params'] == null ? undefined : json['default_params'],
        'requiredTools': json['required_tools'] == null ? undefined : json['required_tools'],
        'requiredRetrievers': json['required_retrievers'] == null ? undefined : json['required_retrievers'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'isPublic': json['is_public'] == null ? undefined : json['is_public'],
        'id': json['id'],
        'ownerId': json['owner_id'],
        'baseTemplateId': json['base_template_id'] == null ? undefined : json['base_template_id'],
        'isBuiltin': json['is_builtin'] == null ? undefined : json['is_builtin'],
        'version': json['version'] == null ? undefined : json['version'],
        'isLatest': json['is_latest'] == null ? undefined : json['is_latest'],
        'rating': json['rating'] == null ? undefined : json['rating'],
        'ratingCount': json['rating_count'] == null ? undefined : json['rating_count'],
        'usageCount': json['usage_count'] == null ? undefined : json['usage_count'],
        'successRate': json['success_rate'] == null ? undefined : json['success_rate'],
        'configHash': json['config_hash'],
        'estimatedComplexity': json['estimated_complexity'] == null ? undefined : json['estimated_complexity'],
    };
}

export function WorkflowTemplateResponseToJSON(json: any): WorkflowTemplateResponse {
    return WorkflowTemplateResponseToJSONTyped(json, false);
}

export function WorkflowTemplateResponseToJSONTyped(value?: WorkflowTemplateResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'workflow_type': value['workflowType'],
        'category': value['category'],
        'default_params': value['defaultParams'],
        'required_tools': value['requiredTools'],
        'required_retrievers': value['requiredRetrievers'],
        'tags': value['tags'],
        'is_public': value['isPublic'],
        'id': value['id'],
        'owner_id': value['ownerId'],
        'base_template_id': value['baseTemplateId'],
        'is_builtin': value['isBuiltin'],
        'version': value['version'],
        'is_latest': value['isLatest'],
        'rating': value['rating'],
        'rating_count': value['ratingCount'],
        'usage_count': value['usageCount'],
        'success_rate': value['successRate'],
        'config_hash': value['configHash'],
        'estimated_complexity': value['estimatedComplexity'],
    };
}

