/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ValidationError } from './ValidationError';
import {
    ValidationErrorFromJSON,
    ValidationErrorFromJSONTyped,
    ValidationErrorToJSON,
    ValidationErrorToJSONTyped,
} from './ValidationError';

/**
 * Schema for workflow validation response.
 * @export
 * @interface WorkflowValidationResponse
 */
export interface WorkflowValidationResponse {
    /**
     * Whether workflow is valid
     * @type {boolean}
     * @memberof WorkflowValidationResponse
     */
    isValid: boolean;
    /**
     * Validation errors
     * @type {Array<ValidationError>}
     * @memberof WorkflowValidationResponse
     */
    errors: Array<ValidationError>;
    /**
     * Validation warnings
     * @type {Array<ValidationError>}
     * @memberof WorkflowValidationResponse
     */
    warnings: Array<ValidationError>;
    /**
     * Validation suggestions
     * @type {Array<string>}
     * @memberof WorkflowValidationResponse
     */
    suggestions: Array<string>;
}

/**
 * Check if a given object implements the WorkflowValidationResponse interface.
 */
export function instanceOfWorkflowValidationResponse(value: object): value is WorkflowValidationResponse {
    if (!('isValid' in value) || value['isValid'] === undefined) return false;
    if (!('errors' in value) || value['errors'] === undefined) return false;
    if (!('warnings' in value) || value['warnings'] === undefined) return false;
    if (!('suggestions' in value) || value['suggestions'] === undefined) return false;
    return true;
}

export function WorkflowValidationResponseFromJSON(json: any): WorkflowValidationResponse {
    return WorkflowValidationResponseFromJSONTyped(json, false);
}

export function WorkflowValidationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowValidationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'isValid': json['is_valid'],
        'errors': ((json['errors'] as Array<any>).map(ValidationErrorFromJSON)),
        'warnings': ((json['warnings'] as Array<any>).map(ValidationErrorFromJSON)),
        'suggestions': json['suggestions'],
    };
}

export function WorkflowValidationResponseToJSON(json: any): WorkflowValidationResponse {
    return WorkflowValidationResponseToJSONTyped(json, false);
}

export function WorkflowValidationResponseToJSONTyped(value?: WorkflowValidationResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'is_valid': value['isValid'],
        'errors': ((value['errors'] as Array<any>).map(ValidationErrorToJSON)),
        'warnings': ((value['warnings'] as Array<any>).map(ValidationErrorToJSON)),
        'suggestions': value['suggestions'],
    };
}

