[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "chatter"
version = "0.1.0"
description = "Advanced AI Chatbot Backend API Platform"
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
authors = [
    {name = "Chatter Team"},
]
keywords = ["ai", "chatbot", "api", "langchain", "langgraph", "fastapi", "postgres", "vector-store"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    # FastAPI and ASGI
    "fastapi==0.115.6",
    "fastapi-problem==0.11.5",
    "uvicorn[standard]==0.32.1",
    "hypercorn==0.17.3",
    "uvloop==0.21.0",
    
    # Database and ORM
    "sqlalchemy[asyncio]==2.0.36",
    "asyncpg==0.30.0",
    "alembic==1.16.5",
    "psycopg2-binary==2.9.10",
    
    # Vector Store and Search
    "pgvector>=0.3.0,<0.4.0",
    
    # LangChain ecosystem
    "langchain==0.3.27",
    "langchain-community==0.3.29",
    "langchain-core==0.3.75",
    "langchain-openai==0.3.32",
    "langchain-anthropic==0.3.19",
    "langchain-google-genai==2.1.10",
    "langchain-cohere==0.4.5",
    "langchain-postgres==0.0.15",
    "langchain-mcp-adapters==0.1.9",
    "langgraph==0.2.76",
    "langgraph-checkpoint-postgres==2.0.23",
    "langgraph-checkpoint-sqlite==2.0.11",
    
    # Document processing
    "unstructured[all-docs]==0.16.13",
    "langchain-unstructured==0.1.6",
    "pypdf==5.1.0",
    "python-multipart==0.0.18",
    
    # Authentication and Security
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",
    
    # Configuration and Environment
    "pydantic>=2.11.0,<3.0.0",
    "pydantic-settings>=2.10.1,<3.0.0",
    "python-dotenv==1.0.1",
    
    # HTTP and Async
    "httpx==0.28.1",
    "aiofiles==24.1.0",
    "asyncio-mqtt==0.16.2",
    
    # Monitoring and Logging
    "structlog==24.4.0",
    "opentelemetry-api==1.29.0",
    "opentelemetry-sdk==1.29.0",
    
    # Rate limiting and caching
    "slowapi==0.1.9",
    "redis==5.2.1",
    "aioredis==2.0.1",
    
    # Utilities
    "typer==0.14.0",
    "rich==14.1.0",
    "click==8.1.8",
    "pendulum==3.0.0",
    "orjson==3.10.12",
    
    # Job Scheduling
    "apscheduler==3.11.0",
    
    # MCP and tools
    "mcp==1.13.0",
    "httpx-sse>=0.4.0,<1.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest==8.3.4",
    "pytest-asyncio==0.24.0",
    "pytest-cov==6.0.0",
    "pytest-mock==3.14.0",
    "httpx==0.28.1",
    
    # Code quality
    "ruff==0.8.14",
    "mypy==1.14.1",
    "black==24.12.0",
    "isort==5.13.2",
    
    # Documentation
    "mkdocs==1.6.1",
    "mkdocs-material==9.5.51",
    "mkdocstrings[python]==0.27.2",
]

[project.scripts]
chatter = "chatter.cli:app"

[project.urls]
Homepage = "https://github.com/lllucius/chatter"
Repository = "https://github.com/lllucius/chatter"
Documentation = "https://github.com/lllucius/chatter#readme"
"Bug Tracker" = "https://github.com/lllucius/chatter/issues"

[tool.hatch.version]
path = "chatter/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["chatter"]

[tool.ruff]
target-version = "py312"
line-length = 72

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.lint.per-file-ignores]
"chatter/schemas/__init__.py" = ["F405"]  # Allow star imports for convenience re-export module
"chatter/models/*.py" = ["F821"]  # Allow forward references in SQLAlchemy models

[tool.black]
target-version = ["py312"]
line-length = 72
skip-string-normalization = true

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 72
known_first_party = ["chatter"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true

[[tool.mypy.overrides]]
module = [
    "unstructured.*",
    "mcp.*",
    "google.generativeai.*",
    "cohere.*",
    "structlog.*",
]
ignore_missing_imports = true

[tool.pylint.MASTER]
load-plugins = "pylint_pydantic"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=chatter",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
asyncio_mode = "auto"
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
