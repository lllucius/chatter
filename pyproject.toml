[build-system]
requires = [
    "hatchling",
]
build-backend = "hatchling.build"

[project]
name = "chatter"
version = "0.1.0"
description = "Advanced AI Chatbot Backend API Platform"
readme = "README.md"
license = "MIT"
requires-python = ">=3.12,<4.0"
authors = [
    { name = "Chatter Team" },
]
keywords = [
    "ai",
    "chatbot",
    "api",
    "langchain",
    "langgraph",
    "fastapi",
    "postgres",
    "vector-store",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    # Core FastAPI ecosystem
    "fastapi>=0.116.1",
    "uvicorn[standard]>=0.35.0",
    "uvloop>=0.21.0",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "email-validator>=2.0.0",
    "python-dotenv>=1.1.1",
    
    # Database and persistence
    "sqlalchemy[asyncio]>=2.0.43",
    "asyncpg>=0.30.0",
    "aiosqlite>=0.20.0",  # Async SQLite driver for testing
    "alembic>=1.16.5",
    "pgvector>=0.2.5,<0.4",
    "redis>=6.4.0",
    
    # LangChain/AI ecosystem - using compatible versions
    "langchain>=0.3.27",
    "langchain-core>=0.3.75", 
    "langchain-community>=0.3.29",
    "langchain-openai>=0.3.32",
    "langchain-anthropic>=0.3.19",
    "langchain-google-genai>=2.1.10",
    "langchain-cohere>=0.4.5",
    "langchain-postgres>=0.0.15",
    "langchain-mcp-adapters>=0.1.9",
    "langgraph>=0.6.6",
    "langgraph-checkpoint-postgres>=2.0.23",
    
    # Document processing
    "unstructured[all-docs]>=0.18.14",
    "pypdf>=6.0.0",
    
    # Authentication
    "python-jose[cryptography]>=3.5.0",
    "passlib[bcrypt]>=1.7.4",
    
    # HTTP and async utilities
    "httpx>=0.28.1",
    "aiofiles>=24.1.0",
    "httpx-sse>=0.4.0,<0.5.0",  # Compatible with cohere requirements
    
    # CLI and utilities
    "typer>=0.17.3",
    "rich>=14.1.0",
    "structlog>=25.4.0",
    "apscheduler>=3.11.0",
    
    # AI/tool integration
    "mcp>=1.13.1",
    
    # Additional required utilities  
    "python-ulid>=3.1.0",
    "bcrypt>=4.0.0",
    "numpy>=1.26.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0", 
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "httpx>=0.28.1",  # For test client
    
    # Load testing
    "locust>=2.31.8",
    "psutil>=6.1.0",  # For performance monitoring
    
    # Code quality and formatting
    "ruff>=0.12.11",
    "mypy>=1.17.1",
    "black>=25.1.0",
    "isort>=6.0.1",
    
    # Documentation
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.18",
    "mkdocstrings[python]>=0.30.0",
]

[project.scripts]
chatter = "chatter.cli:app"

[project.urls]
Homepage = "https://github.com/lllucius/chatter"
Repository = "https://github.com/lllucius/chatter"
Documentation = "https://github.com/lllucius/chatter#readme"
"Bug Tracker" = "https://github.com/lllucius/chatter/issues"

[tool.hatch.version]
path = "chatter/__init__.py"

[tool.hatch.build.targets.wheel]
packages = [
    "chatter",
]

[tool.ruff]
target-version = "py312"
line-length = 72

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "I",
    "B",
    "C4",
    "UP",
]
ignore = [
    "E501",
    "B008",
    "C901",
]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.lint.per-file-ignores]
"chatter/schemas/__init__.py" = [
    "F405",
]
"chatter/models/*.py" = [
    "F821",
]

[tool.black]
target-version = [
    "py312",
]
line-length = 72
skip-string-normalization = true

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 72
known_first_party = [
    "chatter",
]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true

[[tool.mypy.overrides]]
module = [
    "unstructured.*",
    "mcp.*",
    "google.generativeai.*",
    "cohere.*",
    "structlog.*",
]
ignore_missing_imports = true

[tool.pylint.MASTER]
load-plugins = "pylint_pydantic"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=chatter",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
asyncio_mode = "auto"
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
    "performance: marks tests as performance tests",
    "load: marks tests as load tests",
]
