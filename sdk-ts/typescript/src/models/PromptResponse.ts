/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PromptType } from './PromptType';
import {
    PromptTypeFromJSON,
    PromptTypeFromJSONTyped,
    PromptTypeToJSON,
    PromptTypeToJSONTyped,
} from './PromptType';
import type { PromptCategory } from './PromptCategory';
import {
    PromptCategoryFromJSON,
    PromptCategoryFromJSONTyped,
    PromptCategoryToJSON,
    PromptCategoryToJSONTyped,
} from './PromptCategory';

/**
 * Schema for prompt response.
 * @export
 * @interface PromptResponse
 */
export interface PromptResponse {
    /**
     * Prompt ID
     * @type {string}
     * @memberof PromptResponse
     */
    id: string;
    /**
     * Owner user ID
     * @type {string}
     * @memberof PromptResponse
     */
    ownerId: string;
    /**
     * Prompt name
     * @type {string}
     * @memberof PromptResponse
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof PromptResponse
     */
    description?: string | null;
    /**
     * 
     * @type {PromptType}
     * @memberof PromptResponse
     */
    promptType: PromptType;
    /**
     * 
     * @type {PromptCategory}
     * @memberof PromptResponse
     */
    category: PromptCategory;
    /**
     * Prompt content/template
     * @type {string}
     * @memberof PromptResponse
     */
    content: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof PromptResponse
     */
    variables?: Array<string> | null;
    /**
     * Template format
     * @type {string}
     * @memberof PromptResponse
     */
    templateFormat: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof PromptResponse
     */
    inputSchema?: { [key: string]: any; } | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof PromptResponse
     */
    outputSchema?: { [key: string]: any; } | null;
    /**
     * 
     * @type {number}
     * @memberof PromptResponse
     */
    maxLength?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PromptResponse
     */
    minLength?: number | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof PromptResponse
     */
    requiredVariables?: Array<string> | null;
    /**
     * 
     * @type {Array<{ [key: string]: any; }>}
     * @memberof PromptResponse
     */
    examples?: Array<{ [key: string]: any; }> | null;
    /**
     * 
     * @type {Array<{ [key: string]: any; }>}
     * @memberof PromptResponse
     */
    testCases?: Array<{ [key: string]: any; }> | null;
    /**
     * 
     * @type {number}
     * @memberof PromptResponse
     */
    suggestedTemperature?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PromptResponse
     */
    suggestedMaxTokens?: number | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof PromptResponse
     */
    suggestedProviders?: Array<string> | null;
    /**
     * Whether this is a chain prompt
     * @type {boolean}
     * @memberof PromptResponse
     */
    isChain: boolean;
    /**
     * 
     * @type {Array<{ [key: string]: any; }>}
     * @memberof PromptResponse
     */
    chainSteps?: Array<{ [key: string]: any; }> | null;
    /**
     * 
     * @type {string}
     * @memberof PromptResponse
     */
    parentPromptId?: string | null;
    /**
     * Prompt version
     * @type {number}
     * @memberof PromptResponse
     */
    version: number;
    /**
     * Whether this is the latest version
     * @type {boolean}
     * @memberof PromptResponse
     */
    isLatest: boolean;
    /**
     * 
     * @type {string}
     * @memberof PromptResponse
     */
    changelog?: string | null;
    /**
     * Whether prompt is public
     * @type {boolean}
     * @memberof PromptResponse
     */
    isPublic: boolean;
    /**
     * 
     * @type {number}
     * @memberof PromptResponse
     */
    rating?: number | null;
    /**
     * Number of ratings
     * @type {number}
     * @memberof PromptResponse
     */
    ratingCount: number;
    /**
     * Usage count
     * @type {number}
     * @memberof PromptResponse
     */
    usageCount: number;
    /**
     * 
     * @type {number}
     * @memberof PromptResponse
     */
    successRate?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PromptResponse
     */
    avgResponseTimeMs?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof PromptResponse
     */
    lastUsedAt?: Date | null;
    /**
     * Total tokens used
     * @type {number}
     * @memberof PromptResponse
     */
    totalTokensUsed: number;
    /**
     * Total cost
     * @type {number}
     * @memberof PromptResponse
     */
    totalCost: number;
    /**
     * 
     * @type {number}
     * @memberof PromptResponse
     */
    avgTokensPerUse?: number | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof PromptResponse
     */
    tags?: Array<string> | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof PromptResponse
     */
    extraMetadata?: { [key: string]: any; } | null;
    /**
     * Content hash
     * @type {string}
     * @memberof PromptResponse
     */
    contentHash: string;
    /**
     * 
     * @type {number}
     * @memberof PromptResponse
     */
    estimatedTokens?: number | null;
    /**
     * 
     * @type {string}
     * @memberof PromptResponse
     */
    language?: string | null;
    /**
     * Creation timestamp
     * @type {Date}
     * @memberof PromptResponse
     */
    createdAt: Date;
    /**
     * Last update timestamp
     * @type {Date}
     * @memberof PromptResponse
     */
    updatedAt: Date;
}



/**
 * Check if a given object implements the PromptResponse interface.
 */
export function instanceOfPromptResponse(value: object): value is PromptResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('ownerId' in value) || value['ownerId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('promptType' in value) || value['promptType'] === undefined) return false;
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('templateFormat' in value) || value['templateFormat'] === undefined) return false;
    if (!('isChain' in value) || value['isChain'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('isLatest' in value) || value['isLatest'] === undefined) return false;
    if (!('isPublic' in value) || value['isPublic'] === undefined) return false;
    if (!('ratingCount' in value) || value['ratingCount'] === undefined) return false;
    if (!('usageCount' in value) || value['usageCount'] === undefined) return false;
    if (!('totalTokensUsed' in value) || value['totalTokensUsed'] === undefined) return false;
    if (!('totalCost' in value) || value['totalCost'] === undefined) return false;
    if (!('contentHash' in value) || value['contentHash'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function PromptResponseFromJSON(json: any): PromptResponse {
    return PromptResponseFromJSONTyped(json, false);
}

export function PromptResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PromptResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'ownerId': json['owner_id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'promptType': PromptTypeFromJSON(json['prompt_type']),
        'category': PromptCategoryFromJSON(json['category']),
        'content': json['content'],
        'variables': json['variables'] == null ? undefined : json['variables'],
        'templateFormat': json['template_format'],
        'inputSchema': json['input_schema'] == null ? undefined : json['input_schema'],
        'outputSchema': json['output_schema'] == null ? undefined : json['output_schema'],
        'maxLength': json['max_length'] == null ? undefined : json['max_length'],
        'minLength': json['min_length'] == null ? undefined : json['min_length'],
        'requiredVariables': json['required_variables'] == null ? undefined : json['required_variables'],
        'examples': json['examples'] == null ? undefined : json['examples'],
        'testCases': json['test_cases'] == null ? undefined : json['test_cases'],
        'suggestedTemperature': json['suggested_temperature'] == null ? undefined : json['suggested_temperature'],
        'suggestedMaxTokens': json['suggested_max_tokens'] == null ? undefined : json['suggested_max_tokens'],
        'suggestedProviders': json['suggested_providers'] == null ? undefined : json['suggested_providers'],
        'isChain': json['is_chain'],
        'chainSteps': json['chain_steps'] == null ? undefined : json['chain_steps'],
        'parentPromptId': json['parent_prompt_id'] == null ? undefined : json['parent_prompt_id'],
        'version': json['version'],
        'isLatest': json['is_latest'],
        'changelog': json['changelog'] == null ? undefined : json['changelog'],
        'isPublic': json['is_public'],
        'rating': json['rating'] == null ? undefined : json['rating'],
        'ratingCount': json['rating_count'],
        'usageCount': json['usage_count'],
        'successRate': json['success_rate'] == null ? undefined : json['success_rate'],
        'avgResponseTimeMs': json['avg_response_time_ms'] == null ? undefined : json['avg_response_time_ms'],
        'lastUsedAt': json['last_used_at'] == null ? undefined : (new Date(json['last_used_at'])),
        'totalTokensUsed': json['total_tokens_used'],
        'totalCost': json['total_cost'],
        'avgTokensPerUse': json['avg_tokens_per_use'] == null ? undefined : json['avg_tokens_per_use'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'extraMetadata': json['extra_metadata'] == null ? undefined : json['extra_metadata'],
        'contentHash': json['content_hash'],
        'estimatedTokens': json['estimated_tokens'] == null ? undefined : json['estimated_tokens'],
        'language': json['language'] == null ? undefined : json['language'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function PromptResponseToJSON(json: any): PromptResponse {
    return PromptResponseToJSONTyped(json, false);
}

export function PromptResponseToJSONTyped(value?: PromptResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'owner_id': value['ownerId'],
        'name': value['name'],
        'description': value['description'],
        'prompt_type': PromptTypeToJSON(value['promptType']),
        'category': PromptCategoryToJSON(value['category']),
        'content': value['content'],
        'variables': value['variables'],
        'template_format': value['templateFormat'],
        'input_schema': value['inputSchema'],
        'output_schema': value['outputSchema'],
        'max_length': value['maxLength'],
        'min_length': value['minLength'],
        'required_variables': value['requiredVariables'],
        'examples': value['examples'],
        'test_cases': value['testCases'],
        'suggested_temperature': value['suggestedTemperature'],
        'suggested_max_tokens': value['suggestedMaxTokens'],
        'suggested_providers': value['suggestedProviders'],
        'is_chain': value['isChain'],
        'chain_steps': value['chainSteps'],
        'parent_prompt_id': value['parentPromptId'],
        'version': value['version'],
        'is_latest': value['isLatest'],
        'changelog': value['changelog'],
        'is_public': value['isPublic'],
        'rating': value['rating'],
        'rating_count': value['ratingCount'],
        'usage_count': value['usageCount'],
        'success_rate': value['successRate'],
        'avg_response_time_ms': value['avgResponseTimeMs'],
        'last_used_at': value['lastUsedAt'] === null ? null : ((value['lastUsedAt'] as any)?.toISOString()),
        'total_tokens_used': value['totalTokensUsed'],
        'total_cost': value['totalCost'],
        'avg_tokens_per_use': value['avgTokensPerUse'],
        'tags': value['tags'],
        'extra_metadata': value['extraMetadata'],
        'content_hash': value['contentHash'],
        'estimated_tokens': value['estimatedTokens'],
        'language': value['language'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}

