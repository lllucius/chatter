/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ToolAccessLevel } from './ToolAccessLevel';
import {
    ToolAccessLevelFromJSON,
    ToolAccessLevelFromJSONTyped,
    ToolAccessLevelToJSON,
    ToolAccessLevelToJSONTyped,
} from './ToolAccessLevel';

/**
 * Schema for updating tool permissions.
 * @export
 * @interface ToolPermissionUpdate
 */
export interface ToolPermissionUpdate {
    /**
     * 
     * @type {ToolAccessLevel}
     * @memberof ToolPermissionUpdate
     */
    accessLevel?: ToolAccessLevel | null;
    /**
     * 
     * @type {number}
     * @memberof ToolPermissionUpdate
     */
    rateLimitPerHour?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ToolPermissionUpdate
     */
    rateLimitPerDay?: number | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof ToolPermissionUpdate
     */
    allowedHours?: Array<number> | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof ToolPermissionUpdate
     */
    allowedDays?: Array<number> | null;
    /**
     * 
     * @type {Date}
     * @memberof ToolPermissionUpdate
     */
    expiresAt?: Date | null;
}



/**
 * Check if a given object implements the ToolPermissionUpdate interface.
 */
export function instanceOfToolPermissionUpdate(value: object): value is ToolPermissionUpdate {
    return true;
}

export function ToolPermissionUpdateFromJSON(json: any): ToolPermissionUpdate {
    return ToolPermissionUpdateFromJSONTyped(json, false);
}

export function ToolPermissionUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolPermissionUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'accessLevel': json['access_level'] == null ? undefined : ToolAccessLevelFromJSON(json['access_level']),
        'rateLimitPerHour': json['rate_limit_per_hour'] == null ? undefined : json['rate_limit_per_hour'],
        'rateLimitPerDay': json['rate_limit_per_day'] == null ? undefined : json['rate_limit_per_day'],
        'allowedHours': json['allowed_hours'] == null ? undefined : json['allowed_hours'],
        'allowedDays': json['allowed_days'] == null ? undefined : json['allowed_days'],
        'expiresAt': json['expires_at'] == null ? undefined : (new Date(json['expires_at'])),
    };
}

export function ToolPermissionUpdateToJSON(json: any): ToolPermissionUpdate {
    return ToolPermissionUpdateToJSONTyped(json, false);
}

export function ToolPermissionUpdateToJSONTyped(value?: ToolPermissionUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'access_level': ToolAccessLevelToJSON(value['accessLevel']),
        'rate_limit_per_hour': value['rateLimitPerHour'],
        'rate_limit_per_day': value['rateLimitPerDay'],
        'allowed_hours': value['allowedHours'],
        'allowed_days': value['allowedDays'],
        'expires_at': value['expiresAt'] === null ? null : ((value['expiresAt'] as any)?.toISOString()),
    };
}

