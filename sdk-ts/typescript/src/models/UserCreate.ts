/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for user creation (alias for UserRegistration).
 * @export
 * @interface UserCreate
 */
export interface UserCreate {
    /**
     * User email address
     * @type {string}
     * @memberof UserCreate
     */
    email: string;
    /**
     * Username
     * @type {string}
     * @memberof UserCreate
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof UserCreate
     */
    fullName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserCreate
     */
    bio?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserCreate
     */
    avatarUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserCreate
     */
    phoneNumber?: string | null;
    /**
     * Password
     * @type {string}
     * @memberof UserCreate
     */
    password: string;
}

/**
 * Check if a given object implements the UserCreate interface.
 */
export function instanceOfUserCreate(value: object): value is UserCreate {
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    return true;
}

export function UserCreateFromJSON(json: any): UserCreate {
    return UserCreateFromJSONTyped(json, false);
}

export function UserCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'],
        'username': json['username'],
        'fullName': json['full_name'] == null ? undefined : json['full_name'],
        'bio': json['bio'] == null ? undefined : json['bio'],
        'avatarUrl': json['avatar_url'] == null ? undefined : json['avatar_url'],
        'phoneNumber': json['phone_number'] == null ? undefined : json['phone_number'],
        'password': json['password'],
    };
}

export function UserCreateToJSON(json: any): UserCreate {
    return UserCreateToJSONTyped(json, false);
}

export function UserCreateToJSONTyped(value?: UserCreate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'username': value['username'],
        'full_name': value['fullName'],
        'bio': value['bio'],
        'avatar_url': value['avatarUrl'],
        'phone_number': value['phoneNumber'],
        'password': value['password'],
    };
}

