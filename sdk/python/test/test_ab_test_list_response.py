# coding: utf-8

"""
    Chatter API

    Advanced AI Chatbot Backend API Platform

    The version of the OpenAPI document: 0.1.0
    Contact: support@chatter.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from chatter_sdk.models.ab_test_list_response import ABTestListResponse

class TestABTestListResponse(unittest.TestCase):
    """ABTestListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ABTestListResponse:
        """Test ABTestListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ABTestListResponse`
        """
        model = ABTestListResponse()
        if include_optional:
            return ABTestListResponse(
                tests = [
                    chatter_sdk.models.ab_test_response.ABTestResponse(
                        id = '', 
                        name = '', 
                        description = '', 
                        test_type = 'prompt', 
                        status = 'draft', 
                        allocation_strategy = 'equal', 
                        variants = [
                            chatter_sdk.models.test_variant.TestVariant(
                                name = '', 
                                description = '', 
                                configuration = { }, 
                                weight = 0.0, )
                            ], 
                        metrics = [
                            'response_time'
                            ], 
                        duration_days = 56, 
                        min_sample_size = 56, 
                        confidence_level = 1.337, 
                        target_audience = { }, 
                        traffic_percentage = 1.337, 
                        start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        participant_count = 56, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by = '', 
                        tags = [
                            ''
                            ], 
                        metadata = { }, )
                    ],
                total = 56
            )
        else:
            return ABTestListResponse(
                tests = [
                    chatter_sdk.models.ab_test_response.ABTestResponse(
                        id = '', 
                        name = '', 
                        description = '', 
                        test_type = 'prompt', 
                        status = 'draft', 
                        allocation_strategy = 'equal', 
                        variants = [
                            chatter_sdk.models.test_variant.TestVariant(
                                name = '', 
                                description = '', 
                                configuration = { }, 
                                weight = 0.0, )
                            ], 
                        metrics = [
                            'response_time'
                            ], 
                        duration_days = 56, 
                        min_sample_size = 56, 
                        confidence_level = 1.337, 
                        target_audience = { }, 
                        traffic_percentage = 1.337, 
                        start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        participant_count = 56, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by = '', 
                        tags = [
                            ''
                            ], 
                        metadata = { }, )
                    ],
                total = 56,
        )
        """

    def testABTestListResponse(self):
        """Test ABTestListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
