# coding: utf-8

"""
    Chatter API

    Advanced AI Chatbot Backend API Platform

    The version of the OpenAPI document: 0.1.0
    Contact: support@chatter.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from chatter_sdk.models.ab_test_results_response import ABTestResultsResponse

class TestABTestResultsResponse(unittest.TestCase):
    """ABTestResultsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ABTestResultsResponse:
        """Test ABTestResultsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ABTestResultsResponse`
        """
        model = ABTestResultsResponse()
        if include_optional:
            return ABTestResultsResponse(
                test_id = '',
                test_name = '',
                status = 'draft',
                metrics = [
                    chatter_sdk.models.test_metric.TestMetric(
                        metric_type = 'response_time', 
                        variant_name = '', 
                        value = 1.337, 
                        sample_size = 56, 
                        confidence_interval = [
                            1.337
                            ], )
                    ],
                statistical_significance = {
                    'key' : True
                    },
                confidence_intervals = {
                    'key' : {
                        'key' : [
                            1.337
                            ]
                        }
                    },
                winning_variant = '',
                recommendation = '',
                generated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                sample_size = 56,
                duration_days = 56
            )
        else:
            return ABTestResultsResponse(
                test_id = '',
                test_name = '',
                status = 'draft',
                metrics = [
                    chatter_sdk.models.test_metric.TestMetric(
                        metric_type = 'response_time', 
                        variant_name = '', 
                        value = 1.337, 
                        sample_size = 56, 
                        confidence_interval = [
                            1.337
                            ], )
                    ],
                statistical_significance = {
                    'key' : True
                    },
                confidence_intervals = {
                    'key' : {
                        'key' : [
                            1.337
                            ]
                        }
                    },
                recommendation = '',
                generated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                sample_size = 56,
                duration_days = 56,
        )
        """

    def testABTestResultsResponse(self):
        """Test ABTestResultsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
