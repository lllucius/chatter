# coding: utf-8

"""
    Chatter API

    Advanced AI Chatbot Backend API Platform

    The version of the OpenAPI document: 0.1.0
    Contact: support@chatter.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from chatter_sdk.models.backup_response import BackupResponse

class TestBackupResponse(unittest.TestCase):
    """BackupResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BackupResponse:
        """Test BackupResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BackupResponse`
        """
        model = BackupResponse()
        if include_optional:
            return BackupResponse(
                id = '',
                name = '',
                description = '',
                backup_type = 'full',
                status = '',
                file_size = 56,
                compressed_size = 56,
                record_count = 56,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                completed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                encrypted = True,
                compressed = True,
                metadata = { }
            )
        else:
            return BackupResponse(
                id = '',
                name = '',
                backup_type = 'full',
                status = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                encrypted = True,
                compressed = True,
                metadata = { },
        )
        """

    def testBackupResponse(self):
        """Test BackupResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
