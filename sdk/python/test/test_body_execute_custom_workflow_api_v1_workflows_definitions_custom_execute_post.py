# coding: utf-8

"""
    Chatter API

    Advanced AI Chatbot Backend API Platform

    The version of the OpenAPI document: 0.1.0
    Contact: support@chatter.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from chatter_sdk.models.body_execute_custom_workflow_api_v1_workflows_definitions_custom_execute_post import BodyExecuteCustomWorkflowApiV1WorkflowsDefinitionsCustomExecutePost

class TestBodyExecuteCustomWorkflowApiV1WorkflowsDefinitionsCustomExecutePost(unittest.TestCase):
    """BodyExecuteCustomWorkflowApiV1WorkflowsDefinitionsCustomExecutePost unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BodyExecuteCustomWorkflowApiV1WorkflowsDefinitionsCustomExecutePost:
        """Test BodyExecuteCustomWorkflowApiV1WorkflowsDefinitionsCustomExecutePost
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BodyExecuteCustomWorkflowApiV1WorkflowsDefinitionsCustomExecutePost`
        """
        model = BodyExecuteCustomWorkflowApiV1WorkflowsDefinitionsCustomExecutePost()
        if include_optional:
            return BodyExecuteCustomWorkflowApiV1WorkflowsDefinitionsCustomExecutePost(
                nodes = [
                    { }
                    ],
                edges = [
                    { }
                    ]
            )
        else:
            return BodyExecuteCustomWorkflowApiV1WorkflowsDefinitionsCustomExecutePost(
                nodes = [
                    { }
                    ],
                edges = [
                    { }
                    ],
        )
        """

    def testBodyExecuteCustomWorkflowApiV1WorkflowsDefinitionsCustomExecutePost(self):
        """Test BodyExecuteCustomWorkflowApiV1WorkflowsDefinitionsCustomExecutePost"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
