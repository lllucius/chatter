# coding: utf-8

"""
    Chatter API

    Advanced AI Chatbot Backend API Platform

    The version of the OpenAPI document: 0.1.0
    Contact: support@chatter.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from chatter_sdk.models.embedding_space_create import EmbeddingSpaceCreate

class TestEmbeddingSpaceCreate(unittest.TestCase):
    """EmbeddingSpaceCreate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EmbeddingSpaceCreate:
        """Test EmbeddingSpaceCreate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EmbeddingSpaceCreate`
        """
        model = EmbeddingSpaceCreate()
        if include_optional:
            return EmbeddingSpaceCreate(
                name = 'z0',
                display_name = '0',
                description = '',
                base_dimensions = 56,
                effective_dimensions = 56,
                reduction_strategy = 'none',
                reducer_path = '',
                reducer_version = '',
                normalize_vectors = True,
                distance_metric = 'cosine',
                table_name = 'H0',
                index_type = 'hnsw',
                index_config = { },
                is_active = True,
                is_default = True,
                model_id = ''
            )
        else:
            return EmbeddingSpaceCreate(
                name = 'z0',
                display_name = '0',
                base_dimensions = 56,
                effective_dimensions = 56,
                table_name = 'H0',
                model_id = '',
        )
        """

    def testEmbeddingSpaceCreate(self):
        """Test EmbeddingSpaceCreate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
