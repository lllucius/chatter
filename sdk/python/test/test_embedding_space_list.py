
"""
    Chatter API

    Advanced AI Chatbot Backend API Platform

    The version of the OpenAPI document: 0.1.0
    Contact: support@chatter.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from chatter_sdk.models.embedding_space_list import EmbeddingSpaceList


class TestEmbeddingSpaceList(unittest.TestCase):
    """EmbeddingSpaceList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EmbeddingSpaceList:
        """Test EmbeddingSpaceList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EmbeddingSpaceList`
        """
        model = EmbeddingSpaceList()
        if include_optional:
            return EmbeddingSpaceList(
                spaces = [
                    chatter_sdk.models.embedding_space_with_model.EmbeddingSpaceWithModel(
                        name = 'z0', 
                        display_name = '0', 
                        description = '', 
                        base_dimensions = 56, 
                        effective_dimensions = 56, 
                        reduction_strategy = 'none', 
                        reducer_path = '', 
                        reducer_version = '', 
                        normalize_vectors = True, 
                        distance_metric = 'cosine', 
                        table_name = 'H0', 
                        index_type = 'hnsw', 
                        index_config = { }, 
                        is_active = True, 
                        is_default = True, 
                        id = '', 
                        model_id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        model = chatter_sdk.models.model_def_with_provider.ModelDefWithProvider(
                            name = 'z0', 
                            model_type = 'llm', 
                            display_name = '0', 
                            description = '', 
                            model_name = '0', 
                            max_tokens = 56, 
                            context_length = 56, 
                            dimensions = 56, 
                            chunk_size = 56, 
                            supports_batch = True, 
                            max_batch_size = 56, 
                            default_config = { }, 
                            is_active = True, 
                            is_default = True, 
                            id = '', 
                            provider_id = '', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            provider = chatter_sdk.models.provider.Provider(
                                name = 'z0', 
                                provider_type = 'openai', 
                                display_name = '0', 
                                description = '', 
                                api_key_required = True, 
                                base_url = '', 
                                default_config = { }, 
                                is_active = True, 
                                is_default = True, 
                                id = '', 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), ), )
                    ],
                total = 56,
                page = 56,
                per_page = 56
            )
        else:
            return EmbeddingSpaceList(
                spaces = [
                    chatter_sdk.models.embedding_space_with_model.EmbeddingSpaceWithModel(
                        name = 'z0', 
                        display_name = '0', 
                        description = '', 
                        base_dimensions = 56, 
                        effective_dimensions = 56, 
                        reduction_strategy = 'none', 
                        reducer_path = '', 
                        reducer_version = '', 
                        normalize_vectors = True, 
                        distance_metric = 'cosine', 
                        table_name = 'H0', 
                        index_type = 'hnsw', 
                        index_config = { }, 
                        is_active = True, 
                        is_default = True, 
                        id = '', 
                        model_id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        model = chatter_sdk.models.model_def_with_provider.ModelDefWithProvider(
                            name = 'z0', 
                            model_type = 'llm', 
                            display_name = '0', 
                            description = '', 
                            model_name = '0', 
                            max_tokens = 56, 
                            context_length = 56, 
                            dimensions = 56, 
                            chunk_size = 56, 
                            supports_batch = True, 
                            max_batch_size = 56, 
                            default_config = { }, 
                            is_active = True, 
                            is_default = True, 
                            id = '', 
                            provider_id = '', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            provider = chatter_sdk.models.provider.Provider(
                                name = 'z0', 
                                provider_type = 'openai', 
                                display_name = '0', 
                                description = '', 
                                api_key_required = True, 
                                base_url = '', 
                                default_config = { }, 
                                is_active = True, 
                                is_default = True, 
                                id = '', 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), ), )
                    ],
                total = 56,
                page = 56,
                per_page = 56,
        )
        """

    def testEmbeddingSpaceList(self):
        """Test EmbeddingSpaceList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == "__main__":
    unittest.main()
