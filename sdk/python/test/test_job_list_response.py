
"""
    Chatter API

    Advanced AI Chatbot Backend API Platform

    The version of the OpenAPI document: 0.1.0
    Contact: support@chatter.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from chatter_sdk.models.job_list_response import JobListResponse

class TestJobListResponse(unittest.TestCase):
    """JobListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobListResponse:
        """Test JobListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobListResponse`
        """
        model = JobListResponse()
        if include_optional:
            return JobListResponse(
                jobs = [
                    chatter_sdk.models.job_response.JobResponse(
                        id = '',
                        name = '',
                        function_name = '',
                        priority = 'low',
                        status = 'pending',
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        completed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        scheduled_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        retry_count = 56,
                        max_retries = 56,
                        error_message = '',
                        result = null,
                        progress = 0.0,
                        progress_message = '', )
                    ],
                total = 56,
                limit = 56,
                offset = 56,
                has_more = True
            )
        else:
            return JobListResponse(
                jobs = [
                    chatter_sdk.models.job_response.JobResponse(
                        id = '',
                        name = '',
                        function_name = '',
                        priority = 'low',
                        status = 'pending',
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        completed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        scheduled_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        retry_count = 56,
                        max_retries = 56,
                        error_message = '',
                        result = null,
                        progress = 0.0,
                        progress_message = '', )
                    ],
                total = 56,
                limit = 56,
                offset = 56,
                has_more = True,
        )
        """

    def testJobListResponse(self):
        """Test JobListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
