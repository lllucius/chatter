# coding: utf-8

"""
    Chatter API

    Advanced AI Chatbot Backend API Platform

    The version of the OpenAPI document: 0.1.0
    Contact: support@chatter.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from chatter_sdk.models.performance_metrics_response import PerformanceMetricsResponse

class TestPerformanceMetricsResponse(unittest.TestCase):
    """PerformanceMetricsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PerformanceMetricsResponse:
        """Test PerformanceMetricsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PerformanceMetricsResponse`
        """
        model = PerformanceMetricsResponse()
        if include_optional:
            return PerformanceMetricsResponse(
                avg_response_time_ms = 1.337,
                median_response_time_ms = 1.337,
                p95_response_time_ms = 1.337,
                p99_response_time_ms = 1.337,
                requests_per_minute = 1.337,
                tokens_per_minute = 1.337,
                total_errors = 56,
                error_rate = 1.337,
                errors_by_type = {
                    'key' : 56
                    },
                performance_by_model = {
                    'key' : {
                        'key' : 1.337
                        }
                    },
                performance_by_provider = {
                    'key' : {
                        'key' : 1.337
                        }
                    },
                database_response_time_ms = 1.337,
                vector_search_time_ms = 1.337,
                embedding_generation_time_ms = 1.337
            )
        else:
            return PerformanceMetricsResponse(
                avg_response_time_ms = 1.337,
                median_response_time_ms = 1.337,
                p95_response_time_ms = 1.337,
                p99_response_time_ms = 1.337,
                requests_per_minute = 1.337,
                tokens_per_minute = 1.337,
                total_errors = 56,
                error_rate = 1.337,
                errors_by_type = {
                    'key' : 56
                    },
                performance_by_model = {
                    'key' : {
                        'key' : 1.337
                        }
                    },
                performance_by_provider = {
                    'key' : {
                        'key' : 1.337
                        }
                    },
                database_response_time_ms = 1.337,
                vector_search_time_ms = 1.337,
                embedding_generation_time_ms = 1.337,
        )
        """

    def testPerformanceMetricsResponse(self):
        """Test PerformanceMetricsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
