"""
Chatter API

Advanced AI Chatbot Backend API Platform

The version of the OpenAPI document: 0.1.0
Contact: support@chatter.ai
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from chatter_sdk.models.profile_stats_response import (
    ProfileStatsResponse,
)


class TestProfileStatsResponse(unittest.TestCase):
    """ProfileStatsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProfileStatsResponse:
        """Test ProfileStatsResponse
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ProfileStatsResponse`
        """
        model = ProfileStatsResponse()
        if include_optional:
            return ProfileStatsResponse(
                total_profiles = 56,
                profiles_by_type = {
                    'key' : 56
                    },
                profiles_by_provider = {
                    'key' : 56
                    },
                most_used_profiles = [
                    chatter_sdk.models.profile_response.ProfileResponse(
                        name = '0',
                        description = '',
                        profile_type = 'conversational',
                        llm_provider = '0',
                        llm_model = '0',
                        temperature = 0.0,
                        top_p = 0.0,
                        top_k = 1.0,
                        max_tokens = 1.0,
                        presence_penalty = -2.0,
                        frequency_penalty = -2.0,
                        context_window = 1.0,
                        system_prompt = '',
                        memory_enabled = True,
                        memory_strategy = '',
                        enable_retrieval = True,
                        retrieval_limit = 1.0,
                        retrieval_score_threshold = 0.0,
                        enable_tools = True,
                        available_tools = [
                            ''
                            ],
                        tool_choice = '',
                        content_filter_enabled = True,
                        safety_level = '',
                        response_format = '',
                        stream_response = True,
                        seed = 0.0,
                        stop_sequences = [
                            ''
                            ],
                        logit_bias = {
                            'key' : 1.337
                            },
                        embedding_provider = '',
                        embedding_model = '',
                        is_public = True,
                        tags = [
                            ''
                            ],
                        extra_metadata = { },
                        id = '',
                        owner_id = '',
                        usage_count = 56,
                        total_tokens_used = 56,
                        total_cost = 1.337,
                        last_used_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                recent_profiles = [
                    chatter_sdk.models.profile_response.ProfileResponse(
                        name = '0',
                        description = '',
                        profile_type = 'conversational',
                        llm_provider = '0',
                        llm_model = '0',
                        temperature = 0.0,
                        top_p = 0.0,
                        top_k = 1.0,
                        max_tokens = 1.0,
                        presence_penalty = -2.0,
                        frequency_penalty = -2.0,
                        context_window = 1.0,
                        system_prompt = '',
                        memory_enabled = True,
                        memory_strategy = '',
                        enable_retrieval = True,
                        retrieval_limit = 1.0,
                        retrieval_score_threshold = 0.0,
                        enable_tools = True,
                        available_tools = [
                            ''
                            ],
                        tool_choice = '',
                        content_filter_enabled = True,
                        safety_level = '',
                        response_format = '',
                        stream_response = True,
                        seed = 0.0,
                        stop_sequences = [
                            ''
                            ],
                        logit_bias = {
                            'key' : 1.337
                            },
                        embedding_provider = '',
                        embedding_model = '',
                        is_public = True,
                        tags = [
                            ''
                            ],
                        extra_metadata = { },
                        id = '',
                        owner_id = '',
                        usage_count = 56,
                        total_tokens_used = 56,
                        total_cost = 1.337,
                        last_used_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                usage_stats = { }
            )
        else:
            return ProfileStatsResponse(
                total_profiles = 56,
                profiles_by_type = {
                    'key' : 56
                    },
                profiles_by_provider = {
                    'key' : 56
                    },
                most_used_profiles = [
                    chatter_sdk.models.profile_response.ProfileResponse(
                        name = '0',
                        description = '',
                        profile_type = 'conversational',
                        llm_provider = '0',
                        llm_model = '0',
                        temperature = 0.0,
                        top_p = 0.0,
                        top_k = 1.0,
                        max_tokens = 1.0,
                        presence_penalty = -2.0,
                        frequency_penalty = -2.0,
                        context_window = 1.0,
                        system_prompt = '',
                        memory_enabled = True,
                        memory_strategy = '',
                        enable_retrieval = True,
                        retrieval_limit = 1.0,
                        retrieval_score_threshold = 0.0,
                        enable_tools = True,
                        available_tools = [
                            ''
                            ],
                        tool_choice = '',
                        content_filter_enabled = True,
                        safety_level = '',
                        response_format = '',
                        stream_response = True,
                        seed = 0.0,
                        stop_sequences = [
                            ''
                            ],
                        logit_bias = {
                            'key' : 1.337
                            },
                        embedding_provider = '',
                        embedding_model = '',
                        is_public = True,
                        tags = [
                            ''
                            ],
                        extra_metadata = { },
                        id = '',
                        owner_id = '',
                        usage_count = 56,
                        total_tokens_used = 56,
                        total_cost = 1.337,
                        last_used_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                recent_profiles = [
                    chatter_sdk.models.profile_response.ProfileResponse(
                        name = '0',
                        description = '',
                        profile_type = 'conversational',
                        llm_provider = '0',
                        llm_model = '0',
                        temperature = 0.0,
                        top_p = 0.0,
                        top_k = 1.0,
                        max_tokens = 1.0,
                        presence_penalty = -2.0,
                        frequency_penalty = -2.0,
                        context_window = 1.0,
                        system_prompt = '',
                        memory_enabled = True,
                        memory_strategy = '',
                        enable_retrieval = True,
                        retrieval_limit = 1.0,
                        retrieval_score_threshold = 0.0,
                        enable_tools = True,
                        available_tools = [
                            ''
                            ],
                        tool_choice = '',
                        content_filter_enabled = True,
                        safety_level = '',
                        response_format = '',
                        stream_response = True,
                        seed = 0.0,
                        stop_sequences = [
                            ''
                            ],
                        logit_bias = {
                            'key' : 1.337
                            },
                        embedding_provider = '',
                        embedding_model = '',
                        is_public = True,
                        tags = [
                            ''
                            ],
                        extra_metadata = { },
                        id = '',
                        owner_id = '',
                        usage_count = 56,
                        total_tokens_used = 56,
                        total_cost = 1.337,
                        last_used_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                usage_stats = { },
        )
        """

    def testProfileStatsResponse(self):
        """Test ProfileStatsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
