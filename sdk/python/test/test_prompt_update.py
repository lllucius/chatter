
"""
    Chatter API

    Advanced AI Chatbot Backend API Platform

    The version of the OpenAPI document: 0.1.0
    Contact: support@chatter.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from chatter_sdk.models.prompt_update import PromptUpdate

class TestPromptUpdate(unittest.TestCase):
    """PromptUpdate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PromptUpdate:
        """Test PromptUpdate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PromptUpdate`
        """
        model = PromptUpdate()
        if include_optional:
            return PromptUpdate(
                name = '0',
                description = '',
                prompt_type = 'system',
                category = 'general',
                content = '0',
                variables = [
                    ''
                    ],
                template_format = '',
                input_schema = { },
                output_schema = { },
                max_length = 1.0,
                min_length = 1.0,
                required_variables = [
                    ''
                    ],
                examples = [
                    { }
                    ],
                test_cases = [
                    { }
                    ],
                suggested_temperature = 0.0,
                suggested_max_tokens = 1.0,
                suggested_providers = [
                    ''
                    ],
                is_chain = True,
                chain_steps = [
                    { }
                    ],
                parent_prompt_id = '',
                is_public = True,
                tags = [
                    ''
                    ],
                extra_metadata = { }
            )
        else:
            return PromptUpdate(
        )
        """

    def testPromptUpdate(self):
        """Test PromptUpdate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
