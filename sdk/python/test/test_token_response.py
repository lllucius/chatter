
"""
    Chatter API

    Advanced AI Chatbot Backend API Platform

    The version of the OpenAPI document: 0.1.0
    Contact: support@chatter.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from chatter_sdk.models.token_response import TokenResponse

class TestTokenResponse(unittest.TestCase):
    """TokenResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TokenResponse:
        """Test TokenResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TokenResponse`
        """
        model = TokenResponse()
        if include_optional:
            return TokenResponse(
                access_token = '',
                refresh_token = '',
                token_type = 'bearer',
                expires_in = 56,
                user = chatter_sdk.models.user_response.UserResponse(
                    email = '',
                    username = '012',
                    full_name = '',
                    bio = '',
                    avatar_url = '',
                    phone_number = '',
                    id = '',
                    is_active = True,
                    is_verified = True,
                    is_superuser = True,
                    default_llm_provider = '',
                    default_profile_id = '',
                    daily_message_limit = 56,
                    monthly_message_limit = 56,
                    max_file_size_mb = 56,
                    api_key_name = '',
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                    last_login_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
            )
        else:
            return TokenResponse(
                access_token = '',
                refresh_token = '',
                expires_in = 56,
                user = chatter_sdk.models.user_response.UserResponse(
                    email = '',
                    username = '012',
                    full_name = '',
                    bio = '',
                    avatar_url = '',
                    phone_number = '',
                    id = '',
                    is_active = True,
                    is_verified = True,
                    is_superuser = True,
                    default_llm_provider = '',
                    default_profile_id = '',
                    daily_message_limit = 56,
                    monthly_message_limit = 56,
                    max_file_size_mb = 56,
                    api_key_name = '',
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                    last_login_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
        )
        """

    def testTokenResponse(self):
        """Test TokenResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
