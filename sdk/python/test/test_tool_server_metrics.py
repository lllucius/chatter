
"""
    Chatter API

    Advanced AI Chatbot Backend API Platform

    The version of the OpenAPI document: 0.1.0
    Contact: support@chatter.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from chatter_sdk.models.tool_server_metrics import ToolServerMetrics


class TestToolServerMetrics(unittest.TestCase):
    """ToolServerMetrics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ToolServerMetrics:
        """Test ToolServerMetrics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ToolServerMetrics`
        """
        model = ToolServerMetrics()
        if include_optional:
            return ToolServerMetrics(
                server_id = '',
                server_name = '',
                status = 'enabled',
                total_tools = 56,
                enabled_tools = 56,
                total_calls = 56,
                total_errors = 56,
                success_rate = 0.0,
                avg_response_time_ms = 1.337,
                last_activity = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                uptime_percentage = 0.0
            )
        else:
            return ToolServerMetrics(
                server_id = '',
                server_name = '',
                status = 'enabled',
                total_tools = 56,
                enabled_tools = 56,
                total_calls = 56,
                total_errors = 56,
                success_rate = 0.0,
        )
        """

    def testToolServerMetrics(self):
        """Test ToolServerMetrics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == "__main__":
    unittest.main()
