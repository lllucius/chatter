"""
Chatter API

Advanced AI Chatbot Backend API Platform

The version of the OpenAPI document: 0.1.0
Contact: support@chatter.ai
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from chatter_sdk.models.workflow_execution_response import (
    WorkflowExecutionResponse,
)


class TestWorkflowExecutionResponse(unittest.TestCase):
    """WorkflowExecutionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(
        self, include_optional
    ) -> WorkflowExecutionResponse:
        """Test WorkflowExecutionResponse
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `WorkflowExecutionResponse`
        """
        model = WorkflowExecutionResponse()
        if include_optional:
            return WorkflowExecutionResponse(
                input_data = { },
                id = '',
                definition_id = '',
                owner_id = '',
                status = '',
                started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                completed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                execution_time_ms = 56,
                output_data = { },
                error_message = '',
                tokens_used = 56,
                cost = 1.337,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return WorkflowExecutionResponse(
                id = '',
                definition_id = '',
                owner_id = '',
                status = '',
        )
        """

    def testWorkflowExecutionResponse(self):
        """Test WorkflowExecutionResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
