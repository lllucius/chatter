/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TestStatus } from './TestStatus';
import {
    TestStatusFromJSON,
    TestStatusFromJSONTyped,
    TestStatusToJSON,
    TestStatusToJSONTyped,
} from './TestStatus';

/**
 * Response schema for test actions (start, pause, complete).
 * @export
 * @interface ABTestActionResponse
 */
export interface ABTestActionResponse {
    /**
     * Whether action was successful
     * @type {boolean}
     * @memberof ABTestActionResponse
     */
    success: boolean;
    /**
     * Action result message
     * @type {string}
     * @memberof ABTestActionResponse
     */
    message: string;
    /**
     * Test ID
     * @type {string}
     * @memberof ABTestActionResponse
     */
    testId: string;
    /**
     * 
     * @type {TestStatus}
     * @memberof ABTestActionResponse
     */
    newStatus: TestStatus;
}



/**
 * Check if a given object implements the ABTestActionResponse interface.
 */
export function instanceOfABTestActionResponse(value: object): value is ABTestActionResponse {
    if (!('success' in value) || value['success'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('testId' in value) || value['testId'] === undefined) return false;
    if (!('newStatus' in value) || value['newStatus'] === undefined) return false;
    return true;
}

export function ABTestActionResponseFromJSON(json: any): ABTestActionResponse {
    return ABTestActionResponseFromJSONTyped(json, false);
}

export function ABTestActionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ABTestActionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'success': json['success'],
        'message': json['message'],
        'testId': json['test_id'],
        'newStatus': TestStatusFromJSON(json['new_status']),
    };
}

export function ABTestActionResponseToJSON(json: any): ABTestActionResponse {
    return ABTestActionResponseToJSONTyped(json, false);
}

export function ABTestActionResponseToJSONTyped(value?: ABTestActionResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'success': value['success'],
        'message': value['message'],
        'test_id': value['testId'],
        'new_status': TestStatusToJSON(value['newStatus']),
    };
}

