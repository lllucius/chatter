/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ABTestResponse } from './ABTestResponse';
import {
    ABTestResponseFromJSON,
    ABTestResponseFromJSONTyped,
    ABTestResponseToJSON,
    ABTestResponseToJSONTyped,
} from './ABTestResponse';

/**
 * Response schema for A/B test list.
 * @export
 * @interface ABTestListResponse
 */
export interface ABTestListResponse {
    /**
     * List of tests
     * @type {Array<ABTestResponse>}
     * @memberof ABTestListResponse
     */
    tests: Array<ABTestResponse>;
    /**
     * Total number of tests
     * @type {number}
     * @memberof ABTestListResponse
     */
    total: number;
}

/**
 * Check if a given object implements the ABTestListResponse interface.
 */
export function instanceOfABTestListResponse(value: object): value is ABTestListResponse {
    if (!('tests' in value) || value['tests'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function ABTestListResponseFromJSON(json: any): ABTestListResponse {
    return ABTestListResponseFromJSONTyped(json, false);
}

export function ABTestListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ABTestListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'tests': ((json['tests'] as Array<any>).map(ABTestResponseFromJSON)),
        'total': json['total'],
    };
}

export function ABTestListResponseToJSON(json: any): ABTestListResponse {
    return ABTestListResponseToJSONTyped(json, false);
}

export function ABTestListResponseToJSONTyped(value?: ABTestListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tests': ((value['tests'] as Array<any>).map(ABTestResponseToJSON)),
        'total': value['total'],
    };
}

