/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TestMetric } from './TestMetric';
import {
    TestMetricFromJSON,
    TestMetricFromJSONTyped,
    TestMetricToJSON,
    TestMetricToJSONTyped,
} from './TestMetric';

/**
 * Response schema for A/B test metrics.
 * @export
 * @interface ABTestMetricsResponse
 */
export interface ABTestMetricsResponse {
    /**
     * Test ID
     * @type {string}
     * @memberof ABTestMetricsResponse
     */
    testId: string;
    /**
     * Current metrics
     * @type {Array<TestMetric>}
     * @memberof ABTestMetricsResponse
     */
    metrics: Array<TestMetric>;
    /**
     * Current participant count
     * @type {number}
     * @memberof ABTestMetricsResponse
     */
    participantCount: number;
    /**
     * Last metrics update
     * @type {Date}
     * @memberof ABTestMetricsResponse
     */
    lastUpdated: Date;
}

/**
 * Check if a given object implements the ABTestMetricsResponse interface.
 */
export function instanceOfABTestMetricsResponse(value: object): value is ABTestMetricsResponse {
    if (!('testId' in value) || value['testId'] === undefined) return false;
    if (!('metrics' in value) || value['metrics'] === undefined) return false;
    if (!('participantCount' in value) || value['participantCount'] === undefined) return false;
    if (!('lastUpdated' in value) || value['lastUpdated'] === undefined) return false;
    return true;
}

export function ABTestMetricsResponseFromJSON(json: any): ABTestMetricsResponse {
    return ABTestMetricsResponseFromJSONTyped(json, false);
}

export function ABTestMetricsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ABTestMetricsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'testId': json['test_id'],
        'metrics': ((json['metrics'] as Array<any>).map(TestMetricFromJSON)),
        'participantCount': json['participant_count'],
        'lastUpdated': (new Date(json['last_updated'])),
    };
}

export function ABTestMetricsResponseToJSON(json: any): ABTestMetricsResponse {
    return ABTestMetricsResponseToJSONTyped(json, false);
}

export function ABTestMetricsResponseToJSONTyped(value?: ABTestMetricsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'test_id': value['testId'],
        'metrics': ((value['metrics'] as Array<any>).map(TestMetricToJSON)),
        'participant_count': value['participantCount'],
        'last_updated': ((value['lastUpdated']).toISOString()),
    };
}

