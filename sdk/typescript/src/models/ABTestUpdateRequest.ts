/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TestStatus } from './TestStatus';
import {
    TestStatusFromJSON,
    TestStatusFromJSONTyped,
    TestStatusToJSON,
    TestStatusToJSONTyped,
} from './TestStatus';

/**
 * Request schema for updating an A/B test.
 * @export
 * @interface ABTestUpdateRequest
 */
export interface ABTestUpdateRequest {
    /**
     * 
     * @type {string}
     * @memberof ABTestUpdateRequest
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ABTestUpdateRequest
     */
    description?: string | null;
    /**
     * 
     * @type {TestStatus}
     * @memberof ABTestUpdateRequest
     */
    status?: TestStatus | null;
    /**
     * 
     * @type {number}
     * @memberof ABTestUpdateRequest
     */
    durationDays?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ABTestUpdateRequest
     */
    minSampleSize?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ABTestUpdateRequest
     */
    confidenceLevel?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ABTestUpdateRequest
     */
    trafficPercentage?: number | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ABTestUpdateRequest
     */
    tags?: Array<string> | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ABTestUpdateRequest
     */
    metadata?: { [key: string]: any; } | null;
}



/**
 * Check if a given object implements the ABTestUpdateRequest interface.
 */
export function instanceOfABTestUpdateRequest(value: object): value is ABTestUpdateRequest {
    return true;
}

export function ABTestUpdateRequestFromJSON(json: any): ABTestUpdateRequest {
    return ABTestUpdateRequestFromJSONTyped(json, false);
}

export function ABTestUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ABTestUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'status': json['status'] == null ? undefined : TestStatusFromJSON(json['status']),
        'durationDays': json['duration_days'] == null ? undefined : json['duration_days'],
        'minSampleSize': json['min_sample_size'] == null ? undefined : json['min_sample_size'],
        'confidenceLevel': json['confidence_level'] == null ? undefined : json['confidence_level'],
        'trafficPercentage': json['traffic_percentage'] == null ? undefined : json['traffic_percentage'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
    };
}

export function ABTestUpdateRequestToJSON(json: any): ABTestUpdateRequest {
    return ABTestUpdateRequestToJSONTyped(json, false);
}

export function ABTestUpdateRequestToJSONTyped(value?: ABTestUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'status': TestStatusToJSON(value['status']),
        'duration_days': value['durationDays'],
        'min_sample_size': value['minSampleSize'],
        'confidence_level': value['confidenceLevel'],
        'traffic_percentage': value['trafficPercentage'],
        'tags': value['tags'],
        'metadata': value['metadata'],
    };
}

