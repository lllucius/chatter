/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AgentStatus } from './AgentStatus';
import {
    AgentStatusFromJSON,
    AgentStatusFromJSONTyped,
    AgentStatusToJSON,
    AgentStatusToJSONTyped,
} from './AgentStatus';

/**
 * Response schema for agent health check.
 * @export
 * @interface AgentHealthResponse
 */
export interface AgentHealthResponse {
    /**
     * Agent ID
     * @type {string}
     * @memberof AgentHealthResponse
     */
    agentId: string;
    /**
     * 
     * @type {AgentStatus}
     * @memberof AgentHealthResponse
     */
    status: AgentStatus;
    /**
     * Health status (healthy/unhealthy/unknown)
     * @type {string}
     * @memberof AgentHealthResponse
     */
    health: string;
    /**
     * 
     * @type {Date}
     * @memberof AgentHealthResponse
     */
    lastInteraction?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof AgentHealthResponse
     */
    responseTimeAvg?: number | null;
    /**
     * 
     * @type {number}
     * @memberof AgentHealthResponse
     */
    errorRate?: number | null;
}



/**
 * Check if a given object implements the AgentHealthResponse interface.
 */
export function instanceOfAgentHealthResponse(value: object): value is AgentHealthResponse {
    if (!('agentId' in value) || value['agentId'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('health' in value) || value['health'] === undefined) return false;
    return true;
}

export function AgentHealthResponseFromJSON(json: any): AgentHealthResponse {
    return AgentHealthResponseFromJSONTyped(json, false);
}

export function AgentHealthResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentHealthResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'agentId': json['agent_id'],
        'status': AgentStatusFromJSON(json['status']),
        'health': json['health'],
        'lastInteraction': json['last_interaction'] == null ? undefined : (new Date(json['last_interaction'])),
        'responseTimeAvg': json['response_time_avg'] == null ? undefined : json['response_time_avg'],
        'errorRate': json['error_rate'] == null ? undefined : json['error_rate'],
    };
}

export function AgentHealthResponseToJSON(json: any): AgentHealthResponse {
    return AgentHealthResponseToJSONTyped(json, false);
}

export function AgentHealthResponseToJSONTyped(value?: AgentHealthResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'agent_id': value['agentId'],
        'status': AgentStatusToJSON(value['status']),
        'health': value['health'],
        'last_interaction': value['lastInteraction'] === null ? null : ((value['lastInteraction'] as any)?.toISOString()),
        'response_time_avg': value['responseTimeAvg'],
        'error_rate': value['errorRate'],
    };
}

