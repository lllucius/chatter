/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Response schema for agent statistics.
 * @export
 * @interface AgentStatsResponse
 */
export interface AgentStatsResponse {
    /**
     * Total number of agents
     * @type {number}
     * @memberof AgentStatsResponse
     */
    totalAgents: number;
    /**
     * Number of active agents
     * @type {number}
     * @memberof AgentStatsResponse
     */
    activeAgents: number;
    /**
     * Agents by type
     * @type {{ [key: string]: number; }}
     * @memberof AgentStatsResponse
     */
    agentTypes: { [key: string]: number; };
    /**
     * Total interactions across all agents
     * @type {number}
     * @memberof AgentStatsResponse
     */
    totalInteractions: number;
}

/**
 * Check if a given object implements the AgentStatsResponse interface.
 */
export function instanceOfAgentStatsResponse(value: object): value is AgentStatsResponse {
    if (!('totalAgents' in value) || value['totalAgents'] === undefined) return false;
    if (!('activeAgents' in value) || value['activeAgents'] === undefined) return false;
    if (!('agentTypes' in value) || value['agentTypes'] === undefined) return false;
    if (!('totalInteractions' in value) || value['totalInteractions'] === undefined) return false;
    return true;
}

export function AgentStatsResponseFromJSON(json: any): AgentStatsResponse {
    return AgentStatsResponseFromJSONTyped(json, false);
}

export function AgentStatsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AgentStatsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'totalAgents': json['total_agents'],
        'activeAgents': json['active_agents'],
        'agentTypes': json['agent_types'],
        'totalInteractions': json['total_interactions'],
    };
}

export function AgentStatsResponseToJSON(json: any): AgentStatsResponse {
    return AgentStatsResponseToJSONTyped(json, false);
}

export function AgentStatsResponseToJSONTyped(value?: AgentStatsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'total_agents': value['totalAgents'],
        'active_agents': value['activeAgents'],
        'agent_types': value['agentTypes'],
        'total_interactions': value['totalInteractions'],
    };
}

