/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for bottleneck information.
 * @export
 * @interface BottleneckInfo
 */
export interface BottleneckInfo {
    /**
     * Node ID with bottleneck
     * @type {string}
     * @memberof BottleneckInfo
     */
    nodeId: string;
    /**
     * Node type
     * @type {string}
     * @memberof BottleneckInfo
     */
    nodeType: string;
    /**
     * Bottleneck reason
     * @type {string}
     * @memberof BottleneckInfo
     */
    reason: string;
    /**
     * Bottleneck severity (low/medium/high)
     * @type {string}
     * @memberof BottleneckInfo
     */
    severity: string;
    /**
     * Optimization suggestions
     * @type {Array<string>}
     * @memberof BottleneckInfo
     */
    suggestions: Array<string>;
}

/**
 * Check if a given object implements the BottleneckInfo interface.
 */
export function instanceOfBottleneckInfo(value: object): value is BottleneckInfo {
    if (!('nodeId' in value) || value['nodeId'] === undefined) return false;
    if (!('nodeType' in value) || value['nodeType'] === undefined) return false;
    if (!('reason' in value) || value['reason'] === undefined) return false;
    if (!('severity' in value) || value['severity'] === undefined) return false;
    if (!('suggestions' in value) || value['suggestions'] === undefined) return false;
    return true;
}

export function BottleneckInfoFromJSON(json: any): BottleneckInfo {
    return BottleneckInfoFromJSONTyped(json, false);
}

export function BottleneckInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BottleneckInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'nodeId': json['node_id'],
        'nodeType': json['node_type'],
        'reason': json['reason'],
        'severity': json['severity'],
        'suggestions': json['suggestions'],
    };
}

export function BottleneckInfoToJSON(json: any): BottleneckInfo {
    return BottleneckInfoToJSONTyped(json, false);
}

export function BottleneckInfoToJSONTyped(value?: BottleneckInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'node_id': value['nodeId'],
        'node_type': value['nodeType'],
        'reason': value['reason'],
        'severity': value['severity'],
        'suggestions': value['suggestions'],
    };
}

