/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for creating a conversation.
 * @export
 * @interface ConversationCreate
 */
export interface ConversationCreate {
    /**
     * Conversation title
     * @type {string}
     * @memberof ConversationCreate
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationCreate
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ConversationCreate
     */
    profileId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ConversationCreate
     */
    systemPrompt?: string | null;
    /**
     * Enable document retrieval
     * @type {boolean}
     * @memberof ConversationCreate
     */
    enableRetrieval?: boolean;
    /**
     * 
     * @type {number}
     * @memberof ConversationCreate
     */
    temperature?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ConversationCreate
     */
    maxTokens?: number | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ConversationCreate
     */
    workflowConfig?: { [key: string]: any; } | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ConversationCreate
     */
    extraMetadata?: { [key: string]: any; } | null;
}

/**
 * Check if a given object implements the ConversationCreate interface.
 */
export function instanceOfConversationCreate(value: object): value is ConversationCreate {
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function ConversationCreateFromJSON(json: any): ConversationCreate {
    return ConversationCreateFromJSONTyped(json, false);
}

export function ConversationCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'profileId': json['profile_id'] == null ? undefined : json['profile_id'],
        'systemPrompt': json['system_prompt'] == null ? undefined : json['system_prompt'],
        'enableRetrieval': json['enable_retrieval'] == null ? undefined : json['enable_retrieval'],
        'temperature': json['temperature'] == null ? undefined : json['temperature'],
        'maxTokens': json['max_tokens'] == null ? undefined : json['max_tokens'],
        'workflowConfig': json['workflow_config'] == null ? undefined : json['workflow_config'],
        'extraMetadata': json['extra_metadata'] == null ? undefined : json['extra_metadata'],
    };
}

export function ConversationCreateToJSON(json: any): ConversationCreate {
    return ConversationCreateToJSONTyped(json, false);
}

export function ConversationCreateToJSONTyped(value?: ConversationCreate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'description': value['description'],
        'profile_id': value['profileId'],
        'system_prompt': value['systemPrompt'],
        'enable_retrieval': value['enableRetrieval'],
        'temperature': value['temperature'],
        'max_tokens': value['maxTokens'],
        'workflow_config': value['workflowConfig'],
        'extra_metadata': value['extraMetadata'],
    };
}

