/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentChunkResponse } from './DocumentChunkResponse';
import {
    DocumentChunkResponseFromJSON,
    DocumentChunkResponseFromJSONTyped,
    DocumentChunkResponseToJSON,
    DocumentChunkResponseToJSONTyped,
} from './DocumentChunkResponse';

/**
 * Schema for document chunks response with pagination.
 * @export
 * @interface DocumentChunksResponse
 */
export interface DocumentChunksResponse {
    /**
     * List of document chunks
     * @type {Array<DocumentChunkResponse>}
     * @memberof DocumentChunksResponse
     */
    chunks: Array<DocumentChunkResponse>;
    /**
     * Total number of chunks
     * @type {number}
     * @memberof DocumentChunksResponse
     */
    totalCount: number;
    /**
     * Applied limit
     * @type {number}
     * @memberof DocumentChunksResponse
     */
    limit: number;
    /**
     * Applied offset
     * @type {number}
     * @memberof DocumentChunksResponse
     */
    offset: number;
}

/**
 * Check if a given object implements the DocumentChunksResponse interface.
 */
export function instanceOfDocumentChunksResponse(value: object): value is DocumentChunksResponse {
    if (!('chunks' in value) || value['chunks'] === undefined) return false;
    if (!('totalCount' in value) || value['totalCount'] === undefined) return false;
    if (!('limit' in value) || value['limit'] === undefined) return false;
    if (!('offset' in value) || value['offset'] === undefined) return false;
    return true;
}

export function DocumentChunksResponseFromJSON(json: any): DocumentChunksResponse {
    return DocumentChunksResponseFromJSONTyped(json, false);
}

export function DocumentChunksResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentChunksResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'chunks': ((json['chunks'] as Array<any>).map(DocumentChunkResponseFromJSON)),
        'totalCount': json['total_count'],
        'limit': json['limit'],
        'offset': json['offset'],
    };
}

export function DocumentChunksResponseToJSON(json: any): DocumentChunksResponse {
    return DocumentChunksResponseToJSONTyped(json, false);
}

export function DocumentChunksResponseToJSONTyped(value?: DocumentChunksResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chunks': ((value['chunks'] as Array<any>).map(DocumentChunkResponseToJSON)),
        'total_count': value['totalCount'],
        'limit': value['limit'],
        'offset': value['offset'],
    };
}

