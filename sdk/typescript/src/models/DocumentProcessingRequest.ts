/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for document processing request.
 * @export
 * @interface DocumentProcessingRequest
 */
export interface DocumentProcessingRequest {
    /**
     * Force reprocessing
     * @type {boolean}
     * @memberof DocumentProcessingRequest
     */
    reprocess?: boolean;
    /**
     * 
     * @type {number}
     * @memberof DocumentProcessingRequest
     */
    chunkSize?: number | null;
    /**
     * 
     * @type {number}
     * @memberof DocumentProcessingRequest
     */
    chunkOverlap?: number | null;
    /**
     * Generate embeddings for chunks
     * @type {boolean}
     * @memberof DocumentProcessingRequest
     */
    generateEmbeddings?: boolean;
}

/**
 * Check if a given object implements the DocumentProcessingRequest interface.
 */
export function instanceOfDocumentProcessingRequest(value: object): value is DocumentProcessingRequest {
    return true;
}

export function DocumentProcessingRequestFromJSON(json: any): DocumentProcessingRequest {
    return DocumentProcessingRequestFromJSONTyped(json, false);
}

export function DocumentProcessingRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentProcessingRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'reprocess': json['reprocess'] == null ? undefined : json['reprocess'],
        'chunkSize': json['chunk_size'] == null ? undefined : json['chunk_size'],
        'chunkOverlap': json['chunk_overlap'] == null ? undefined : json['chunk_overlap'],
        'generateEmbeddings': json['generate_embeddings'] == null ? undefined : json['generate_embeddings'],
    };
}

export function DocumentProcessingRequestToJSON(json: any): DocumentProcessingRequest {
    return DocumentProcessingRequestToJSONTyped(json, false);
}

export function DocumentProcessingRequestToJSONTyped(value?: DocumentProcessingRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'reprocess': value['reprocess'],
        'chunk_size': value['chunkSize'],
        'chunk_overlap': value['chunkOverlap'],
        'generate_embeddings': value['generateEmbeddings'],
    };
}

