/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentSearchResult } from './DocumentSearchResult';
import {
    DocumentSearchResultFromJSON,
    DocumentSearchResultFromJSONTyped,
    DocumentSearchResultToJSON,
    DocumentSearchResultToJSONTyped,
} from './DocumentSearchResult';

/**
 * Schema for document search response.
 * @export
 * @interface DocumentSearchResponse
 */
export interface DocumentSearchResponse {
    /**
     * Search results
     * @type {Array<DocumentSearchResult>}
     * @memberof DocumentSearchResponse
     */
    results: Array<DocumentSearchResult>;
    /**
     * Total number of matching results
     * @type {number}
     * @memberof DocumentSearchResponse
     */
    totalResults: number;
    /**
     * Original search query
     * @type {string}
     * @memberof DocumentSearchResponse
     */
    query: string;
    /**
     * Applied score threshold
     * @type {number}
     * @memberof DocumentSearchResponse
     */
    scoreThreshold: number;
}

/**
 * Check if a given object implements the DocumentSearchResponse interface.
 */
export function instanceOfDocumentSearchResponse(value: object): value is DocumentSearchResponse {
    if (!('results' in value) || value['results'] === undefined) return false;
    if (!('totalResults' in value) || value['totalResults'] === undefined) return false;
    if (!('query' in value) || value['query'] === undefined) return false;
    if (!('scoreThreshold' in value) || value['scoreThreshold'] === undefined) return false;
    return true;
}

export function DocumentSearchResponseFromJSON(json: any): DocumentSearchResponse {
    return DocumentSearchResponseFromJSONTyped(json, false);
}

export function DocumentSearchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentSearchResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'results': ((json['results'] as Array<any>).map(DocumentSearchResultFromJSON)),
        'totalResults': json['total_results'],
        'query': json['query'],
        'scoreThreshold': json['score_threshold'],
    };
}

export function DocumentSearchResponseToJSON(json: any): DocumentSearchResponse {
    return DocumentSearchResponseToJSONTyped(json, false);
}

export function DocumentSearchResponseToJSONTyped(value?: DocumentSearchResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'results': ((value['results'] as Array<any>).map(DocumentSearchResultToJSON)),
        'total_results': value['totalResults'],
        'query': value['query'],
        'score_threshold': value['scoreThreshold'],
    };
}

