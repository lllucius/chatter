/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentResponse } from './DocumentResponse';
import {
    DocumentResponseFromJSON,
    DocumentResponseFromJSONTyped,
    DocumentResponseToJSON,
    DocumentResponseToJSONTyped,
} from './DocumentResponse';

/**
 * Schema for document search result.
 * @export
 * @interface DocumentSearchResult
 */
export interface DocumentSearchResult {
    /**
     * Document ID
     * @type {string}
     * @memberof DocumentSearchResult
     */
    documentId: string;
    /**
     * Chunk ID
     * @type {string}
     * @memberof DocumentSearchResult
     */
    chunkId: string;
    /**
     * Similarity score
     * @type {number}
     * @memberof DocumentSearchResult
     */
    score: number;
    /**
     * Matching content
     * @type {string}
     * @memberof DocumentSearchResult
     */
    content: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof DocumentSearchResult
     */
    metadata?: { [key: string]: any; } | null;
    /**
     * 
     * @type {DocumentResponse}
     * @memberof DocumentSearchResult
     */
    document: DocumentResponse;
}

/**
 * Check if a given object implements the DocumentSearchResult interface.
 */
export function instanceOfDocumentSearchResult(value: object): value is DocumentSearchResult {
    if (!('documentId' in value) || value['documentId'] === undefined) return false;
    if (!('chunkId' in value) || value['chunkId'] === undefined) return false;
    if (!('score' in value) || value['score'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('document' in value) || value['document'] === undefined) return false;
    return true;
}

export function DocumentSearchResultFromJSON(json: any): DocumentSearchResult {
    return DocumentSearchResultFromJSONTyped(json, false);
}

export function DocumentSearchResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentSearchResult {
    if (json == null) {
        return json;
    }
    return {
        
        'documentId': json['document_id'],
        'chunkId': json['chunk_id'],
        'score': json['score'],
        'content': json['content'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'document': DocumentResponseFromJSON(json['document']),
    };
}

export function DocumentSearchResultToJSON(json: any): DocumentSearchResult {
    return DocumentSearchResultToJSONTyped(json, false);
}

export function DocumentSearchResultToJSONTyped(value?: DocumentSearchResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'document_id': value['documentId'],
        'chunk_id': value['chunkId'],
        'score': value['score'],
        'content': value['content'],
        'metadata': value['metadata'],
        'document': DocumentResponseToJSON(value['document']),
    };
}

