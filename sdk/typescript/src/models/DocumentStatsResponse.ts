/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for document statistics response.
 * @export
 * @interface DocumentStatsResponse
 */
export interface DocumentStatsResponse {
    /**
     * Total number of documents
     * @type {number}
     * @memberof DocumentStatsResponse
     */
    totalDocuments: number;
    /**
     * Total number of chunks
     * @type {number}
     * @memberof DocumentStatsResponse
     */
    totalChunks: number;
    /**
     * Total size in bytes
     * @type {number}
     * @memberof DocumentStatsResponse
     */
    totalSizeBytes: number;
    /**
     * Documents grouped by status
     * @type {{ [key: string]: number; }}
     * @memberof DocumentStatsResponse
     */
    documentsByStatus: { [key: string]: number; };
    /**
     * Documents grouped by type
     * @type {{ [key: string]: number; }}
     * @memberof DocumentStatsResponse
     */
    documentsByType: { [key: string]: number; };
    /**
     * Processing statistics
     * @type {{ [key: string]: any; }}
     * @memberof DocumentStatsResponse
     */
    processingStats: { [key: string]: any; };
}

/**
 * Check if a given object implements the DocumentStatsResponse interface.
 */
export function instanceOfDocumentStatsResponse(value: object): value is DocumentStatsResponse {
    if (!('totalDocuments' in value) || value['totalDocuments'] === undefined) return false;
    if (!('totalChunks' in value) || value['totalChunks'] === undefined) return false;
    if (!('totalSizeBytes' in value) || value['totalSizeBytes'] === undefined) return false;
    if (!('documentsByStatus' in value) || value['documentsByStatus'] === undefined) return false;
    if (!('documentsByType' in value) || value['documentsByType'] === undefined) return false;
    if (!('processingStats' in value) || value['processingStats'] === undefined) return false;
    return true;
}

export function DocumentStatsResponseFromJSON(json: any): DocumentStatsResponse {
    return DocumentStatsResponseFromJSONTyped(json, false);
}

export function DocumentStatsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentStatsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'totalDocuments': json['total_documents'],
        'totalChunks': json['total_chunks'],
        'totalSizeBytes': json['total_size_bytes'],
        'documentsByStatus': json['documents_by_status'],
        'documentsByType': json['documents_by_type'],
        'processingStats': json['processing_stats'],
    };
}

export function DocumentStatsResponseToJSON(json: any): DocumentStatsResponse {
    return DocumentStatsResponseToJSONTyped(json, false);
}

export function DocumentStatsResponseToJSONTyped(value?: DocumentStatsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'total_documents': value['totalDocuments'],
        'total_chunks': value['totalChunks'],
        'total_size_bytes': value['totalSizeBytes'],
        'documents_by_status': value['documentsByStatus'],
        'documents_by_type': value['documentsByType'],
        'processing_stats': value['processingStats'],
    };
}

