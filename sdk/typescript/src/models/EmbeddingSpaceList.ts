/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddingSpaceWithModel } from './EmbeddingSpaceWithModel';
import {
    EmbeddingSpaceWithModelFromJSON,
    EmbeddingSpaceWithModelFromJSONTyped,
    EmbeddingSpaceWithModelToJSON,
    EmbeddingSpaceWithModelToJSONTyped,
} from './EmbeddingSpaceWithModel';

/**
 * List of embedding spaces with pagination.
 * @export
 * @interface EmbeddingSpaceList
 */
export interface EmbeddingSpaceList {
    /**
     * 
     * @type {Array<EmbeddingSpaceWithModel>}
     * @memberof EmbeddingSpaceList
     */
    spaces: Array<EmbeddingSpaceWithModel>;
    /**
     * 
     * @type {number}
     * @memberof EmbeddingSpaceList
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof EmbeddingSpaceList
     */
    page: number;
    /**
     * 
     * @type {number}
     * @memberof EmbeddingSpaceList
     */
    perPage: number;
}

/**
 * Check if a given object implements the EmbeddingSpaceList interface.
 */
export function instanceOfEmbeddingSpaceList(value: object): value is EmbeddingSpaceList {
    if (!('spaces' in value) || value['spaces'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('page' in value) || value['page'] === undefined) return false;
    if (!('perPage' in value) || value['perPage'] === undefined) return false;
    return true;
}

export function EmbeddingSpaceListFromJSON(json: any): EmbeddingSpaceList {
    return EmbeddingSpaceListFromJSONTyped(json, false);
}

export function EmbeddingSpaceListFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmbeddingSpaceList {
    if (json == null) {
        return json;
    }
    return {
        
        'spaces': ((json['spaces'] as Array<any>).map(EmbeddingSpaceWithModelFromJSON)),
        'total': json['total'],
        'page': json['page'],
        'perPage': json['per_page'],
    };
}

export function EmbeddingSpaceListToJSON(json: any): EmbeddingSpaceList {
    return EmbeddingSpaceListToJSONTyped(json, false);
}

export function EmbeddingSpaceListToJSONTyped(value?: EmbeddingSpaceList | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'spaces': ((value['spaces'] as Array<any>).map(EmbeddingSpaceWithModelToJSON)),
        'total': value['total'],
        'page': value['page'],
        'per_page': value['perPage'],
    };
}

