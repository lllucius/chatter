/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Response schema for data export.
 * @export
 * @interface ExportDataResponse
 */
export interface ExportDataResponse {
    /**
     * Export ID
     * @type {string}
     * @memberof ExportDataResponse
     */
    exportId: string;
    /**
     * Export status
     * @type {string}
     * @memberof ExportDataResponse
     */
    status: string;
    /**
     * 
     * @type {string}
     * @memberof ExportDataResponse
     */
    downloadUrl?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ExportDataResponse
     */
    fileSize?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ExportDataResponse
     */
    recordCount?: number | null;
    /**
     * Export creation timestamp
     * @type {Date}
     * @memberof ExportDataResponse
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof ExportDataResponse
     */
    completedAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof ExportDataResponse
     */
    expiresAt?: Date | null;
}

/**
 * Check if a given object implements the ExportDataResponse interface.
 */
export function instanceOfExportDataResponse(value: object): value is ExportDataResponse {
    if (!('exportId' in value) || value['exportId'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function ExportDataResponseFromJSON(json: any): ExportDataResponse {
    return ExportDataResponseFromJSONTyped(json, false);
}

export function ExportDataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExportDataResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'exportId': json['export_id'],
        'status': json['status'],
        'downloadUrl': json['download_url'] == null ? undefined : json['download_url'],
        'fileSize': json['file_size'] == null ? undefined : json['file_size'],
        'recordCount': json['record_count'] == null ? undefined : json['record_count'],
        'createdAt': (new Date(json['created_at'])),
        'completedAt': json['completed_at'] == null ? undefined : (new Date(json['completed_at'])),
        'expiresAt': json['expires_at'] == null ? undefined : (new Date(json['expires_at'])),
    };
}

export function ExportDataResponseToJSON(json: any): ExportDataResponse {
    return ExportDataResponseToJSONTyped(json, false);
}

export function ExportDataResponseToJSONTyped(value?: ExportDataResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'export_id': value['exportId'],
        'status': value['status'],
        'download_url': value['downloadUrl'],
        'file_size': value['fileSize'],
        'record_count': value['recordCount'],
        'created_at': ((value['createdAt']).toISOString()),
        'completed_at': value['completedAt'] === null ? null : ((value['completedAt'] as any)?.toISOString()),
        'expires_at': value['expiresAt'] === null ? null : ((value['expiresAt'] as any)?.toISOString()),
    };
}

