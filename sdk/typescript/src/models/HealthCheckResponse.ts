/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HealthStatus } from './HealthStatus';
import {
    HealthStatusFromJSON,
    HealthStatusFromJSONTyped,
    HealthStatusToJSON,
    HealthStatusToJSONTyped,
} from './HealthStatus';

/**
 * Schema for health check response.
 * @export
 * @interface HealthCheckResponse
 */
export interface HealthCheckResponse {
    /**
     * 
     * @type {HealthStatus}
     * @memberof HealthCheckResponse
     */
    status: HealthStatus;
    /**
     * Service name
     * @type {string}
     * @memberof HealthCheckResponse
     */
    service: string;
    /**
     * Service version
     * @type {string}
     * @memberof HealthCheckResponse
     */
    version: string;
    /**
     * Environment
     * @type {string}
     * @memberof HealthCheckResponse
     */
    environment: string;
}



/**
 * Check if a given object implements the HealthCheckResponse interface.
 */
export function instanceOfHealthCheckResponse(value: object): value is HealthCheckResponse {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('service' in value) || value['service'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('environment' in value) || value['environment'] === undefined) return false;
    return true;
}

export function HealthCheckResponseFromJSON(json: any): HealthCheckResponse {
    return HealthCheckResponseFromJSONTyped(json, false);
}

export function HealthCheckResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthCheckResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'status': HealthStatusFromJSON(json['status']),
        'service': json['service'],
        'version': json['version'],
        'environment': json['environment'],
    };
}

export function HealthCheckResponseToJSON(json: any): HealthCheckResponse {
    return HealthCheckResponseToJSONTyped(json, false);
}

export function HealthCheckResponseToJSONTyped(value?: HealthCheckResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': HealthStatusToJSON(value['status']),
        'service': value['service'],
        'version': value['version'],
        'environment': value['environment'],
    };
}

