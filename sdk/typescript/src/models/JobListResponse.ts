/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { JobResponse } from './JobResponse';
import {
    JobResponseFromJSON,
    JobResponseFromJSONTyped,
    JobResponseToJSON,
    JobResponseToJSONTyped,
} from './JobResponse';

/**
 * Response schema for job list.
 * @export
 * @interface JobListResponse
 */
export interface JobListResponse {
    /**
     * List of jobs
     * @type {Array<JobResponse>}
     * @memberof JobListResponse
     */
    jobs: Array<JobResponse>;
    /**
     * Total number of jobs
     * @type {number}
     * @memberof JobListResponse
     */
    total: number;
    /**
     * Maximum results per page
     * @type {number}
     * @memberof JobListResponse
     */
    limit: number;
    /**
     * Number of results skipped
     * @type {number}
     * @memberof JobListResponse
     */
    offset: number;
    /**
     * Whether more results exist
     * @type {boolean}
     * @memberof JobListResponse
     */
    hasMore: boolean;
}

/**
 * Check if a given object implements the JobListResponse interface.
 */
export function instanceOfJobListResponse(value: object): value is JobListResponse {
    if (!('jobs' in value) || value['jobs'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('limit' in value) || value['limit'] === undefined) return false;
    if (!('offset' in value) || value['offset'] === undefined) return false;
    if (!('hasMore' in value) || value['hasMore'] === undefined) return false;
    return true;
}

export function JobListResponseFromJSON(json: any): JobListResponse {
    return JobListResponseFromJSONTyped(json, false);
}

export function JobListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'jobs': ((json['jobs'] as Array<any>).map(JobResponseFromJSON)),
        'total': json['total'],
        'limit': json['limit'],
        'offset': json['offset'],
        'hasMore': json['has_more'],
    };
}

export function JobListResponseToJSON(json: any): JobListResponse {
    return JobListResponseToJSONTyped(json, false);
}

export function JobListResponseToJSONTyped(value?: JobListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'jobs': ((value['jobs'] as Array<any>).map(JobResponseToJSON)),
        'total': value['total'],
        'limit': value['limit'],
        'offset': value['offset'],
        'has_more': value['hasMore'],
    };
}

