/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for application metrics response.
 * @export
 * @interface MetricsResponse
 */
export interface MetricsResponse {
    /**
     * Metrics collection timestamp (ISO 8601)
     * @type {string}
     * @memberof MetricsResponse
     */
    timestamp: string;
    /**
     * Service name
     * @type {string}
     * @memberof MetricsResponse
     */
    service: string;
    /**
     * Service version
     * @type {string}
     * @memberof MetricsResponse
     */
    version: string;
    /**
     * Environment
     * @type {string}
     * @memberof MetricsResponse
     */
    environment: string;
    /**
     * Health metrics
     * @type {{ [key: string]: any; }}
     * @memberof MetricsResponse
     */
    health: { [key: string]: any; };
    /**
     * Performance statistics
     * @type {{ [key: string]: any; }}
     * @memberof MetricsResponse
     */
    performance: { [key: string]: any; };
    /**
     * Endpoint statistics
     * @type {{ [key: string]: any; }}
     * @memberof MetricsResponse
     */
    endpoints: { [key: string]: any; };
}

/**
 * Check if a given object implements the MetricsResponse interface.
 */
export function instanceOfMetricsResponse(value: object): value is MetricsResponse {
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('service' in value) || value['service'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('environment' in value) || value['environment'] === undefined) return false;
    if (!('health' in value) || value['health'] === undefined) return false;
    if (!('performance' in value) || value['performance'] === undefined) return false;
    if (!('endpoints' in value) || value['endpoints'] === undefined) return false;
    return true;
}

export function MetricsResponseFromJSON(json: any): MetricsResponse {
    return MetricsResponseFromJSONTyped(json, false);
}

export function MetricsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetricsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'timestamp': json['timestamp'],
        'service': json['service'],
        'version': json['version'],
        'environment': json['environment'],
        'health': json['health'],
        'performance': json['performance'],
        'endpoints': json['endpoints'],
    };
}

export function MetricsResponseToJSON(json: any): MetricsResponse {
    return MetricsResponseToJSONTyped(json, false);
}

export function MetricsResponseToJSONTyped(value?: MetricsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'timestamp': value['timestamp'],
        'service': value['service'],
        'version': value['version'],
        'environment': value['environment'],
        'health': value['health'],
        'performance': value['performance'],
        'endpoints': value['endpoints'],
    };
}

