/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for optimization suggestions.
 * @export
 * @interface OptimizationSuggestion
 */
export interface OptimizationSuggestion {
    /**
     * Suggestion type
     * @type {string}
     * @memberof OptimizationSuggestion
     */
    type: string;
    /**
     * Suggestion description
     * @type {string}
     * @memberof OptimizationSuggestion
     */
    description: string;
    /**
     * Expected impact (low/medium/high)
     * @type {string}
     * @memberof OptimizationSuggestion
     */
    impact: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof OptimizationSuggestion
     */
    nodeIds?: Array<string> | null;
}

/**
 * Check if a given object implements the OptimizationSuggestion interface.
 */
export function instanceOfOptimizationSuggestion(value: object): value is OptimizationSuggestion {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('impact' in value) || value['impact'] === undefined) return false;
    return true;
}

export function OptimizationSuggestionFromJSON(json: any): OptimizationSuggestion {
    return OptimizationSuggestionFromJSONTyped(json, false);
}

export function OptimizationSuggestionFromJSONTyped(json: any, ignoreDiscriminator: boolean): OptimizationSuggestion {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'description': json['description'],
        'impact': json['impact'],
        'nodeIds': json['node_ids'] == null ? undefined : json['node_ids'],
    };
}

export function OptimizationSuggestionToJSON(json: any): OptimizationSuggestion {
    return OptimizationSuggestionToJSONTyped(json, false);
}

export function OptimizationSuggestionToJSONTyped(value?: OptimizationSuggestion | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'description': value['description'],
        'impact': value['impact'],
        'node_ids': value['nodeIds'],
    };
}

