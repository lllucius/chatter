/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for performance statistics response.
 * @export
 * @interface PerformanceStatsResponse
 */
export interface PerformanceStatsResponse {
    /**
     * Total number of executions
     * @type {number}
     * @memberof PerformanceStatsResponse
     */
    totalExecutions: number;
    /**
     * Average execution time in milliseconds
     * @type {number}
     * @memberof PerformanceStatsResponse
     */
    avgExecutionTimeMs: number;
    /**
     * Minimum execution time in milliseconds
     * @type {number}
     * @memberof PerformanceStatsResponse
     */
    minExecutionTimeMs: number;
    /**
     * Maximum execution time in milliseconds
     * @type {number}
     * @memberof PerformanceStatsResponse
     */
    maxExecutionTimeMs: number;
    /**
     * Execution count by workflow type
     * @type {{ [key: string]: number; }}
     * @memberof PerformanceStatsResponse
     */
    workflowTypes: { [key: string]: number; };
    /**
     * Error count by type
     * @type {{ [key: string]: number; }}
     * @memberof PerformanceStatsResponse
     */
    errorCounts: { [key: string]: number; };
    /**
     * Cache statistics
     * @type {{ [key: string]: any; }}
     * @memberof PerformanceStatsResponse
     */
    cacheStats: { [key: string]: any; };
    /**
     * Tool usage statistics
     * @type {{ [key: string]: any; }}
     * @memberof PerformanceStatsResponse
     */
    toolStats: { [key: string]: any; };
    /**
     * Statistics timestamp
     * @type {number}
     * @memberof PerformanceStatsResponse
     */
    timestamp: number;
}

/**
 * Check if a given object implements the PerformanceStatsResponse interface.
 */
export function instanceOfPerformanceStatsResponse(value: object): value is PerformanceStatsResponse {
    if (!('totalExecutions' in value) || value['totalExecutions'] === undefined) return false;
    if (!('avgExecutionTimeMs' in value) || value['avgExecutionTimeMs'] === undefined) return false;
    if (!('minExecutionTimeMs' in value) || value['minExecutionTimeMs'] === undefined) return false;
    if (!('maxExecutionTimeMs' in value) || value['maxExecutionTimeMs'] === undefined) return false;
    if (!('workflowTypes' in value) || value['workflowTypes'] === undefined) return false;
    if (!('errorCounts' in value) || value['errorCounts'] === undefined) return false;
    if (!('cacheStats' in value) || value['cacheStats'] === undefined) return false;
    if (!('toolStats' in value) || value['toolStats'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    return true;
}

export function PerformanceStatsResponseFromJSON(json: any): PerformanceStatsResponse {
    return PerformanceStatsResponseFromJSONTyped(json, false);
}

export function PerformanceStatsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PerformanceStatsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'totalExecutions': json['total_executions'],
        'avgExecutionTimeMs': json['avg_execution_time_ms'],
        'minExecutionTimeMs': json['min_execution_time_ms'],
        'maxExecutionTimeMs': json['max_execution_time_ms'],
        'workflowTypes': json['workflow_types'],
        'errorCounts': json['error_counts'],
        'cacheStats': json['cache_stats'],
        'toolStats': json['tool_stats'],
        'timestamp': json['timestamp'],
    };
}

export function PerformanceStatsResponseToJSON(json: any): PerformanceStatsResponse {
    return PerformanceStatsResponseToJSONTyped(json, false);
}

export function PerformanceStatsResponseToJSONTyped(value?: PerformanceStatsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'total_executions': value['totalExecutions'],
        'avg_execution_time_ms': value['avgExecutionTimeMs'],
        'min_execution_time_ms': value['minExecutionTimeMs'],
        'max_execution_time_ms': value['maxExecutionTimeMs'],
        'workflow_types': value['workflowTypes'],
        'error_counts': value['errorCounts'],
        'cache_stats': value['cacheStats'],
        'tool_stats': value['toolStats'],
        'timestamp': value['timestamp'],
    };
}

