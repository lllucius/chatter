/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for profile test response.
 * @export
 * @interface ProfileTestResponse
 */
export interface ProfileTestResponse {
    /**
     * Profile ID
     * @type {string}
     * @memberof ProfileTestResponse
     */
    profileId: string;
    /**
     * Test message sent
     * @type {string}
     * @memberof ProfileTestResponse
     */
    testMessage: string;
    /**
     * Generated response
     * @type {string}
     * @memberof ProfileTestResponse
     */
    response: string;
    /**
     * Token usage and cost information
     * @type {{ [key: string]: any; }}
     * @memberof ProfileTestResponse
     */
    usageInfo: { [key: string]: any; };
    /**
     * Response time in milliseconds
     * @type {number}
     * @memberof ProfileTestResponse
     */
    responseTimeMs: number;
    /**
     * 
     * @type {Array<{ [key: string]: any; }>}
     * @memberof ProfileTestResponse
     */
    retrievalResults?: Array<{ [key: string]: any; }> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProfileTestResponse
     */
    toolsUsed?: Array<string> | null;
}

/**
 * Check if a given object implements the ProfileTestResponse interface.
 */
export function instanceOfProfileTestResponse(value: object): value is ProfileTestResponse {
    if (!('profileId' in value) || value['profileId'] === undefined) return false;
    if (!('testMessage' in value) || value['testMessage'] === undefined) return false;
    if (!('response' in value) || value['response'] === undefined) return false;
    if (!('usageInfo' in value) || value['usageInfo'] === undefined) return false;
    if (!('responseTimeMs' in value) || value['responseTimeMs'] === undefined) return false;
    return true;
}

export function ProfileTestResponseFromJSON(json: any): ProfileTestResponse {
    return ProfileTestResponseFromJSONTyped(json, false);
}

export function ProfileTestResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileTestResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'profileId': json['profile_id'],
        'testMessage': json['test_message'],
        'response': json['response'],
        'usageInfo': json['usage_info'],
        'responseTimeMs': json['response_time_ms'],
        'retrievalResults': json['retrieval_results'] == null ? undefined : json['retrieval_results'],
        'toolsUsed': json['tools_used'] == null ? undefined : json['tools_used'],
    };
}

export function ProfileTestResponseToJSON(json: any): ProfileTestResponse {
    return ProfileTestResponseToJSONTyped(json, false);
}

export function ProfileTestResponseToJSONTyped(value?: ProfileTestResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'profile_id': value['profileId'],
        'test_message': value['testMessage'],
        'response': value['response'],
        'usage_info': value['usageInfo'],
        'response_time_ms': value['responseTimeMs'],
        'retrieval_results': value['retrievalResults'],
        'tools_used': value['toolsUsed'],
    };
}

