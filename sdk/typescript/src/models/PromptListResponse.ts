/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PromptResponse } from './PromptResponse';
import {
    PromptResponseFromJSON,
    PromptResponseFromJSONTyped,
    PromptResponseToJSON,
    PromptResponseToJSONTyped,
} from './PromptResponse';

/**
 * Schema for prompt list response.
 * @export
 * @interface PromptListResponse
 */
export interface PromptListResponse {
    /**
     * List of prompts
     * @type {Array<PromptResponse>}
     * @memberof PromptListResponse
     */
    prompts: Array<PromptResponse>;
    /**
     * Total number of prompts
     * @type {number}
     * @memberof PromptListResponse
     */
    totalCount: number;
    /**
     * Requested limit
     * @type {number}
     * @memberof PromptListResponse
     */
    limit: number;
    /**
     * Requested offset
     * @type {number}
     * @memberof PromptListResponse
     */
    offset: number;
}

/**
 * Check if a given object implements the PromptListResponse interface.
 */
export function instanceOfPromptListResponse(value: object): value is PromptListResponse {
    if (!('prompts' in value) || value['prompts'] === undefined) return false;
    if (!('totalCount' in value) || value['totalCount'] === undefined) return false;
    if (!('limit' in value) || value['limit'] === undefined) return false;
    if (!('offset' in value) || value['offset'] === undefined) return false;
    return true;
}

export function PromptListResponseFromJSON(json: any): PromptListResponse {
    return PromptListResponseFromJSONTyped(json, false);
}

export function PromptListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PromptListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'prompts': ((json['prompts'] as Array<any>).map(PromptResponseFromJSON)),
        'totalCount': json['total_count'],
        'limit': json['limit'],
        'offset': json['offset'],
    };
}

export function PromptListResponseToJSON(json: any): PromptListResponse {
    return PromptListResponseToJSONTyped(json, false);
}

export function PromptListResponseToJSONTyped(value?: PromptListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'prompts': ((value['prompts'] as Array<any>).map(PromptResponseToJSON)),
        'total_count': value['totalCount'],
        'limit': value['limit'],
        'offset': value['offset'],
    };
}

