/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReadinessStatus } from './ReadinessStatus';
import {
    ReadinessStatusFromJSON,
    ReadinessStatusFromJSONTyped,
    ReadinessStatusToJSON,
    ReadinessStatusToJSONTyped,
} from './ReadinessStatus';

/**
 * Schema for readiness check response.
 * @export
 * @interface ReadinessCheckResponse
 */
export interface ReadinessCheckResponse {
    /**
     * 
     * @type {ReadinessStatus}
     * @memberof ReadinessCheckResponse
     */
    status: ReadinessStatus;
    /**
     * Service name
     * @type {string}
     * @memberof ReadinessCheckResponse
     */
    service: string;
    /**
     * Service version
     * @type {string}
     * @memberof ReadinessCheckResponse
     */
    version: string;
    /**
     * Environment
     * @type {string}
     * @memberof ReadinessCheckResponse
     */
    environment: string;
    /**
     * Health check results
     * @type {{ [key: string]: any; }}
     * @memberof ReadinessCheckResponse
     */
    checks: { [key: string]: any; };
}



/**
 * Check if a given object implements the ReadinessCheckResponse interface.
 */
export function instanceOfReadinessCheckResponse(value: object): value is ReadinessCheckResponse {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('service' in value) || value['service'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('environment' in value) || value['environment'] === undefined) return false;
    if (!('checks' in value) || value['checks'] === undefined) return false;
    return true;
}

export function ReadinessCheckResponseFromJSON(json: any): ReadinessCheckResponse {
    return ReadinessCheckResponseFromJSONTyped(json, false);
}

export function ReadinessCheckResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReadinessCheckResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'status': ReadinessStatusFromJSON(json['status']),
        'service': json['service'],
        'version': json['version'],
        'environment': json['environment'],
        'checks': json['checks'],
    };
}

export function ReadinessCheckResponseToJSON(json: any): ReadinessCheckResponse {
    return ReadinessCheckResponseToJSONTyped(json, false);
}

export function ReadinessCheckResponseToJSONTyped(value?: ReadinessCheckResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': ReadinessStatusToJSON(value['status']),
        'service': value['service'],
        'version': value['version'],
        'environment': value['environment'],
        'checks': value['checks'],
    };
}

