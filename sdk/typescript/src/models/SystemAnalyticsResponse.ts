/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for system analytics response.
 * @export
 * @interface SystemAnalyticsResponse
 */
export interface SystemAnalyticsResponse {
    /**
     * Total number of users
     * @type {number}
     * @memberof SystemAnalyticsResponse
     */
    totalUsers: number;
    /**
     * Active users today
     * @type {number}
     * @memberof SystemAnalyticsResponse
     */
    activeUsersToday: number;
    /**
     * Active users this week
     * @type {number}
     * @memberof SystemAnalyticsResponse
     */
    activeUsersWeek: number;
    /**
     * Active users this month
     * @type {number}
     * @memberof SystemAnalyticsResponse
     */
    activeUsersMonth: number;
    /**
     * System uptime in seconds
     * @type {number}
     * @memberof SystemAnalyticsResponse
     */
    systemUptimeSeconds: number;
    /**
     * Average CPU usage percentage
     * @type {number}
     * @memberof SystemAnalyticsResponse
     */
    avgCpuUsage: number;
    /**
     * Average memory usage percentage
     * @type {number}
     * @memberof SystemAnalyticsResponse
     */
    avgMemoryUsage: number;
    /**
     * Current database connections
     * @type {number}
     * @memberof SystemAnalyticsResponse
     */
    databaseConnections: number;
    /**
     * Total API requests
     * @type {number}
     * @memberof SystemAnalyticsResponse
     */
    totalApiRequests: number;
    /**
     * Requests by endpoint
     * @type {{ [key: string]: number; }}
     * @memberof SystemAnalyticsResponse
     */
    requestsPerEndpoint: { [key: string]: number; };
    /**
     * Average API response time
     * @type {number}
     * @memberof SystemAnalyticsResponse
     */
    avgApiResponseTime: number;
    /**
     * API error rate
     * @type {number}
     * @memberof SystemAnalyticsResponse
     */
    apiErrorRate: number;
    /**
     * Total storage usage
     * @type {number}
     * @memberof SystemAnalyticsResponse
     */
    storageUsageBytes: number;
    /**
     * Vector database size
     * @type {number}
     * @memberof SystemAnalyticsResponse
     */
    vectorDatabaseSizeBytes: number;
    /**
     * Cache hit rate
     * @type {number}
     * @memberof SystemAnalyticsResponse
     */
    cacheHitRate: number;
}

/**
 * Check if a given object implements the SystemAnalyticsResponse interface.
 */
export function instanceOfSystemAnalyticsResponse(value: object): value is SystemAnalyticsResponse {
    if (!('totalUsers' in value) || value['totalUsers'] === undefined) return false;
    if (!('activeUsersToday' in value) || value['activeUsersToday'] === undefined) return false;
    if (!('activeUsersWeek' in value) || value['activeUsersWeek'] === undefined) return false;
    if (!('activeUsersMonth' in value) || value['activeUsersMonth'] === undefined) return false;
    if (!('systemUptimeSeconds' in value) || value['systemUptimeSeconds'] === undefined) return false;
    if (!('avgCpuUsage' in value) || value['avgCpuUsage'] === undefined) return false;
    if (!('avgMemoryUsage' in value) || value['avgMemoryUsage'] === undefined) return false;
    if (!('databaseConnections' in value) || value['databaseConnections'] === undefined) return false;
    if (!('totalApiRequests' in value) || value['totalApiRequests'] === undefined) return false;
    if (!('requestsPerEndpoint' in value) || value['requestsPerEndpoint'] === undefined) return false;
    if (!('avgApiResponseTime' in value) || value['avgApiResponseTime'] === undefined) return false;
    if (!('apiErrorRate' in value) || value['apiErrorRate'] === undefined) return false;
    if (!('storageUsageBytes' in value) || value['storageUsageBytes'] === undefined) return false;
    if (!('vectorDatabaseSizeBytes' in value) || value['vectorDatabaseSizeBytes'] === undefined) return false;
    if (!('cacheHitRate' in value) || value['cacheHitRate'] === undefined) return false;
    return true;
}

export function SystemAnalyticsResponseFromJSON(json: any): SystemAnalyticsResponse {
    return SystemAnalyticsResponseFromJSONTyped(json, false);
}

export function SystemAnalyticsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SystemAnalyticsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'totalUsers': json['total_users'],
        'activeUsersToday': json['active_users_today'],
        'activeUsersWeek': json['active_users_week'],
        'activeUsersMonth': json['active_users_month'],
        'systemUptimeSeconds': json['system_uptime_seconds'],
        'avgCpuUsage': json['avg_cpu_usage'],
        'avgMemoryUsage': json['avg_memory_usage'],
        'databaseConnections': json['database_connections'],
        'totalApiRequests': json['total_api_requests'],
        'requestsPerEndpoint': json['requests_per_endpoint'],
        'avgApiResponseTime': json['avg_api_response_time'],
        'apiErrorRate': json['api_error_rate'],
        'storageUsageBytes': json['storage_usage_bytes'],
        'vectorDatabaseSizeBytes': json['vector_database_size_bytes'],
        'cacheHitRate': json['cache_hit_rate'],
    };
}

export function SystemAnalyticsResponseToJSON(json: any): SystemAnalyticsResponse {
    return SystemAnalyticsResponseToJSONTyped(json, false);
}

export function SystemAnalyticsResponseToJSONTyped(value?: SystemAnalyticsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'total_users': value['totalUsers'],
        'active_users_today': value['activeUsersToday'],
        'active_users_week': value['activeUsersWeek'],
        'active_users_month': value['activeUsersMonth'],
        'system_uptime_seconds': value['systemUptimeSeconds'],
        'avg_cpu_usage': value['avgCpuUsage'],
        'avg_memory_usage': value['avgMemoryUsage'],
        'database_connections': value['databaseConnections'],
        'total_api_requests': value['totalApiRequests'],
        'requests_per_endpoint': value['requestsPerEndpoint'],
        'avg_api_response_time': value['avgApiResponseTime'],
        'api_error_rate': value['apiErrorRate'],
        'storage_usage_bytes': value['storageUsageBytes'],
        'vector_database_size_bytes': value['vectorDatabaseSizeBytes'],
        'cache_hit_rate': value['cacheHitRate'],
    };
}

