/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserResponse } from './UserResponse';
import {
    UserResponseFromJSON,
    UserResponseFromJSONTyped,
    UserResponseToJSON,
    UserResponseToJSONTyped,
} from './UserResponse';

/**
 * Schema for authentication token response.
 * @export
 * @interface TokenResponse
 */
export interface TokenResponse {
    /**
     * JWT access token
     * @type {string}
     * @memberof TokenResponse
     */
    accessToken: string;
    /**
     * JWT refresh token
     * @type {string}
     * @memberof TokenResponse
     */
    refreshToken: string;
    /**
     * Token type
     * @type {string}
     * @memberof TokenResponse
     */
    tokenType?: string;
    /**
     * Token expiration time in seconds
     * @type {number}
     * @memberof TokenResponse
     */
    expiresIn: number;
    /**
     * 
     * @type {UserResponse}
     * @memberof TokenResponse
     */
    user: UserResponse;
}

/**
 * Check if a given object implements the TokenResponse interface.
 */
export function instanceOfTokenResponse(value: object): value is TokenResponse {
    if (!('accessToken' in value) || value['accessToken'] === undefined) return false;
    if (!('refreshToken' in value) || value['refreshToken'] === undefined) return false;
    if (!('expiresIn' in value) || value['expiresIn'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    return true;
}

export function TokenResponseFromJSON(json: any): TokenResponse {
    return TokenResponseFromJSONTyped(json, false);
}

export function TokenResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'accessToken': json['access_token'],
        'refreshToken': json['refresh_token'],
        'tokenType': json['token_type'] == null ? undefined : json['token_type'],
        'expiresIn': json['expires_in'],
        'user': UserResponseFromJSON(json['user']),
    };
}

export function TokenResponseToJSON(json: any): TokenResponse {
    return TokenResponseToJSONTyped(json, false);
}

export function TokenResponseToJSONTyped(value?: TokenResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'access_token': value['accessToken'],
        'refresh_token': value['refreshToken'],
        'token_type': value['tokenType'],
        'expires_in': value['expiresIn'],
        'user': UserResponseToJSON(value['user']),
    };
}

