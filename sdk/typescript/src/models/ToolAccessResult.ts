/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ToolAccessLevel } from './ToolAccessLevel';
import {
    ToolAccessLevelFromJSON,
    ToolAccessLevelFromJSONTyped,
    ToolAccessLevelToJSON,
    ToolAccessLevelToJSONTyped,
} from './ToolAccessLevel';

/**
 * Schema for tool access check result.
 * @export
 * @interface ToolAccessResult
 */
export interface ToolAccessResult {
    /**
     * Whether access is allowed
     * @type {boolean}
     * @memberof ToolAccessResult
     */
    allowed: boolean;
    /**
     * 
     * @type {ToolAccessLevel}
     * @memberof ToolAccessResult
     */
    accessLevel: ToolAccessLevel;
    /**
     * 
     * @type {number}
     * @memberof ToolAccessResult
     */
    rateLimitRemainingHour?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ToolAccessResult
     */
    rateLimitRemainingDay?: number | null;
    /**
     * 
     * @type {string}
     * @memberof ToolAccessResult
     */
    restrictionReason?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof ToolAccessResult
     */
    expiresAt?: Date | null;
}



/**
 * Check if a given object implements the ToolAccessResult interface.
 */
export function instanceOfToolAccessResult(value: object): value is ToolAccessResult {
    if (!('allowed' in value) || value['allowed'] === undefined) return false;
    if (!('accessLevel' in value) || value['accessLevel'] === undefined) return false;
    return true;
}

export function ToolAccessResultFromJSON(json: any): ToolAccessResult {
    return ToolAccessResultFromJSONTyped(json, false);
}

export function ToolAccessResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolAccessResult {
    if (json == null) {
        return json;
    }
    return {
        
        'allowed': json['allowed'],
        'accessLevel': ToolAccessLevelFromJSON(json['access_level']),
        'rateLimitRemainingHour': json['rate_limit_remaining_hour'] == null ? undefined : json['rate_limit_remaining_hour'],
        'rateLimitRemainingDay': json['rate_limit_remaining_day'] == null ? undefined : json['rate_limit_remaining_day'],
        'restrictionReason': json['restriction_reason'] == null ? undefined : json['restriction_reason'],
        'expiresAt': json['expires_at'] == null ? undefined : (new Date(json['expires_at'])),
    };
}

export function ToolAccessResultToJSON(json: any): ToolAccessResult {
    return ToolAccessResultToJSONTyped(json, false);
}

export function ToolAccessResultToJSONTyped(value?: ToolAccessResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'allowed': value['allowed'],
        'access_level': ToolAccessLevelToJSON(value['accessLevel']),
        'rate_limit_remaining_hour': value['rateLimitRemainingHour'],
        'rate_limit_remaining_day': value['rateLimitRemainingDay'],
        'restriction_reason': value['restrictionReason'],
        'expires_at': value['expiresAt'] === null ? null : ((value['expiresAt'] as any)?.toISOString()),
    };
}

