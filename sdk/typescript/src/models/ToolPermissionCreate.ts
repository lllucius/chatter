/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ToolAccessLevel } from './ToolAccessLevel';
import {
    ToolAccessLevelFromJSON,
    ToolAccessLevelFromJSONTyped,
    ToolAccessLevelToJSON,
    ToolAccessLevelToJSONTyped,
} from './ToolAccessLevel';

/**
 * Schema for creating tool permissions.
 * @export
 * @interface ToolPermissionCreate
 */
export interface ToolPermissionCreate {
    /**
     * User ID
     * @type {string}
     * @memberof ToolPermissionCreate
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof ToolPermissionCreate
     */
    toolId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ToolPermissionCreate
     */
    serverId?: string | null;
    /**
     * 
     * @type {ToolAccessLevel}
     * @memberof ToolPermissionCreate
     */
    accessLevel: ToolAccessLevel;
    /**
     * 
     * @type {number}
     * @memberof ToolPermissionCreate
     */
    rateLimitPerHour?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ToolPermissionCreate
     */
    rateLimitPerDay?: number | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof ToolPermissionCreate
     */
    allowedHours?: Array<number> | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof ToolPermissionCreate
     */
    allowedDays?: Array<number> | null;
    /**
     * 
     * @type {Date}
     * @memberof ToolPermissionCreate
     */
    expiresAt?: Date | null;
}



/**
 * Check if a given object implements the ToolPermissionCreate interface.
 */
export function instanceOfToolPermissionCreate(value: object): value is ToolPermissionCreate {
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('accessLevel' in value) || value['accessLevel'] === undefined) return false;
    return true;
}

export function ToolPermissionCreateFromJSON(json: any): ToolPermissionCreate {
    return ToolPermissionCreateFromJSONTyped(json, false);
}

export function ToolPermissionCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolPermissionCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['user_id'],
        'toolId': json['tool_id'] == null ? undefined : json['tool_id'],
        'serverId': json['server_id'] == null ? undefined : json['server_id'],
        'accessLevel': ToolAccessLevelFromJSON(json['access_level']),
        'rateLimitPerHour': json['rate_limit_per_hour'] == null ? undefined : json['rate_limit_per_hour'],
        'rateLimitPerDay': json['rate_limit_per_day'] == null ? undefined : json['rate_limit_per_day'],
        'allowedHours': json['allowed_hours'] == null ? undefined : json['allowed_hours'],
        'allowedDays': json['allowed_days'] == null ? undefined : json['allowed_days'],
        'expiresAt': json['expires_at'] == null ? undefined : (new Date(json['expires_at'])),
    };
}

export function ToolPermissionCreateToJSON(json: any): ToolPermissionCreate {
    return ToolPermissionCreateToJSONTyped(json, false);
}

export function ToolPermissionCreateToJSONTyped(value?: ToolPermissionCreate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user_id': value['userId'],
        'tool_id': value['toolId'],
        'server_id': value['serverId'],
        'access_level': ToolAccessLevelToJSON(value['accessLevel']),
        'rate_limit_per_hour': value['rateLimitPerHour'],
        'rate_limit_per_day': value['rateLimitPerDay'],
        'allowed_hours': value['allowedHours'],
        'allowed_days': value['allowedDays'],
        'expires_at': value['expiresAt'] === null ? null : ((value['expiresAt'] as any)?.toISOString()),
    };
}

