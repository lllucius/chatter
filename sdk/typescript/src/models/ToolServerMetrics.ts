/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ServerStatus } from './ServerStatus';
import {
    ServerStatusFromJSON,
    ServerStatusFromJSONTyped,
    ServerStatusToJSON,
    ServerStatusToJSONTyped,
} from './ServerStatus';

/**
 * Schema for tool server metrics.
 * @export
 * @interface ToolServerMetrics
 */
export interface ToolServerMetrics {
    /**
     * Server ID
     * @type {string}
     * @memberof ToolServerMetrics
     */
    serverId: string;
    /**
     * Server name
     * @type {string}
     * @memberof ToolServerMetrics
     */
    serverName: string;
    /**
     * 
     * @type {ServerStatus}
     * @memberof ToolServerMetrics
     */
    status: ServerStatus;
    /**
     * Total number of tools
     * @type {number}
     * @memberof ToolServerMetrics
     */
    totalTools: number;
    /**
     * Number of enabled tools
     * @type {number}
     * @memberof ToolServerMetrics
     */
    enabledTools: number;
    /**
     * Total tool calls
     * @type {number}
     * @memberof ToolServerMetrics
     */
    totalCalls: number;
    /**
     * Total errors
     * @type {number}
     * @memberof ToolServerMetrics
     */
    totalErrors: number;
    /**
     * Success rate
     * @type {number}
     * @memberof ToolServerMetrics
     */
    successRate: number;
    /**
     * 
     * @type {number}
     * @memberof ToolServerMetrics
     */
    avgResponseTimeMs?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof ToolServerMetrics
     */
    lastActivity?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof ToolServerMetrics
     */
    uptimePercentage?: number | null;
}



/**
 * Check if a given object implements the ToolServerMetrics interface.
 */
export function instanceOfToolServerMetrics(value: object): value is ToolServerMetrics {
    if (!('serverId' in value) || value['serverId'] === undefined) return false;
    if (!('serverName' in value) || value['serverName'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('totalTools' in value) || value['totalTools'] === undefined) return false;
    if (!('enabledTools' in value) || value['enabledTools'] === undefined) return false;
    if (!('totalCalls' in value) || value['totalCalls'] === undefined) return false;
    if (!('totalErrors' in value) || value['totalErrors'] === undefined) return false;
    if (!('successRate' in value) || value['successRate'] === undefined) return false;
    return true;
}

export function ToolServerMetricsFromJSON(json: any): ToolServerMetrics {
    return ToolServerMetricsFromJSONTyped(json, false);
}

export function ToolServerMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolServerMetrics {
    if (json == null) {
        return json;
    }
    return {
        
        'serverId': json['server_id'],
        'serverName': json['server_name'],
        'status': ServerStatusFromJSON(json['status']),
        'totalTools': json['total_tools'],
        'enabledTools': json['enabled_tools'],
        'totalCalls': json['total_calls'],
        'totalErrors': json['total_errors'],
        'successRate': json['success_rate'],
        'avgResponseTimeMs': json['avg_response_time_ms'] == null ? undefined : json['avg_response_time_ms'],
        'lastActivity': json['last_activity'] == null ? undefined : (new Date(json['last_activity'])),
        'uptimePercentage': json['uptime_percentage'] == null ? undefined : json['uptime_percentage'],
    };
}

export function ToolServerMetricsToJSON(json: any): ToolServerMetrics {
    return ToolServerMetricsToJSONTyped(json, false);
}

export function ToolServerMetricsToJSONTyped(value?: ToolServerMetrics | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'server_id': value['serverId'],
        'server_name': value['serverName'],
        'status': ServerStatusToJSON(value['status']),
        'total_tools': value['totalTools'],
        'enabled_tools': value['enabledTools'],
        'total_calls': value['totalCalls'],
        'total_errors': value['totalErrors'],
        'success_rate': value['successRate'],
        'avg_response_time_ms': value['avgResponseTimeMs'],
        'last_activity': value['lastActivity'] === null ? null : ((value['lastActivity'] as any)?.toISOString()),
        'uptime_percentage': value['uptimePercentage'],
    };
}

