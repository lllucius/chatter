/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ServerToolResponse } from './ServerToolResponse';
import {
    ServerToolResponseFromJSON,
    ServerToolResponseFromJSONTyped,
    ServerToolResponseToJSON,
    ServerToolResponseToJSONTyped,
} from './ServerToolResponse';
import type { ServerStatus } from './ServerStatus';
import {
    ServerStatusFromJSON,
    ServerStatusFromJSONTyped,
    ServerStatusToJSON,
    ServerStatusToJSONTyped,
} from './ServerStatus';
import type { OAuthConfigSchema } from './OAuthConfigSchema';
import {
    OAuthConfigSchemaFromJSON,
    OAuthConfigSchemaFromJSONTyped,
    OAuthConfigSchemaToJSON,
    OAuthConfigSchemaToJSONTyped,
} from './OAuthConfigSchema';

/**
 * Schema for tool server response.
 * @export
 * @interface ToolServerResponse
 */
export interface ToolServerResponse {
    /**
     * Server name
     * @type {string}
     * @memberof ToolServerResponse
     */
    name: string;
    /**
     * Display name
     * @type {string}
     * @memberof ToolServerResponse
     */
    displayName: string;
    /**
     * 
     * @type {string}
     * @memberof ToolServerResponse
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ToolServerResponse
     */
    baseUrl?: string | null;
    /**
     * Transport type: http, sse, stdio, or websocket
     * @type {string}
     * @memberof ToolServerResponse
     */
    transportType?: string;
    /**
     * 
     * @type {OAuthConfigSchema}
     * @memberof ToolServerResponse
     */
    oauthConfig?: OAuthConfigSchema | null;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ToolServerResponse
     */
    headers?: { [key: string]: string; } | null;
    /**
     * Request timeout in seconds
     * @type {number}
     * @memberof ToolServerResponse
     */
    timeout?: number;
    /**
     * Auto-connect to server on system startup
     * @type {boolean}
     * @memberof ToolServerResponse
     */
    autoStart?: boolean;
    /**
     * Auto-update server capabilities
     * @type {boolean}
     * @memberof ToolServerResponse
     */
    autoUpdate?: boolean;
    /**
     * Maximum consecutive failures before disabling
     * @type {number}
     * @memberof ToolServerResponse
     */
    maxFailures?: number;
    /**
     * Server ID
     * @type {string}
     * @memberof ToolServerResponse
     */
    id: string;
    /**
     * 
     * @type {ServerStatus}
     * @memberof ToolServerResponse
     */
    status: ServerStatus;
    /**
     * Whether server is built-in
     * @type {boolean}
     * @memberof ToolServerResponse
     */
    isBuiltin: boolean;
    /**
     * 
     * @type {Date}
     * @memberof ToolServerResponse
     */
    lastHealthCheck?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof ToolServerResponse
     */
    lastStartupSuccess?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof ToolServerResponse
     */
    lastStartupError?: string | null;
    /**
     * Consecutive failure count
     * @type {number}
     * @memberof ToolServerResponse
     */
    consecutiveFailures: number;
    /**
     * Creation timestamp
     * @type {Date}
     * @memberof ToolServerResponse
     */
    createdAt: Date;
    /**
     * Last update timestamp
     * @type {Date}
     * @memberof ToolServerResponse
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof ToolServerResponse
     */
    createdBy?: string | null;
    /**
     * Server tools
     * @type {Array<ServerToolResponse>}
     * @memberof ToolServerResponse
     */
    tools?: Array<ServerToolResponse>;
}



/**
 * Check if a given object implements the ToolServerResponse interface.
 */
export function instanceOfToolServerResponse(value: object): value is ToolServerResponse {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('isBuiltin' in value) || value['isBuiltin'] === undefined) return false;
    if (!('consecutiveFailures' in value) || value['consecutiveFailures'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function ToolServerResponseFromJSON(json: any): ToolServerResponse {
    return ToolServerResponseFromJSONTyped(json, false);
}

export function ToolServerResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolServerResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'displayName': json['display_name'],
        'description': json['description'] == null ? undefined : json['description'],
        'baseUrl': json['base_url'] == null ? undefined : json['base_url'],
        'transportType': json['transport_type'] == null ? undefined : json['transport_type'],
        'oauthConfig': json['oauth_config'] == null ? undefined : OAuthConfigSchemaFromJSON(json['oauth_config']),
        'headers': json['headers'] == null ? undefined : json['headers'],
        'timeout': json['timeout'] == null ? undefined : json['timeout'],
        'autoStart': json['auto_start'] == null ? undefined : json['auto_start'],
        'autoUpdate': json['auto_update'] == null ? undefined : json['auto_update'],
        'maxFailures': json['max_failures'] == null ? undefined : json['max_failures'],
        'id': json['id'],
        'status': ServerStatusFromJSON(json['status']),
        'isBuiltin': json['is_builtin'],
        'lastHealthCheck': json['last_health_check'] == null ? undefined : (new Date(json['last_health_check'])),
        'lastStartupSuccess': json['last_startup_success'] == null ? undefined : (new Date(json['last_startup_success'])),
        'lastStartupError': json['last_startup_error'] == null ? undefined : json['last_startup_error'],
        'consecutiveFailures': json['consecutive_failures'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'tools': json['tools'] == null ? undefined : ((json['tools'] as Array<any>).map(ServerToolResponseFromJSON)),
    };
}

export function ToolServerResponseToJSON(json: any): ToolServerResponse {
    return ToolServerResponseToJSONTyped(json, false);
}

export function ToolServerResponseToJSONTyped(value?: ToolServerResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'display_name': value['displayName'],
        'description': value['description'],
        'base_url': value['baseUrl'],
        'transport_type': value['transportType'],
        'oauth_config': OAuthConfigSchemaToJSON(value['oauthConfig']),
        'headers': value['headers'],
        'timeout': value['timeout'],
        'auto_start': value['autoStart'],
        'auto_update': value['autoUpdate'],
        'max_failures': value['maxFailures'],
        'id': value['id'],
        'status': ServerStatusToJSON(value['status']),
        'is_builtin': value['isBuiltin'],
        'last_health_check': value['lastHealthCheck'] === null ? null : ((value['lastHealthCheck'] as any)?.toISOString()),
        'last_startup_success': value['lastStartupSuccess'] === null ? null : ((value['lastStartupSuccess'] as any)?.toISOString()),
        'last_startup_error': value['lastStartupError'],
        'consecutive_failures': value['consecutiveFailures'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
        'created_by': value['createdBy'],
        'tools': value['tools'] == null ? undefined : ((value['tools'] as Array<any>).map(ServerToolResponseToJSON)),
    };
}

