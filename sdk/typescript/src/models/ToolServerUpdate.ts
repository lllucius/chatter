/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OAuthConfigSchema } from './OAuthConfigSchema';
import {
    OAuthConfigSchemaFromJSON,
    OAuthConfigSchemaFromJSONTyped,
    OAuthConfigSchemaToJSON,
    OAuthConfigSchemaToJSONTyped,
} from './OAuthConfigSchema';

/**
 * Schema for updating a remote tool server.
 * @export
 * @interface ToolServerUpdate
 */
export interface ToolServerUpdate {
    /**
     * 
     * @type {string}
     * @memberof ToolServerUpdate
     */
    displayName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ToolServerUpdate
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ToolServerUpdate
     */
    baseUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ToolServerUpdate
     */
    transportType?: string | null;
    /**
     * 
     * @type {OAuthConfigSchema}
     * @memberof ToolServerUpdate
     */
    oauthConfig?: OAuthConfigSchema | null;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ToolServerUpdate
     */
    headers?: { [key: string]: string; } | null;
    /**
     * 
     * @type {number}
     * @memberof ToolServerUpdate
     */
    timeout?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof ToolServerUpdate
     */
    autoStart?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof ToolServerUpdate
     */
    autoUpdate?: boolean | null;
    /**
     * 
     * @type {number}
     * @memberof ToolServerUpdate
     */
    maxFailures?: number | null;
}

/**
 * Check if a given object implements the ToolServerUpdate interface.
 */
export function instanceOfToolServerUpdate(value: object): value is ToolServerUpdate {
    return true;
}

export function ToolServerUpdateFromJSON(json: any): ToolServerUpdate {
    return ToolServerUpdateFromJSONTyped(json, false);
}

export function ToolServerUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolServerUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'displayName': json['display_name'] == null ? undefined : json['display_name'],
        'description': json['description'] == null ? undefined : json['description'],
        'baseUrl': json['base_url'] == null ? undefined : json['base_url'],
        'transportType': json['transport_type'] == null ? undefined : json['transport_type'],
        'oauthConfig': json['oauth_config'] == null ? undefined : OAuthConfigSchemaFromJSON(json['oauth_config']),
        'headers': json['headers'] == null ? undefined : json['headers'],
        'timeout': json['timeout'] == null ? undefined : json['timeout'],
        'autoStart': json['auto_start'] == null ? undefined : json['auto_start'],
        'autoUpdate': json['auto_update'] == null ? undefined : json['auto_update'],
        'maxFailures': json['max_failures'] == null ? undefined : json['max_failures'],
    };
}

export function ToolServerUpdateToJSON(json: any): ToolServerUpdate {
    return ToolServerUpdateToJSONTyped(json, false);
}

export function ToolServerUpdateToJSONTyped(value?: ToolServerUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'display_name': value['displayName'],
        'description': value['description'],
        'base_url': value['baseUrl'],
        'transport_type': value['transportType'],
        'oauth_config': OAuthConfigSchemaToJSON(value['oauthConfig']),
        'headers': value['headers'],
        'timeout': value['timeout'],
        'auto_start': value['autoStart'],
        'auto_update': value['autoUpdate'],
        'max_failures': value['maxFailures'],
    };
}

