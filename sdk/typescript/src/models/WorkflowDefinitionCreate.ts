/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkflowEdge } from './WorkflowEdge';
import {
    WorkflowEdgeFromJSON,
    WorkflowEdgeFromJSONTyped,
    WorkflowEdgeToJSON,
    WorkflowEdgeToJSONTyped,
} from './WorkflowEdge';
import type { WorkflowNode } from './WorkflowNode';
import {
    WorkflowNodeFromJSON,
    WorkflowNodeFromJSONTyped,
    WorkflowNodeToJSON,
    WorkflowNodeToJSONTyped,
} from './WorkflowNode';

/**
 * Schema for creating a workflow definition.
 * @export
 * @interface WorkflowDefinitionCreate
 */
export interface WorkflowDefinitionCreate {
    /**
     * Workflow name
     * @type {string}
     * @memberof WorkflowDefinitionCreate
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof WorkflowDefinitionCreate
     */
    description?: string | null;
    /**
     * Workflow nodes
     * @type {Array<WorkflowNode>}
     * @memberof WorkflowDefinitionCreate
     */
    nodes: Array<WorkflowNode>;
    /**
     * Workflow edges
     * @type {Array<WorkflowEdge>}
     * @memberof WorkflowDefinitionCreate
     */
    edges: Array<WorkflowEdge>;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof WorkflowDefinitionCreate
     */
    metadata?: { [key: string]: any; } | null;
    /**
     * Whether workflow is publicly visible
     * @type {boolean}
     * @memberof WorkflowDefinitionCreate
     */
    isPublic?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof WorkflowDefinitionCreate
     */
    tags?: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowDefinitionCreate
     */
    templateId?: string | null;
}

/**
 * Check if a given object implements the WorkflowDefinitionCreate interface.
 */
export function instanceOfWorkflowDefinitionCreate(value: object): value is WorkflowDefinitionCreate {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('nodes' in value) || value['nodes'] === undefined) return false;
    if (!('edges' in value) || value['edges'] === undefined) return false;
    return true;
}

export function WorkflowDefinitionCreateFromJSON(json: any): WorkflowDefinitionCreate {
    return WorkflowDefinitionCreateFromJSONTyped(json, false);
}

export function WorkflowDefinitionCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowDefinitionCreate {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'nodes': ((json['nodes'] as Array<any>).map(WorkflowNodeFromJSON)),
        'edges': ((json['edges'] as Array<any>).map(WorkflowEdgeFromJSON)),
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'isPublic': json['is_public'] == null ? undefined : json['is_public'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'templateId': json['template_id'] == null ? undefined : json['template_id'],
    };
}

export function WorkflowDefinitionCreateToJSON(json: any): WorkflowDefinitionCreate {
    return WorkflowDefinitionCreateToJSONTyped(json, false);
}

export function WorkflowDefinitionCreateToJSONTyped(value?: WorkflowDefinitionCreate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'nodes': ((value['nodes'] as Array<any>).map(WorkflowNodeToJSON)),
        'edges': ((value['edges'] as Array<any>).map(WorkflowEdgeToJSON)),
        'metadata': value['metadata'],
        'is_public': value['isPublic'],
        'tags': value['tags'],
        'template_id': value['templateId'],
    };
}

