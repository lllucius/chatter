/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkflowEdge } from './WorkflowEdge';
import {
    WorkflowEdgeFromJSON,
    WorkflowEdgeFromJSONTyped,
    WorkflowEdgeToJSON,
    WorkflowEdgeToJSONTyped,
} from './WorkflowEdge';
import type { WorkflowNode } from './WorkflowNode';
import {
    WorkflowNodeFromJSON,
    WorkflowNodeFromJSONTyped,
    WorkflowNodeToJSON,
    WorkflowNodeToJSONTyped,
} from './WorkflowNode';

/**
 * Schema for updating a workflow definition.
 * @export
 * @interface WorkflowDefinitionUpdate
 */
export interface WorkflowDefinitionUpdate {
    /**
     * 
     * @type {string}
     * @memberof WorkflowDefinitionUpdate
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowDefinitionUpdate
     */
    description?: string | null;
    /**
     * 
     * @type {Array<WorkflowNode>}
     * @memberof WorkflowDefinitionUpdate
     */
    nodes?: Array<WorkflowNode> | null;
    /**
     * 
     * @type {Array<WorkflowEdge>}
     * @memberof WorkflowDefinitionUpdate
     */
    edges?: Array<WorkflowEdge> | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof WorkflowDefinitionUpdate
     */
    metadata?: { [key: string]: any; } | null;
}

/**
 * Check if a given object implements the WorkflowDefinitionUpdate interface.
 */
export function instanceOfWorkflowDefinitionUpdate(value: object): value is WorkflowDefinitionUpdate {
    return true;
}

export function WorkflowDefinitionUpdateFromJSON(json: any): WorkflowDefinitionUpdate {
    return WorkflowDefinitionUpdateFromJSONTyped(json, false);
}

export function WorkflowDefinitionUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowDefinitionUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'nodes': json['nodes'] == null ? undefined : ((json['nodes'] as Array<any>).map(WorkflowNodeFromJSON)),
        'edges': json['edges'] == null ? undefined : ((json['edges'] as Array<any>).map(WorkflowEdgeFromJSON)),
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
    };
}

export function WorkflowDefinitionUpdateToJSON(json: any): WorkflowDefinitionUpdate {
    return WorkflowDefinitionUpdateToJSONTyped(json, false);
}

export function WorkflowDefinitionUpdateToJSONTyped(value?: WorkflowDefinitionUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'nodes': value['nodes'] == null ? undefined : ((value['nodes'] as Array<any>).map(WorkflowNodeToJSON)),
        'edges': value['edges'] == null ? undefined : ((value['edges'] as Array<any>).map(WorkflowEdgeToJSON)),
        'metadata': value['metadata'],
    };
}

