/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkflowDefinitionResponse } from './WorkflowDefinitionResponse';
import {
    WorkflowDefinitionResponseFromJSON,
    WorkflowDefinitionResponseFromJSONTyped,
    WorkflowDefinitionResponseToJSON,
    WorkflowDefinitionResponseToJSONTyped,
} from './WorkflowDefinitionResponse';

/**
 * Schema for workflow definitions list response.
 * @export
 * @interface WorkflowDefinitionsResponse
 */
export interface WorkflowDefinitionsResponse {
    /**
     * Workflow definitions
     * @type {Array<WorkflowDefinitionResponse>}
     * @memberof WorkflowDefinitionsResponse
     */
    definitions: Array<WorkflowDefinitionResponse>;
    /**
     * Total number of definitions
     * @type {number}
     * @memberof WorkflowDefinitionsResponse
     */
    totalCount: number;
}

/**
 * Check if a given object implements the WorkflowDefinitionsResponse interface.
 */
export function instanceOfWorkflowDefinitionsResponse(value: object): value is WorkflowDefinitionsResponse {
    if (!('definitions' in value) || value['definitions'] === undefined) return false;
    if (!('totalCount' in value) || value['totalCount'] === undefined) return false;
    return true;
}

export function WorkflowDefinitionsResponseFromJSON(json: any): WorkflowDefinitionsResponse {
    return WorkflowDefinitionsResponseFromJSONTyped(json, false);
}

export function WorkflowDefinitionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowDefinitionsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'definitions': ((json['definitions'] as Array<any>).map(WorkflowDefinitionResponseFromJSON)),
        'totalCount': json['total_count'],
    };
}

export function WorkflowDefinitionsResponseToJSON(json: any): WorkflowDefinitionsResponse {
    return WorkflowDefinitionsResponseToJSONTyped(json, false);
}

export function WorkflowDefinitionsResponseToJSONTyped(value?: WorkflowDefinitionsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'definitions': ((value['definitions'] as Array<any>).map(WorkflowDefinitionResponseToJSON)),
        'total_count': value['totalCount'],
    };
}

