/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for workflow execution response.
 * @export
 * @interface WorkflowExecutionResponse
 */
export interface WorkflowExecutionResponse {
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof WorkflowExecutionResponse
     */
    inputData?: { [key: string]: any; } | null;
    /**
     * Execution ID
     * @type {string}
     * @memberof WorkflowExecutionResponse
     */
    id: string;
    /**
     * Workflow definition ID
     * @type {string}
     * @memberof WorkflowExecutionResponse
     */
    definitionId: string;
    /**
     * Owner user ID
     * @type {string}
     * @memberof WorkflowExecutionResponse
     */
    ownerId: string;
    /**
     * Execution status
     * @type {string}
     * @memberof WorkflowExecutionResponse
     */
    status: string;
    /**
     * 
     * @type {Date}
     * @memberof WorkflowExecutionResponse
     */
    startedAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof WorkflowExecutionResponse
     */
    completedAt?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof WorkflowExecutionResponse
     */
    executionTimeMs?: number | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof WorkflowExecutionResponse
     */
    outputData?: { [key: string]: any; } | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowExecutionResponse
     */
    errorMessage?: string | null;
    /**
     * Total tokens used
     * @type {number}
     * @memberof WorkflowExecutionResponse
     */
    tokensUsed?: number;
    /**
     * Total cost
     * @type {number}
     * @memberof WorkflowExecutionResponse
     */
    cost?: number;
    /**
     * 
     * @type {Date}
     * @memberof WorkflowExecutionResponse
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof WorkflowExecutionResponse
     */
    updatedAt?: Date | null;
}

/**
 * Check if a given object implements the WorkflowExecutionResponse interface.
 */
export function instanceOfWorkflowExecutionResponse(value: object): value is WorkflowExecutionResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('definitionId' in value) || value['definitionId'] === undefined) return false;
    if (!('ownerId' in value) || value['ownerId'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function WorkflowExecutionResponseFromJSON(json: any): WorkflowExecutionResponse {
    return WorkflowExecutionResponseFromJSONTyped(json, false);
}

export function WorkflowExecutionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowExecutionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'inputData': json['input_data'] == null ? undefined : json['input_data'],
        'id': json['id'],
        'definitionId': json['definition_id'],
        'ownerId': json['owner_id'],
        'status': json['status'],
        'startedAt': json['started_at'] == null ? undefined : (new Date(json['started_at'])),
        'completedAt': json['completed_at'] == null ? undefined : (new Date(json['completed_at'])),
        'executionTimeMs': json['execution_time_ms'] == null ? undefined : json['execution_time_ms'],
        'outputData': json['output_data'] == null ? undefined : json['output_data'],
        'errorMessage': json['error_message'] == null ? undefined : json['error_message'],
        'tokensUsed': json['tokens_used'] == null ? undefined : json['tokens_used'],
        'cost': json['cost'] == null ? undefined : json['cost'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
    };
}

export function WorkflowExecutionResponseToJSON(json: any): WorkflowExecutionResponse {
    return WorkflowExecutionResponseToJSONTyped(json, false);
}

export function WorkflowExecutionResponseToJSONTyped(value?: WorkflowExecutionResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'input_data': value['inputData'],
        'id': value['id'],
        'definition_id': value['definitionId'],
        'owner_id': value['ownerId'],
        'status': value['status'],
        'started_at': value['startedAt'] === null ? null : ((value['startedAt'] as any)?.toISOString()),
        'completed_at': value['completedAt'] === null ? null : ((value['completedAt'] as any)?.toISOString()),
        'execution_time_ms': value['executionTimeMs'],
        'output_data': value['outputData'],
        'error_message': value['errorMessage'],
        'tokens_used': value['tokensUsed'],
        'cost': value['cost'],
        'created_at': value['createdAt'] === null ? null : ((value['createdAt'] as any)?.toISOString()),
        'updated_at': value['updatedAt'] === null ? null : ((value['updatedAt'] as any)?.toISOString()),
    };
}

