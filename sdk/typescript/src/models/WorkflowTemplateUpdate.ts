/* tslint:disable */
/* eslint-disable */
/**
 * Chatter API
 * Advanced AI Chatbot Backend API Platform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for updating a workflow template.
 * @export
 * @interface WorkflowTemplateUpdate
 */
export interface WorkflowTemplateUpdate {
    /**
     * 
     * @type {string}
     * @memberof WorkflowTemplateUpdate
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowTemplateUpdate
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WorkflowTemplateUpdate
     */
    category?: string | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof WorkflowTemplateUpdate
     */
    defaultParams?: { [key: string]: any; } | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof WorkflowTemplateUpdate
     */
    requiredTools?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof WorkflowTemplateUpdate
     */
    requiredRetrievers?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof WorkflowTemplateUpdate
     */
    tags?: Array<string> | null;
    /**
     * 
     * @type {boolean}
     * @memberof WorkflowTemplateUpdate
     */
    isPublic?: boolean | null;
}

/**
 * Check if a given object implements the WorkflowTemplateUpdate interface.
 */
export function instanceOfWorkflowTemplateUpdate(value: object): value is WorkflowTemplateUpdate {
    return true;
}

export function WorkflowTemplateUpdateFromJSON(json: any): WorkflowTemplateUpdate {
    return WorkflowTemplateUpdateFromJSONTyped(json, false);
}

export function WorkflowTemplateUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowTemplateUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'category': json['category'] == null ? undefined : json['category'],
        'defaultParams': json['default_params'] == null ? undefined : json['default_params'],
        'requiredTools': json['required_tools'] == null ? undefined : json['required_tools'],
        'requiredRetrievers': json['required_retrievers'] == null ? undefined : json['required_retrievers'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'isPublic': json['is_public'] == null ? undefined : json['is_public'],
    };
}

export function WorkflowTemplateUpdateToJSON(json: any): WorkflowTemplateUpdate {
    return WorkflowTemplateUpdateToJSONTyped(json, false);
}

export function WorkflowTemplateUpdateToJSONTyped(value?: WorkflowTemplateUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'category': value['category'],
        'default_params': value['defaultParams'],
        'required_tools': value['requiredTools'],
        'required_retrievers': value['requiredRetrievers'],
        'tags': value['tags'],
        'is_public': value['isPublic'],
    };
}

