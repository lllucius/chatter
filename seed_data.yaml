# Seed Data Configuration
# This file defines the sample data used by the database seeding system

# Development Users (known credentials for development)
development_users:
  - username: "developer"
    email: "dev@example.com"
    full_name: "Development User"
    password: "dev123!"
    bio: "Developer account for testing and development"
    is_superuser: false
    
  - username: "tester"
    email: "test@example.com"
    full_name: "Test User"
    password: "test123!"
    bio: "Quality assurance testing account"
    is_superuser: false
    
  - username: "demo"
    email: "demo@example.com"
    full_name: "Demo User"
    password: "demo123!"
    bio: "Demonstration account for showcasing features"
    is_superuser: false

# Chat Profiles for different use cases
chat_profiles:
  # Basic profiles (included in minimal mode)
  basic:
    - name: "Deterministic/Factual Mode"
      description: "Low temperature profile for factual, consistent responses"
      profile_type: "ANALYTICAL"
      llm_provider: "openai"
      llm_model: "gpt-4"
      temperature: 0.1
      max_tokens: 2048
      top_p: 0.9
      system_prompt: "You are a helpful assistant focused on providing accurate, factual information. Be precise and consistent in your responses."
      
    - name: "Creative Writing Mode"
      description: "High temperature profile for creative and diverse responses"
      profile_type: "CREATIVE"
      llm_provider: "openai"
      llm_model: "gpt-4"
      temperature: 0.9
      max_tokens: 4096
      top_p: 0.95
      system_prompt: "You are a creative writing assistant. Be imaginative, expressive, and help with creative tasks."
      
    - name: "Balanced Mode"
      description: "Balanced temperature for general-purpose conversations"
      profile_type: "CONVERSATIONAL"
      llm_provider: "openai"
      llm_model: "gpt-4"
      temperature: 0.7
      max_tokens: 2048
      top_p: 0.9
      system_prompt: "You are a helpful assistant for general conversations and tasks."

  # Extended profiles (included in demo mode)
  extended:
    - name: "Code Assistant"
      description: "Specialized profile for programming and development tasks"
      profile_type: "ANALYTICAL"
      llm_provider: "openai"
      llm_model: "gpt-4"
      temperature: 0.2
      max_tokens: 4096
      system_prompt: "You are an expert programming assistant. Provide clear, well-commented code examples and technical explanations."
      
    - name: "Research Assistant"
      description: "Profile optimized for research and analysis tasks"
      profile_type: "ANALYTICAL"
      llm_provider: "openai"
      llm_model: "gpt-4"
      temperature: 0.3
      max_tokens: 3072
      system_prompt: "You are a research assistant. Provide thorough, well-sourced information and analysis."
      
    - name: "Educational Tutor"
      description: "Teaching-focused profile with explanatory approach"
      profile_type: "CONVERSATIONAL"
      llm_provider: "openai"
      llm_model: "gpt-4"
      temperature: 0.5
      max_tokens: 2048
      system_prompt: "You are an educational tutor. Explain concepts clearly, ask clarifying questions, and adapt to the student's level."

# Prompt Templates
prompt_templates:
  # Basic templates (included in minimal mode)
  basic:
    - name: "Instruction Task Template"
      description: "Template for giving clear instructions to AI"
      category: "GENERAL"
      content: |
        Please complete the following task with precision and clarity:

        Task: {task}

        Requirements:
        - {requirements}

        Context: {context}

        Please provide a detailed response that addresses all aspects of the task.
      variables: ["task", "requirements", "context"]
      suggested_temperature: 0.3
      suggested_max_tokens: 1000
      
    - name: "Code Review Template"
      description: "Template for code review and analysis"
      category: "CODING"
      content: |
        Please review the following code:

        Language: {language}
        Code:
        ```{language}
        {code}
        ```

        Please analyze:
        1. Code quality and readability
        2. Potential bugs or issues
        3. Performance considerations
        4. Best practices and improvements
        5. Security considerations

        Provide specific, actionable feedback.
      variables: ["language", "code"]
      suggested_temperature: 0.2
      suggested_max_tokens: 1500
      
    - name: "Document Summary Template"
      description: "Template for summarizing documents"
      category: "ANALYTICAL"
      content: |
        Please summarize the following document:

        Document Title: {title}
        Document Type: {type}
        Target Audience: {audience}

        Content:
        {content}

        Please provide:
        1. Executive summary (2-3 sentences)
        2. Key points (3-5 bullet points)
        3. Main conclusions or recommendations
        4. Action items (if applicable)

        Keep the summary {length} and focused on {focus_area}.
      variables: ["title", "type", "audience", "content", "length", "focus_area"]
      suggested_temperature: 0.4
      suggested_max_tokens: 800

  # Extended templates (included in demo mode)
  extended:
    - name: "Meeting Notes Template"
      description: "Template for processing meeting transcripts"
      category: "BUSINESS"
      content: |
        Please process the following meeting transcript:

        Meeting: {meeting_title}
        Date: {date}
        Attendees: {attendees}

        Transcript:
        {transcript}

        Please provide:
        1. Meeting summary
        2. Key decisions made
        3. Action items with owners
        4. Follow-up required
        5. Next steps
      variables: ["meeting_title", "date", "attendees", "transcript"]
      suggested_temperature: 0.3
      suggested_max_tokens: 1200
      
    - name: "Email Response Template"
      description: "Template for drafting professional email responses"
      category: "BUSINESS"
      content: |
        Please draft a professional email response:

        Original Email Subject: {original_subject}
        Sender: {sender}
        Original Message:
        {original_message}

        Response Requirements:
        - Tone: {tone}
        - Key Points to Address: {key_points}
        - Call to Action: {call_to_action}

        Please draft a clear, professional response.
      variables: ["original_subject", "sender", "original_message", "tone", "key_points", "call_to_action"]
      suggested_temperature: 0.5
      suggested_max_tokens: 600
      
    - name: "Data Analysis Template"
      description: "Template for analyzing datasets and generating insights"
      category: "ANALYTICAL"
      content: |
        Please analyze the following dataset:

        Dataset Description: {dataset_description}
        Analysis Goal: {analysis_goal}
        Key Metrics: {key_metrics}

        Data:
        {data}

        Please provide:
        1. Data overview and quality assessment
        2. Key findings and insights
        3. Trends and patterns identified
        4. Recommendations based on analysis
        5. Suggested next steps
      variables: ["dataset_description", "analysis_goal", "key_metrics", "data"]
      suggested_temperature: 0.3
      suggested_max_tokens: 1500

# Sample Conversations
sample_conversations:
  - title: "Welcome Conversation"
    description: "Initial welcome chat introducing platform capabilities"
    messages:
      - role: "USER"
        content: "Hello! Can you help me understand what this platform does?"
      - role: "ASSISTANT"
        content: |
          Welcome to Chatter! I'm an AI assistant built on an advanced platform that supports multiple AI models, document analysis, and intelligent conversations. I can help you with various tasks like:

          üîç **Answering Questions** - Ask me anything and I'll provide helpful responses
          üìÑ **Document Analysis** - Upload documents and I can analyze, summarize, or answer questions about them
          ‚úçÔ∏è **Creative Writing** - Help with writing tasks, brainstorming, and creative projects
          üíª **Code Assistance** - Review code, debug issues, and provide programming help
          üéØ **Task Planning** - Break down complex tasks and provide step-by-step guidance

          What would you like to explore first?
      - role: "USER"
        content: "That sounds great! How do I get started with document analysis?"
      - role: "ASSISTANT"
        content: |
          Getting started with document analysis is easy! Here's how:

          **üì§ Upload Documents**
          1. Use the document upload feature to add your files
          2. Supported formats: PDF, Word, text files, markdown, and more
          3. Files are automatically processed and indexed for search

          **üîç Ask Questions**
          - Once uploaded, you can ask specific questions about your documents
          - Example: "What are the key points in my quarterly report?"
          - I'll search through your documents and provide relevant answers

          **üìä Analysis Features**
          - Document summarization
          - Key concept extraction
          - Cross-document insights
          - Citation tracking

          **üí° Pro Tips**
          - Upload related documents together for better insights
          - Use specific questions for more targeted results
          - Try our document summary templates for consistent analysis

          Would you like to upload a document now, or do you have questions about any specific analysis features?

  - title: "Profile Customization Guide"
    description: "Conversation explaining how to customize AI behavior"
    messages:
      - role: "USER"
        content: "I noticed there are different chat profiles. How do they work?"
      - role: "ASSISTANT"
        content: |
          Great question! Chat profiles let you customize my behavior for different types of tasks. Think of them as different "modes" I can operate in:

          **üéØ Available Profiles:**

          **Deterministic/Factual Mode** (Temperature: 0.1)
          - Best for: Research, fact-checking, technical documentation
          - Behavior: Precise, consistent, focused on accuracy

          **Creative Writing Mode** (Temperature: 0.9)
          - Best for: Brainstorming, creative writing, idea generation
          - Behavior: Imaginative, diverse, experimental approaches

          **Balanced Mode** (Temperature: 0.7)
          - Best for: General conversations, mixed tasks
          - Behavior: Flexible balance of creativity and accuracy

          **üîß Customization Options:**
          - Temperature (creativity vs consistency)
          - Response length limits
          - Specialized system prompts
          - Model selection (GPT-4, Claude, etc.)

          **üí° Usage Tips:**
          - Switch profiles based on your current task
          - Create custom profiles for repeated workflows
          - Combine profiles with prompt templates for powerful automation

          Which type of task are you working on? I can recommend the best profile!
      - role: "USER"
        content: "I'm working on a technical specification document. Which profile would be best?"
      - role: "ASSISTANT"
        content: |
          Perfect! For technical specification documents, I'd recommend the **Deterministic/Factual Mode**. Here's why:

          **‚úÖ Why This Profile Works Best:**
          - **Low temperature (0.1)** ensures consistent, precise language
          - **Analytical focus** aligns with technical requirements
          - **Factual emphasis** reduces creative interpretations
          - **Structured responses** match technical documentation needs

          **üìã Ideal for Technical Specs:**
          - Requirements documentation
          - API specifications
          - System architecture descriptions
          - Technical procedures and protocols
          - Integration guidelines

          **üéØ You might also want to use:**
          - **"Code Review Template"** for technical accuracy
          - **"Document Summary Template"** for executive summaries
          - **Custom prompts** for your specific technical domain

          **üí° Pro Tip:** You can switch between profiles during our conversation! Start with Deterministic mode for the technical content, then switch to Balanced mode if you need help with presentation or stakeholder communication.

          Would you like me to switch to Deterministic mode now, or do you have questions about creating a custom profile for your specific technical domain?

# Sample Documents
sample_documents:
  - filename: "welcome_guide.md"
    title: "Platform Welcome Guide"
    doc_type: "MARKDOWN"
    content: |
      # Welcome to Chatter Platform

      ## Overview
      Chatter is an advanced AI chatbot platform that provides intelligent conversations, document analysis, and customizable AI interactions.

      ## Key Features

      ### ü§ñ Multi-Model Support
      - Work with various AI providers (OpenAI, Anthropic, Google, etc.)
      - Switch between different models based on your needs
      - Automatic fallback and load balancing

      ### üìÑ Document Intelligence
      - Upload and chat with your documents
      - Semantic search across your knowledge base
      - Cross-document insights and analysis
      - Support for multiple file formats

      ### üéØ Custom Profiles
      - Create specialized AI assistants for different tasks
      - Adjust temperature, prompts, and behavior
      - Save and share profile configurations
      - Template library for common use cases

      ### üìù Prompt Templates
      - Pre-built templates for common scenarios
      - Variable substitution for dynamic prompts
      - Community template sharing
      - Custom template creation

      ### üîç Vector Search
      - Advanced semantic search across your knowledge base
      - Multiple embedding models for different domains
      - Dimensional reduction for optimal performance
      - Real-time search and retrieval

      ## Getting Started

      ### 1. Create an Account
      - Sign up with your email address
      - Verify your account via email
      - Set up your profile and preferences

      ### 2. Start a Conversation
      - Begin chatting with the AI immediately
      - Try different conversation styles
      - Experiment with various prompts

      ### 3. Upload Documents
      - Add documents to your knowledge base
      - Supported formats: PDF, Word, text, markdown, and more
      - Documents are automatically processed and indexed

      ### 4. Explore Profiles
      - Try different chat profiles for various tasks
      - Create custom profiles for your workflows
      - Save frequently used configurations

      ### 5. Use Templates
      - Browse the prompt template library
      - Use templates for specific tasks
      - Create and save your own templates

      ## Best Practices

      ### For General Conversations
      - Start with specific questions
      - Provide context when needed
      - Use follow-up questions to drill down

      ### For Document Analysis
      - Upload related documents together
      - Use specific queries for better results
      - Take advantage of cross-document search

      ### For Professional Use
      - Create dedicated profiles for work tasks
      - Use templates for consistent results
      - Organize documents by project or topic

      ## Support and Resources

      ### Documentation
      - API documentation for developers
      - User guides and tutorials
      - Best practices and examples

      ### Community
      - User forums and discussions
      - Template sharing community
      - Feature requests and feedback

      ### Support
      - Help center and FAQ
      - Email support for technical issues
      - Priority support for enterprise users

      ## Security and Privacy

      ### Data Protection
      - End-to-end encryption for sensitive data
      - GDPR and privacy compliance
      - Secure document storage and processing

      ### Access Control
      - User authentication and authorization
      - API key management
      - Audit logging and monitoring

      ### Best Practices
      - Regular security updates
      - Data retention policies
      - Backup and recovery procedures

      Welcome to the future of AI-powered productivity!

  - filename: "api_documentation.md"
    title: "API Documentation Overview"
    doc_type: "MARKDOWN"
    content: |
      # Chatter API Documentation

      ## Overview
      The Chatter API provides programmatic access to all platform features including conversations, document management, profile configuration, and more.

      ## Base URL
      ```
      https://api.chatter.example.com/v1
      ```

      ## Authentication
      All API requests require authentication using JWT tokens or API keys.

      ### JWT Authentication
      ```bash
      curl -H "Authorization: Bearer <your-jwt-token>" \
        https://api.chatter.example.com/v1/conversations
      ```

      ### API Key Authentication
      ```bash
      curl -H "X-API-Key: <your-api-key>" \
        https://api.chatter.example.com/v1/conversations
      ```

      ## Core Endpoints

      ### Authentication
      - `POST /auth/login` - Authenticate user and get JWT token
      - `POST /auth/refresh` - Refresh JWT token
      - `POST /auth/logout` - Logout and invalidate token
      - `POST /auth/register` - Register new user account

      ### Conversations
      - `GET /conversations` - List user conversations
      - `POST /conversations` - Create new conversation
      - `GET /conversations/{id}` - Get specific conversation
      - `DELETE /conversations/{id}` - Delete conversation
      - `POST /conversations/{id}/messages` - Send message

      ### Documents
      - `GET /documents` - List user documents
      - `POST /documents` - Upload new document
      - `GET /documents/{id}` - Get document details
      - `DELETE /documents/{id}` - Delete document
      - `POST /documents/{id}/search` - Search within document

      ### Profiles
      - `GET /profiles` - List chat profiles
      - `POST /profiles` - Create new profile
      - `GET /profiles/{id}` - Get profile details
      - `PUT /profiles/{id}` - Update profile
      - `DELETE /profiles/{id}` - Delete profile

      ### Prompts
      - `GET /prompts` - List prompt templates
      - `POST /prompts` - Create new template
      - `GET /prompts/{id}` - Get template details
      - `PUT /prompts/{id}` - Update template
      - `DELETE /prompts/{id}` - Delete template

      ## Rate Limits
      - **Authenticated users**: 100 requests per minute
      - **Unauthenticated users**: 10 requests per minute
      - **Enterprise users**: 1000 requests per minute

      Rate limit headers are included in all responses:
      ```
      X-RateLimit-Limit: 100
      X-RateLimit-Remaining: 99
      X-RateLimit-Reset: 1640995200
      ```

      ## Error Handling

      ### HTTP Status Codes
      - `200` - Success
      - `201` - Created
      - `400` - Bad Request (validation error)
      - `401` - Unauthorized (invalid credentials)
      - `403` - Forbidden (insufficient permissions)
      - `404` - Not Found
      - `429` - Rate Limited
      - `500` - Internal Server Error

      ### Error Response Format
      ```json
      {
        "error": {
          "code": "VALIDATION_ERROR",
          "message": "Invalid request data",
          "details": {
            "field": "email",
            "issue": "Invalid email format"
          }
        }
      }
      ```

      ## Webhooks
      Configure webhooks to receive real-time notifications about events:

      ### Supported Events
      - `conversation.created` - New conversation started
      - `message.received` - New message in conversation
      - `document.processed` - Document processing completed
      - `profile.updated` - Chat profile modified

      ### Webhook Configuration
      ```bash
      curl -X POST https://api.chatter.example.com/v1/webhooks \
        -H "Authorization: Bearer <token>" \
        -H "Content-Type: application/json" \
        -d '{
          "url": "https://your-app.com/webhooks/chatter",
          "events": ["conversation.created", "message.received"],
          "secret": "your-webhook-secret"
        }'
      ```

      ## SDKs and Libraries

      ### Official SDKs
      - **Python**: `pip install chatter-sdk`
      - **JavaScript/TypeScript**: `npm install @chatter/sdk`
      - **Go**: `go get github.com/chatter/go-sdk`

      ### Community SDKs
      - **Java**: Available on Maven Central
      - **Ruby**: Available as gem
      - **PHP**: Available via Composer

      ## Examples

      ### Start a Conversation
      ```python
      import chatter

      client = chatter.Client(api_key="your-api-key")

      # Create conversation
      conversation = client.conversations.create(
          title="My First Conversation",
          profile_id="profile-123"
      )

      # Send message
      response = client.conversations.send_message(
          conversation.id,
          content="Hello, can you help me with API integration?"
      )

      print(response.content)
      ```

      ### Upload and Search Documents
      ```python
      # Upload document
      document = client.documents.upload(
          file_path="./my-document.pdf",
          title="Project Requirements"
      )

      # Wait for processing
      client.documents.wait_for_processing(document.id)

      # Search document
      results = client.documents.search(
          document.id,
          query="What are the main requirements?"
      )

      for result in results:
          print(f"Match: {result.content}")
      ```

      ## Best Practices

      ### Performance
      - Use pagination for large result sets
      - Implement proper error handling and retry logic
      - Cache frequently accessed data
      - Use webhooks instead of polling for real-time updates

      ### Security
      - Store API keys securely (environment variables, secrets management)
      - Validate webhook signatures
      - Use HTTPS for all API calls
      - Implement proper access controls

      ### Integration
      - Start with small, focused integrations
      - Test thoroughly in development environment
      - Monitor API usage and performance
      - Keep SDKs and libraries up to date

      ## Support
      - **Documentation**: https://docs.chatter.example.com
      - **API Reference**: https://api-docs.chatter.example.com
      - **Community Forum**: https://community.chatter.example.com
      - **Support Email**: api-support@chatter.example.com

# Test Data (for testing mode)
test_data:
  users:
    - username: "testuser1"
      email: "testuser1@test.com"
      password: "testpass1"
      full_name: "Test User One"
      
    - username: "testuser2"
      email: "testuser2@test.com"
      password: "testpass2"
      full_name: "Test User Two"

  # Test conversations with predictable content
  conversations:
    - title: "Test Conversation 1"
      messages:
        - role: "USER"
          content: "This is a test message."
        - role: "ASSISTANT"
          content: "This is a test response."

# Configuration for different environments
environments:
  development:
    create_sample_conversations: true
    create_sample_documents: true
    use_development_passwords: true
    
  production:
    create_sample_conversations: false
    create_sample_documents: false
    use_secure_passwords_only: true
    
  testing:
    create_predictable_data: true
    use_test_credentials: true
    skip_random_generation: true

# Workflow Templates
workflow_templates:
  # Basic templates (included in minimal mode)
  basic:
    - name: "general_chat"
      workflow_type: "plain"
      category: "general"
      description: "General conversation assistant"
      default_params:
        enable_memory: true
        memory_window: 20
        system_message: "You are a helpful, harmless, and honest AI assistant. Engage in natural conversation while being informative and supportive."

    - name: "document_qa"
      workflow_type: "rag"
      category: "research"
      description: "Document question answering with retrieval"
      default_params:
        enable_memory: false  # Each question should be independent
        max_documents: 15
        similarity_threshold: 0.7
        system_message: "You are a document analysis assistant. Answer questions based solely on the provided documents. Be precise and cite specific sections when possible."
      required_retrievers: ["document_store"]

    - name: "code_assistant"
      workflow_type: "tools"
      category: "programming"
      description: "Programming assistant with code tools"
      default_params:
        enable_memory: true
        memory_window: 100
        max_tool_calls: 10
        system_message: "You are an expert programming assistant. Help users with coding tasks, debugging, code review, and software development best practices. Use available tools to execute code, run tests, and access documentation when needed."
      required_tools: ["execute_code", "search_docs", "generate_tests"]

  # Extended templates (included in demo mode)
  extended:
    - name: "customer_support"
      workflow_type: "full"
      category: "customer_support"
      description: "Customer support with knowledge base and tools"
      default_params:
        enable_memory: true
        memory_window: 50
        max_tool_calls: 5
        system_message: "You are a helpful customer support assistant. Use the knowledge base to find relevant information and available tools to help resolve customer issues. Always be polite, professional, and thorough in your responses."
      required_tools: ["search_kb", "create_ticket", "escalate"]
      required_retrievers: ["support_docs"]

    - name: "research_assistant"
      workflow_type: "rag"
      category: "research"
      description: "Research assistant with document retrieval"
      default_params:
        enable_memory: true
        memory_window: 30
        max_documents: 10
        system_message: "You are a research assistant. Use the provided documents to answer questions accurately and thoroughly. Always cite your sources and explain your reasoning. If information is not available in the documents, clearly state this limitation."
      required_retrievers: ["research_docs"]

    - name: "data_analyst"
      workflow_type: "tools"
      category: "data_analysis"
      description: "Data analysis assistant with computation tools"
      default_params:
        enable_memory: true
        memory_window: 50
        max_tool_calls: 15
        system_message: "You are a data analyst assistant. Help users analyze data, create visualizations, and derive insights. Use computational tools to perform calculations and generate charts."
      required_tools: ["execute_python", "create_chart", "analyze_data"]

    - name: "blog_writing_assistant"
      workflow_type: "tools"
      category: "creative"
      description: "Blog writing assistant with research and editing tools"
      default_params:
        enable_memory: true
        memory_window: 40
        max_tool_calls: 8
        system_message: "You are a professional blog writing assistant. Help create engaging, well-researched blog posts with proper structure, compelling headlines, and SEO optimization."
      required_tools: ["web_search", "grammar_check", "seo_analyzer"]

    - name: "meeting_summarizer"
      workflow_type: "rag"
      category: "business"
      description: "Meeting transcript summarizer and action item extractor"
      default_params:
        enable_memory: false
        max_documents: 5
        system_message: "You are a meeting summarizer. Analyze meeting transcripts to create concise summaries, identify key decisions, extract action items, and highlight important discussion points."
      required_retrievers: ["meeting_transcripts"]

    - name: "learning_tutor"
      workflow_type: "full"
      category: "educational"
      description: "Personalized learning tutor with assessment tools"
      default_params:
        enable_memory: true
        memory_window: 100
        max_tool_calls: 12
        system_message: "You are a personalized learning tutor. Adapt your teaching style to the student's needs, provide clear explanations, create practice problems, and track learning progress."
      required_tools: ["create_quiz", "check_answers", "progress_tracker"]
      required_retrievers: ["learning_materials"]

# Production-ready initialization data (from utils/database.py)
# This data should be used for minimal/production seeding modes
production_data:
  # Core prompt templates for production deployment
  prompt_templates:
    - name: "Instruction Task Template"
      description: "A template for giving clear instructions and tasks to the AI"
      category: "GENERAL"
      content: |
        Please complete the following task with precision and clarity:

        Task: {task}

        Requirements:
        - {requirements}

        Context: {context}

        Please provide a detailed response that addresses all aspects of the task.
      variables: ["task", "requirements", "context"]
      examples:
        - input:
            task: "Summarize the quarterly report"
            requirements: "Keep it under 200 words, highlight key metrics"
            context: "Q3 2024 financial data"
          output: "A concise summary focusing on revenue growth, expenses, and key performance indicators from Q3 2024."
      suggested_temperature: 0.3
      suggested_max_tokens: 1000

    - name: "Few-Shot Learning Template"
      description: "Template for providing examples to guide AI responses"
      category: "EDUCATIONAL"
      content: |
        Here are some examples of the desired format:

        Example 1:
        Input: {example1_input}
        Output: {example1_output}

        Example 2:
        Input: {example2_input}
        Output: {example2_output}

        Example 3:
        Input: {example3_input}
        Output: {example3_output}

        Now, please follow the same pattern for:
        Input: {new_input}
        Output:
      variables: ["example1_input", "example1_output", "example2_input", "example2_output", "example3_input", "example3_output", "new_input"]
      suggested_temperature: 0.2
      suggested_max_tokens: 800

    - name: "Chain-of-Thought Reasoning"
      description: "Template to encourage step-by-step logical reasoning"
      category: "ANALYTICAL"
      content: |
        Let's solve this step by step.

        Problem: {problem}

        Step 1: First, let me understand what is being asked.
        {understanding}

        Step 2: Let me identify the key information.
        {key_info}

        Step 3: Let me work through the logic.
        {reasoning_steps}

        Step 4: Let me verify my reasoning.
        {verification}

        Final Answer: {conclusion}
      variables: ["problem", "understanding", "key_info", "reasoning_steps", "verification", "conclusion"]
      suggested_temperature: 0.4
      suggested_max_tokens: 1500

    - name: "Role and Persona Template"
      description: "Template for defining specific roles and personas for the AI"
      category: "CREATIVE"
      content: |
        You are a {role} with {experience} years of experience in {field}.

        Your personality traits:
        - {trait1}
        - {trait2}
        - {trait3}

        Your expertise includes:
        - {expertise1}
        - {expertise2}
        - {expertise3}

        Speaking style: {speaking_style}

        Now, please respond to the following as this character:
        {prompt}
      variables: ["role", "experience", "field", "trait1", "trait2", "trait3", "expertise1", "expertise2", "expertise3", "speaking_style", "prompt"]
      suggested_temperature: 0.8
      suggested_max_tokens: 1200

    - name: "Context and Question Template"
      description: "Template for providing context before asking questions"
      category: "GENERAL"
      content: |
        Context Information:
        {context_background}

        Relevant Details:
        - {detail1}
        - {detail2}
        - {detail3}

        Current Situation:
        {current_situation}

        Question: {question}

        Please provide a comprehensive answer that takes into account all the context provided above.
      variables: ["context_background", "detail1", "detail2", "detail3", "current_situation", "question"]
      suggested_temperature: 0.5
      suggested_max_tokens: 1000

    - name: "Format-Constrained Response"
      description: "Template for responses requiring specific formatting"
      category: "TECHNICAL"
      content: |
        Please respond to the following in the exact format specified:

        Request: {request}

        Format Requirements:
        {format_requirements}

        Output Format:
        {output_format}

        Constraints:
        - {constraint1}
        - {constraint2}
        - {constraint3}

        Please ensure your response strictly follows the specified format.
      variables: ["request", "format_requirements", "output_format", "constraint1", "constraint2", "constraint3"]
      suggested_temperature: 0.1
      suggested_max_tokens: 800

    - name: "Delimited Input Template"
      description: "Template using clear delimiters to separate different input sections"
      category: "TECHNICAL"
      content: |
        Please analyze the following information separated by delimiters:

        ===== MAIN CONTENT =====
        {main_content}

        ===== ADDITIONAL CONTEXT =====
        {additional_context}

        ===== SPECIFIC REQUIREMENTS =====
        {requirements}

        ===== CONSTRAINTS =====
        {constraints}

        ===== END OF INPUT =====

        Based on the delimited sections above, please provide your analysis.
      variables: ["main_content", "additional_context", "requirements", "constraints"]
      suggested_temperature: 0.3
      suggested_max_tokens: 1200

    - name: "Meta Prompt Engineering Pattern"
      description: "Template for prompt engineering and optimization"
      category: "CUSTOM"
      content: |
        Meta-Prompt Engineering Task:

        Objective: {objective}
        Target Audience: {audience}
        Desired Outcome: {outcome}

        Current Prompt Analysis:
        Original Prompt: {original_prompt}

        Improvement Areas:
        1. Clarity: {clarity_issues}
        2. Specificity: {specificity_issues}
        3. Context: {context_issues}

        Enhancement Strategy:
        - {strategy1}
        - {strategy2}
        - {strategy3}

        Please create an improved prompt that addresses these meta-considerations.
      variables: ["objective", "audience", "outcome", "original_prompt", "clarity_issues", "specificity_issues", "context_issues", "strategy1", "strategy2", "strategy3"]
      suggested_temperature: 0.6
      suggested_max_tokens: 1500

  # Core chat profiles for production deployment
  chat_profiles:
    - name: "Deterministic/Factual Mode"
      description: "Low temperature profile for factual, consistent responses"
      profile_type: "ANALYTICAL"
      llm_provider: "openai"
      llm_model: "gpt-4"
      temperature: 0.1
      max_tokens: 2048
      top_p: 0.9
      system_prompt: "You are a factual assistant that provides accurate, consistent, and well-researched information. Focus on objectivity and precision in your responses."
      enable_tools: false
      tags: ["factual", "deterministic", "analytical"]

    - name: "Balanced/Default Mode"
      description: "Balanced settings suitable for general conversation"
      profile_type: "CONVERSATIONAL"
      llm_provider: "openai"
      llm_model: "gpt-4"
      temperature: 0.7
      max_tokens: 4096
      top_p: 1.0
      system_prompt: "You are a helpful, informative, and balanced assistant. Provide thoughtful responses that are both accurate and engaging."
      enable_tools: true
      tags: ["balanced", "default", "conversational"]

    - name: "Creative/Brainstorming Mode"
      description: "High temperature profile for creative and diverse outputs"
      profile_type: "CREATIVE"
      llm_provider: "openai"
      llm_model: "gpt-4"
      temperature: 0.9
      max_tokens: 4096
      top_p: 1.0
      system_prompt: "You are a creative assistant focused on generating innovative ideas, exploring possibilities, and thinking outside the box. Embrace creativity and diverse perspectives."
      enable_tools: true
      tags: ["creative", "brainstorming", "innovative"]

    - name: "Concise/Short-Form Mode"
      description: "Profile optimized for brief, direct responses"
      profile_type: "CONVERSATIONAL"
      llm_provider: "openai"
      llm_model: "gpt-4"
      temperature: 0.5
      max_tokens: 512
      top_p: 0.95
      system_prompt: "You are a concise assistant that provides direct, brief, and to-the-point responses. Avoid unnecessary elaboration while maintaining accuracy and helpfulness."
      enable_tools: false
      tags: ["concise", "brief", "direct"]

    - name: "Exploration/Diverse Mode"
      description: "Profile that encourages diverse perspectives and exploration"
      profile_type: "ANALYTICAL"
      llm_provider: "openai"
      llm_model: "gpt-4"
      temperature: 0.8
      max_tokens: 3072
      top_p: 0.95
      top_k: 50
      system_prompt: "You are an exploratory assistant that considers multiple perspectives, examines different angles, and encourages deep thinking about complex topics."
      enable_tools: true
      tags: ["exploration", "diverse", "multi-perspective"]

    - name: "Step-by-Step Reasoning Mode"
      description: "Profile focused on methodical, logical problem-solving"
      profile_type: "ANALYTICAL"
      llm_provider: "openai"
      llm_model: "gpt-4"
      temperature: 0.3
      max_tokens: 2048
      top_p: 0.9
      system_prompt: "You are a methodical assistant that breaks down complex problems into clear steps, shows your reasoning process, and provides structured solutions."
      enable_tools: true
      tags: ["reasoning", "methodical", "step-by-step"]

  # Core workflow templates for production deployment
  workflow_templates:
    - name: "general_chat"
      workflow_type: "plain"
      category: "general"
      description: "General conversation assistant"
      default_params:
        enable_memory: true
        memory_window: 20
        system_message: "You are a helpful, harmless, and honest AI assistant. Engage in natural conversation while being informative and supportive."

    - name: "document_qa"
      workflow_type: "rag"
      category: "research"
      description: "Document question answering with retrieval"
      default_params:
        enable_memory: false
        max_documents: 15
        similarity_threshold: 0.7
        system_message: "You are a document analysis assistant. Answer questions based solely on the provided documents. Be precise and cite specific sections when possible."
      required_retrievers: ["document_store"]

    - name: "code_assistant"
      workflow_type: "tools"
      category: "programming"
      description: "Programming assistant with code tools"
      default_params:
        enable_memory: true
        memory_window: 100
        max_tool_calls: 10
        system_message: "You are an expert programming assistant. Help users with coding tasks, debugging, code review, and software development best practices. Use available tools to execute code, run tests, and access documentation when needed."
      required_tools: ["execute_code", "search_docs", "generate_tests"]