============================= test session starts ==============================
platform linux -- Python 3.12.11, pytest-8.4.1, pluggy-1.6.0 -- /usr/bin/python3.12
cachedir: .pytest_cache
rootdir: /home/yam/chatter
configfile: pyproject.toml
testpaths: tests
plugins: mock-3.14.1, cov-6.2.1, socket-0.7.0, timeout-2.4.0, anyio-4.9.0, asyncio-1.1.0, langsmith-0.4.21, postgresql-7.0.2
asyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
collecting ... collected 800 items

tests/e2e/test_auth_e2e.py::TestAuthE2E::test_complete_registration_workflow SKIPPED [  0%]
tests/e2e/test_auth_e2e.py::TestAuthE2E::test_complete_login_workflow SKIPPED [  0%]
tests/e2e/test_auth_e2e.py::TestAuthE2E::test_profile_access_workflow SKIPPED [  0%]
tests/e2e/test_auth_e2e.py::TestAuthE2E::test_registration_login_profile_complete_flow SKIPPED [  0%]
tests/e2e/test_auth_e2e.py::TestAuthE2E::test_invalid_credentials_workflow PASSED [  0%]
tests/e2e/test_chat_e2e.py::TestChatE2E::test_complete_chat_conversation_workflow SKIPPED [  0%]
tests/e2e/test_chat_e2e.py::TestChatE2E::test_chat_list_and_retrieval_workflow SKIPPED [  0%]
tests/e2e/test_chat_e2e.py::TestChatE2E::test_chat_message_streaming_workflow SKIPPED [  1%]
tests/e2e/test_chat_e2e.py::TestChatE2E::test_chat_deletion_workflow SKIPPED [  1%]
tests/e2e/test_chat_e2e.py::TestChatE2E::test_multi_user_chat_isolation SKIPPED [  1%]
tests/e2e/test_documents_e2e.py::TestDocumentsE2E::test_complete_document_upload_workflow SKIPPED [  1%]
tests/e2e/test_documents_e2e.py::TestDocumentsE2E::test_document_list_and_search_workflow SKIPPED [  1%]
tests/e2e/test_documents_e2e.py::TestDocumentsE2E::test_document_processing_status_workflow SKIPPED [  1%]
tests/e2e/test_documents_e2e.py::TestDocumentsE2E::test_document_chat_integration_workflow SKIPPED [  1%]
tests/e2e/test_documents_e2e.py::TestDocumentsE2E::test_document_deletion_workflow SKIPPED [  1%]
tests/e2e/test_documents_e2e.py::TestDocumentsE2E::test_large_document_upload_workflow SKIPPED [  2%]
tests/test_ab_testing_integration.py::TestABTestingIntegration::test_ab_test_complete_lifecycle FAILED [  2%]
tests/test_ab_testing_integration.py::TestABTestingIntegration::test_ab_test_list_and_filter FAILED [  2%]
tests/test_ab_testing_integration.py::TestABTestingIntegration::test_ab_test_update_workflow FAILED [  2%]
tests/test_ab_testing_integration.py::TestABTestingIntegration::test_ab_test_metrics_and_performance FAILED [  2%]
tests/test_ab_testing_integration.py::TestABTestingIntegration::test_ab_test_error_scenarios FAILED [  2%]
tests/test_ab_testing_integration.py::TestABTestingIntegration::test_ab_test_state_validation FAILED [  2%]
tests/test_ab_testing_integration.py::TestABTestingIntegration::test_ab_test_concurrent_operations FAILED [  2%]
tests/test_ab_testing_integration.py::TestABTestingIntegration::test_ab_test_data_persistence FAILED [  3%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_create_ab_test_requires_auth FAILED [  3%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_list_ab_tests_requires_auth FAILED [  3%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_get_ab_test_requires_auth FAILED [  3%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_update_ab_test_requires_auth FAILED [  3%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_delete_ab_test_requires_auth FAILED [  3%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_start_ab_test_requires_auth FAILED [  3%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_pause_ab_test_requires_auth FAILED [  3%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_complete_ab_test_requires_auth FAILED [  4%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_get_results_requires_auth FAILED [  4%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_get_metrics_requires_auth FAILED [  4%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_create_ab_test_success FAILED [  4%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_create_ab_test_invalid_data FAILED [  4%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_create_ab_test_invalid_allocation FAILED [  4%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_list_ab_tests_success FAILED [  4%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_get_ab_test_success FAILED [  4%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_get_ab_test_not_found FAILED [  5%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_start_ab_test_success FAILED [  5%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_start_ab_test_invalid_status FAILED [  5%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_delete_running_test_forbidden FAILED [  5%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_access_other_user_test_forbidden FAILED [  5%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_get_results_success FAILED [  5%]
tests/test_ab_testing_unit.py::TestABTestingUnit::test_get_metrics_success FAILED [  5%]
tests/test_agents_integration.py::TestAgentsIntegration::test_agent_complete_lifecycle FAILED [  5%]
tests/test_agents_integration.py::TestAgentsIntegration::test_agents_list_and_filter FAILED [  6%]
tests/test_agents_integration.py::TestAgentsIntegration::test_agent_templates_workflow FAILED [  6%]
tests/test_agents_integration.py::TestAgentsIntegration::test_bulk_agent_operations FAILED [  6%]
tests/test_agents_integration.py::TestAgentsIntegration::test_agent_testing_functionality FAILED [  6%]
tests/test_agents_integration.py::TestAgentsIntegration::test_agent_health_monitoring FAILED [  6%]
tests/test_agents_integration.py::TestAgentsIntegration::test_agent_error_scenarios FAILED [  6%]
tests/test_agents_integration.py::TestAgentsIntegration::test_agent_data_validation FAILED [  6%]
tests/test_agents_integration.py::TestAgentsIntegration::test_concurrent_agent_operations FAILED [  6%]
tests/test_agents_integration.py::TestAgentsIntegration::test_agent_complex_configuration FAILED [  7%]
tests/test_agents_unit.py::TestAgentsUnit::test_create_agent_requires_auth FAILED [  7%]
tests/test_agents_unit.py::TestAgentsUnit::test_list_agents_requires_auth FAILED [  7%]
tests/test_agents_unit.py::TestAgentsUnit::test_get_agent_templates_requires_auth FAILED [  7%]
tests/test_agents_unit.py::TestAgentsUnit::test_get_agent_requires_auth FAILED [  7%]
tests/test_agents_unit.py::TestAgentsUnit::test_update_agent_requires_auth FAILED [  7%]
tests/test_agents_unit.py::TestAgentsUnit::test_delete_agent_requires_auth FAILED [  7%]
tests/test_agents_unit.py::TestAgentsUnit::test_test_agent_requires_auth FAILED [  7%]
tests/test_agents_unit.py::TestAgentsUnit::test_get_agent_health_requires_auth FAILED [  8%]
tests/test_agents_unit.py::TestAgentsUnit::test_bulk_create_agents_requires_auth FAILED [  8%]
tests/test_agents_unit.py::TestAgentsUnit::test_bulk_delete_agents_requires_auth FAILED [  8%]
tests/test_agents_unit.py::TestAgentsUnit::test_create_agent_success FAILED [  8%]
tests/test_agents_unit.py::TestAgentsUnit::test_create_agent_invalid_data FAILED [  8%]
tests/test_agents_unit.py::TestAgentsUnit::test_list_agents_success FAILED [  8%]
tests/test_agents_unit.py::TestAgentsUnit::test_get_agent_templates_success FAILED [  8%]
tests/test_agents_unit.py::TestAgentsUnit::test_get_agent_success FAILED [  8%]
tests/test_agents_unit.py::TestAgentsUnit::test_get_agent_not_found FAILED [  9%]
tests/test_agents_unit.py::TestAgentsUnit::test_update_agent_success FAILED [  9%]
tests/test_agents_unit.py::TestAgentsUnit::test_delete_agent_success FAILED [  9%]
tests/test_agents_unit.py::TestAgentsUnit::test_test_agent_success FAILED [  9%]
tests/test_agents_unit.py::TestAgentsUnit::test_get_agent_health_success FAILED [  9%]
tests/test_agents_unit.py::TestAgentsUnit::test_bulk_create_agents_success FAILED [  9%]
tests/test_agents_unit.py::TestAgentsUnit::test_bulk_delete_agents_success FAILED [  9%]
tests/test_agents_unit.py::TestAgentsUnit::test_agent_service_error_handling FAILED [  9%]
tests/test_agents_unit.py::TestAgentsUnit::test_list_agents_with_filters FAILED [ 10%]
tests/test_agents_unit.py::TestAgentsUnit::test_agent_test_with_invalid_input FAILED [ 10%]
tests/test_analytics_integration.py::TestAnalyticsIntegration::test_analytics_dashboard_workflow FAILED [ 10%]
tests/test_analytics_integration.py::TestAnalyticsIntegration::test_conversation_analytics_workflow FAILED [ 10%]
tests/test_analytics_integration.py::TestAnalyticsIntegration::test_usage_metrics_workflow FAILED [ 10%]
tests/test_analytics_integration.py::TestAnalyticsIntegration::test_performance_metrics_workflow FAILED [ 10%]
tests/test_analytics_integration.py::TestAnalyticsIntegration::test_document_analytics_workflow FAILED [ 10%]
tests/test_analytics_integration.py::TestAnalyticsIntegration::test_system_analytics_workflow FAILED [ 10%]
tests/test_analytics_integration.py::TestAnalyticsIntegration::test_user_analytics_workflow FAILED [ 11%]
tests/test_analytics_integration.py::TestAnalyticsIntegration::test_analytics_export_workflow FAILED [ 11%]
tests/test_analytics_integration.py::TestAnalyticsIntegration::test_analytics_health_check FAILED [ 11%]
tests/test_analytics_integration.py::TestAnalyticsIntegration::test_metrics_summary_workflow ERROR [ 11%]
tests/test_analytics_integration.py::TestAnalyticsIntegration::test_toolserver_analytics_workflow FAILED [ 11%]
tests/test_analytics_integration.py::TestAnalyticsIntegration::test_concurrent_analytics_requests FAILED [ 11%]
tests/test_analytics_integration.py::TestAnalyticsIntegration::test_analytics_data_consistency FAILED [ 11%]
tests/test_analytics_integration.py::TestAnalyticsIntegration::test_analytics_error_handling FAILED [ 11%]
tests/test_analytics_integration.py::TestAnalyticsIntegration::test_analytics_pagination_and_filtering FAILED [ 12%]
tests/test_analytics_integration.py::TestAnalyticsIntegration::test_analytics_response_format_validation FAILED [ 12%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_conversation_stats_requires_auth FAILED [ 12%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_usage_metrics_requires_auth FAILED [ 12%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_performance_metrics_requires_auth FAILED [ 12%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_document_analytics_requires_auth FAILED [ 12%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_system_analytics_requires_auth FAILED [ 12%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_dashboard_requires_auth FAILED [ 12%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_toolserver_analytics_requires_auth FAILED [ 13%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_user_analytics_requires_auth FAILED [ 13%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_export_analytics_requires_auth FAILED [ 13%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_health_requires_auth FAILED [ 13%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_metrics_summary_requires_auth FAILED [ 13%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_conversation_stats_success FAILED [ 13%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_usage_metrics_success FAILED [ 13%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_performance_metrics_success FAILED [ 13%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_document_analytics_success FAILED [ 14%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_system_analytics_success FAILED [ 14%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_dashboard_success FAILED [ 14%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_user_analytics_success FAILED [ 14%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_export_analytics_success FAILED [ 14%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_analytics_service_error_handling FAILED [ 14%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_invalid_user_id_format FAILED [ 14%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_metrics_summary_success FAILED [ 14%]
tests/test_analytics_unit.py::TestAnalyticsUnit::test_get_health_success FAILED [ 15%]
tests/test_api_validation.py::TestWorkflowMapping::test_valid_workflow_types PASSED [ 15%]
tests/test_api_validation.py::TestWorkflowMapping::test_case_insensitive_workflow_types PASSED [ 15%]
tests/test_api_validation.py::TestWorkflowMapping::test_none_workflow_type PASSED [ 15%]
tests/test_api_validation.py::TestWorkflowMapping::test_empty_workflow_type PASSED [ 15%]
tests/test_api_validation.py::TestWorkflowMapping::test_invalid_workflow_type PASSED [ 15%]
tests/test_api_validation.py::TestUUIDValidation::test_valid_uuid PASSED [ 15%]
tests/test_api_validation.py::TestUUIDValidation::test_invalid_uuid_format PASSED [ 15%]
tests/test_api_validation.py::TestUUIDValidation::test_empty_uuid PASSED [ 16%]
tests/test_api_validation.py::TestUUIDValidation::test_none_uuid PASSED  [ 16%]
tests/test_api_validation.py::TestUUIDValidation::test_malformed_uuid PASSED [ 16%]
tests/test_auth_direct.py::TestAuthServiceDirect::test_auth_service_create_user PASSED [ 16%]
tests/test_auth_direct.py::TestAuthServiceDirect::test_auth_service_authenticate PASSED [ 16%]
tests/test_auth_integration.py::TestAuthIntegration::test_complete_user_registration_and_login_flow PASSED [ 16%]
tests/test_auth_integration.py::TestAuthIntegration::test_login_with_email_workflow PASSED [ 16%]
tests/test_auth_integration.py::TestAuthIntegration::test_token_refresh_workflow PASSED [ 16%]
tests/test_auth_integration.py::TestAuthIntegration::test_profile_update_workflow PASSED [ 17%]
tests/test_auth_integration.py::TestAuthIntegration::test_password_change_workflow PASSED [ 17%]
tests/test_auth_integration.py::TestAuthIntegration::test_api_key_workflow FAILED [ 17%]
tests/test_auth_integration.py::TestAuthIntegration::test_logout_workflow PASSED [ 17%]
tests/test_auth_integration.py::TestAuthIntegration::test_account_deactivation_workflow PASSED [ 17%]
tests/test_auth_integration.py::TestAuthIntegration::test_multiple_users_isolation PASSED [ 17%]
tests/test_auth_integration.py::TestAuthIntegration::test_password_reset_workflow PASSED [ 17%]
tests/test_auth_integration.py::TestAuthDatabaseIntegration::test_user_persistence PASSED [ 17%]
tests/test_auth_integration.py::TestAuthDatabaseIntegration::test_user_uniqueness_constraints PASSED [ 18%]
tests/test_auth_integration.py::TestAuthDatabaseIntegration::test_transaction_rollback_on_error PASSED [ 18%]
tests/test_auth_security_comprehensive.py::TestEnhancedPasswordSecurity::test_password_entropy_calculation PASSED [ 18%]
tests/test_auth_security_comprehensive.py::TestEnhancedPasswordSecurity::test_common_password_detection PASSED [ 18%]
tests/test_auth_security_comprehensive.py::TestEnhancedPasswordSecurity::test_keyboard_pattern_detection PASSED [ 18%]
tests/test_auth_security_comprehensive.py::TestEnhancedPasswordSecurity::test_excessive_repetition_detection PASSED [ 18%]
tests/test_auth_security_comprehensive.py::TestEnhancedPasswordSecurity::test_personal_info_in_password PASSED [ 18%]
tests/test_auth_security_comprehensive.py::TestEnhancedPasswordSecurity::test_advanced_password_validation PASSED [ 18%]
tests/test_auth_security_comprehensive.py::TestEnhancedEmailValidation::test_disposable_email_detection PASSED [ 19%]
tests/test_auth_security_comprehensive.py::TestEnhancedEmailValidation::test_email_format_security PASSED [ 19%]
tests/test_auth_security_comprehensive.py::TestEnhancedUsernameValidation::test_prohibited_usernames PASSED [ 19%]
tests/test_auth_security_comprehensive.py::TestEnhancedUsernameValidation::test_username_pattern_security PASSED [ 19%]
tests/test_auth_security_comprehensive.py::TestSecureAPIKeyManagement::test_secure_api_key_generation PASSED [ 19%]
tests/test_auth_security_comprehensive.py::TestSecureAPIKeyManagement::test_api_key_uniqueness PASSED [ 19%]
tests/test_auth_security_comprehensive.py::TestSecureAPIKeyManagement::test_api_key_timing_attack_resistance PASSED [ 19%]
tests/test_auth_security_comprehensive.py::TestAuthServiceSecurity::test_user_creation_security_validation FAILED [ 19%]
tests/test_auth_security_comprehensive.py::TestAuthServiceSecurity::test_password_change_security PASSED [ 20%]
tests/test_auth_security_comprehensive.py::TestAuthServiceSecurity::test_secure_api_key_creation FAILED [ 20%]
tests/test_auth_security_comprehensive.py::TestAuthServiceSecurity::test_authentication_security_logging PASSED [ 20%]
tests/test_auth_security_comprehensive.py::TestTokenSecurityIntegration::test_token_creation_security_claims FAILED [ 20%]
tests/test_auth_security_comprehensive.py::TestTokenSecurityIntegration::test_token_blacklisting PASSED [ 20%]
tests/test_auth_security_comprehensive.py::TestRateLimitingIntegration::test_login_rate_limiting FAILED [ 20%]
tests/test_auth_security_comprehensive.py::TestRateLimitingIntegration::test_registration_rate_limiting PASSED [ 20%]
tests/test_auth_security_comprehensive.py::TestSecurityCompliance::test_password_storage_security PASSED [ 20%]
tests/test_auth_security_comprehensive.py::TestSecurityCompliance::test_sensitive_data_sanitization PASSED [ 21%]
tests/test_auth_security_comprehensive.py::TestSecurityCompliance::test_timing_attack_resistance PASSED [ 21%]
tests/test_auth_security_comprehensive.py::TestSecurityPerformance::test_password_hashing_performance PASSED [ 21%]
tests/test_auth_security_comprehensive.py::TestSecurityPerformance::test_api_key_verification_performance PASSED [ 21%]
tests/test_auth_security_integration.py::TestCompleteAuthSecurityIntegration::test_complete_secure_registration_flow FAILED [ 21%]
tests/test_auth_security_integration.py::TestCompleteAuthSecurityIntegration::test_secure_login_with_monitoring PASSED [ 21%]
tests/test_auth_security_integration.py::TestCompleteAuthSecurityIntegration::test_secure_api_key_management FAILED [ 21%]
tests/test_auth_security_integration.py::TestCompleteAuthSecurityIntegration::test_secure_password_change_flow FAILED [ 21%]
tests/test_auth_security_integration.py::TestCompleteAuthSecurityIntegration::test_token_security_features FAILED [ 22%]
tests/test_auth_security_integration.py::TestCompleteAuthSecurityIntegration::test_security_monitoring_integration SKIPPED [ 22%]
tests/test_auth_security_integration.py::TestCompleteAuthSecurityIntegration::test_password_reset_security_flow PASSED [ 22%]
tests/test_auth_security_integration.py::TestCompleteAuthSecurityIntegration::test_comprehensive_security_validation FAILED [ 22%]
tests/test_auth_security_integration.py::TestSecurityPerformanceIntegration::test_auth_endpoint_performance PASSED [ 22%]
tests/test_auth_security_integration.py::TestSecurityPerformanceIntegration::test_multiple_concurrent_requests FAILED [ 22%]
tests/test_auth_unit.py::TestAuthUnitTests::test_user_registration PASSED [ 22%]
tests/test_auth_unit.py::TestAuthUnitTests::test_user_registration_duplicate_username PASSED [ 22%]
tests/test_auth_unit.py::TestAuthUnitTests::test_user_registration_duplicate_email PASSED [ 23%]
tests/test_auth_unit.py::TestAuthUnitTests::test_user_registration_invalid_data PASSED [ 23%]
tests/test_auth_unit.py::TestAuthUnitTests::test_user_login_success PASSED [ 23%]
tests/test_auth_unit.py::TestAuthUnitTests::test_user_login_with_email PASSED [ 23%]
tests/test_auth_unit.py::TestAuthUnitTests::test_user_login_invalid_credentials PASSED [ 23%]
tests/test_auth_unit.py::TestAuthUnitTests::test_user_login_nonexistent_user PASSED [ 23%]
tests/test_auth_unit.py::TestAuthUnitTests::test_get_current_user FAILED [ 23%]
tests/test_auth_unit.py::TestAuthUnitTests::test_get_current_user_without_auth FAILED [ 23%]
tests/test_auth_unit.py::TestAuthUnitTests::test_get_current_user_invalid_token PASSED [ 24%]
tests/test_auth_unit.py::TestAuthUnitTests::test_token_refresh PASSED    [ 24%]
tests/test_auth_unit.py::TestAuthUnitTests::test_token_refresh_invalid_token PASSED [ 24%]
tests/test_auth_unit.py::TestAuthUnitTests::test_update_profile FAILED   [ 24%]
tests/test_auth_unit.py::TestAuthUnitTests::test_update_profile_without_auth FAILED [ 24%]
tests/test_auth_unit.py::TestAuthUnitTests::test_change_password FAILED  [ 24%]
tests/test_auth_unit.py::TestAuthUnitTests::test_change_password_wrong_current FAILED [ 24%]
tests/test_auth_unit.py::TestAuthUnitTests::test_logout FAILED           [ 24%]
tests/test_auth_unit.py::TestAuthServiceUnit::test_create_user PASSED    [ 25%]
tests/test_auth_unit.py::TestAuthServiceUnit::test_authenticate_user PASSED [ 25%]
tests/test_auth_unit.py::TestAuthServiceUnit::test_authenticate_user_wrong_password PASSED [ 25%]
tests/test_auth_unit.py::TestAuthServiceUnit::test_authenticate_user_nonexistent PASSED [ 25%]
tests/test_auth_unit.py::TestAuthServiceUnit::test_create_tokens PASSED  [ 25%]
tests/test_cli.py::TestAPIClient::test_api_client_init_default_values PASSED [ 25%]
tests/test_cli.py::TestAPIClient::test_api_client_init_custom_values PASSED [ 25%]
tests/test_cli.py::TestAPIClient::test_api_client_close PASSED           [ 25%]
tests/test_cli.py::TestAPIClient::test_get_headers_without_token PASSED  [ 26%]
tests/test_cli.py::TestAPIClient::test_get_headers_with_token PASSED     [ 26%]
tests/test_cli.py::TestAPIClient::test_request_success PASSED            [ 26%]
tests/test_cli.py::TestAPIClient::test_request_no_content_response PASSED [ 26%]
tests/test_cli.py::TestAPIClient::test_request_401_error PASSED          [ 26%]
tests/test_cli.py::TestAPIClient::test_request_403_error PASSED          [ 26%]
tests/test_cli.py::TestAPIClient::test_request_other_http_error PASSED   [ 26%]
tests/test_cli.py::TestAPIClient::test_request_connection_error PASSED   [ 26%]
tests/test_cli.py::TestGetAPIClient::test_get_api_client_from_environment PASSED [ 27%]
tests/test_cli.py::TestGetAPIClient::test_get_api_client_defaults PASSED [ 27%]
tests/test_cli.py::TestCLICommands::test_cli_app_help PASSED             [ 27%]
tests/test_cli.py::TestCLICommands::test_prompts_help PASSED             [ 27%]
tests/test_cli.py::TestCLICommands::test_list_prompts_command PASSED     [ 27%]
tests/test_cli.py::TestCLICommands::test_create_prompt_command PASSED    [ 27%]
tests/test_cli.py::TestCLICommands::test_delete_prompt_command PASSED    [ 27%]
tests/test_cli.py::TestCLICommands::test_health_command PASSED           [ 27%]
tests/test_cli.py::TestCLICommands::test_db_init PASSED                  [ 28%]
tests/test_cli.py::TestCLICommands::test_db_check_command PASSED         [ 28%]
tests/test_cli.py::TestHealthCheck::test_health_check_success PASSED     [ 28%]
tests/test_cli.py::TestHealthCheck::test_health_check_failure PASSED     [ 28%]
tests/test_cli.py::TestDatabaseCommands::test_db_init_success FAILED     [ 28%]
tests/test_cli.py::TestDatabaseCommands::test_db_init_connection_failure FAILED [ 28%]
tests/test_cli.py::TestDatabaseCommands::test_db_init_init_failure FAILED [ 28%]
tests/test_cli.py::TestInteractivePromptCreation::test_interactive_prompt_creation FAILED [ 28%]
tests/test_cli.py::TestOpenAPIGeneration::test_generate_openapi_spec_available PASSED [ 29%]
tests/test_cli.py::TestOpenAPIGeneration::test_export_openapi_json PASSED [ 29%]
tests/test_cli.py::TestOpenAPIGeneration::test_export_openapi_yaml PASSED [ 29%]
tests/test_cli.py::TestCLIIntegration::test_full_prompt_lifecycle FAILED [ 29%]
tests/test_cli.py::TestCLIIntegration::test_cli_error_handling PASSED    [ 29%]
tests/test_cli.py::TestCLIIntegration::test_cli_with_authentication PASSED [ 29%]
tests/test_cli.py::TestCLIIntegration::test_cli_version_information PASSED [ 29%]
tests/test_cli.py::TestCLIErrorScenarios::test_missing_required_options PASSED [ 29%]
tests/test_cli.py::TestCLIErrorScenarios::test_invalid_option_values PASSED [ 30%]
tests/test_cli.py::TestCLIErrorScenarios::test_api_unavailable_scenarios FAILED [ 30%]
tests/test_contract_testing.py::TestContractTesting::test_api_response_schema_validation SKIPPED [ 30%]
tests/test_contract_testing.py::TestContractTesting::test_backward_compatibility SKIPPED [ 30%]
tests/test_contract_testing.py::TestContractTesting::test_error_response_consistency PASSED [ 30%]
tests/test_contract_testing.py::TestContractTesting::test_openapi_specification_compliance PASSED [ 30%]
tests/test_contract_testing.py::TestContractTesting::test_frontend_backend_contract_validation PASSED [ 30%]
tests/test_contract_testing.py::TestContractTesting::test_cors_headers_and_security_compliance PASSED [ 30%]
tests/test_contract_testing.py::TestContractTesting::test_data_consistency_across_services SKIPPED [ 31%]
tests/test_crypto_utils.py::TestSecretManager::test_init_with_key PASSED [ 31%]
tests/test_crypto_utils.py::TestSecretManager::test_init_with_invalid_key PASSED [ 31%]
tests/test_crypto_utils.py::TestSecretManager::test_init_without_key_uses_environment PASSED [ 31%]
tests/test_crypto_utils.py::TestSecretManager::test_init_without_key_derives_from_password PASSED [ 31%]
tests/test_crypto_utils.py::TestSecretManager::test_encrypt_decrypt_string PASSED [ 31%]
tests/test_crypto_utils.py::TestSecretManager::test_encrypt_empty_string PASSED [ 31%]
tests/test_crypto_utils.py::TestSecretManager::test_encrypt_unicode_string PASSED [ 31%]
tests/test_crypto_utils.py::TestSecretManager::test_decrypt_invalid_data_raises_error PASSED [ 32%]
tests/test_crypto_utils.py::TestSecretManager::test_encrypt_with_different_managers_incompatible PASSED [ 32%]
tests/test_crypto_utils.py::TestSecretManager::test_encrypt_dict_with_sensitive_fields PASSED [ 32%]
tests/test_crypto_utils.py::TestSecretManager::test_decrypt_dict_with_encrypted_fields PASSED [ 32%]
tests/test_crypto_utils.py::TestSecretManager::test_encrypt_decrypt_dict_preserves_non_string_values PASSED [ 32%]
tests/test_crypto_utils.py::TestSecretManager::test_encrypt_dict_case_insensitive_field_detection PASSED [ 32%]
tests/test_crypto_utils.py::TestSecretManager::test_decrypt_dict_with_missing_encryption_markers PASSED [ 32%]
tests/test_crypto_utils.py::TestGlobalSecretManager::test_get_secret_manager_singleton PASSED [ 32%]
tests/test_crypto_utils.py::TestGlobalSecretManager::test_encrypt_secret_function PASSED [ 33%]
tests/test_crypto_utils.py::TestGlobalSecretManager::test_decrypt_secret_function PASSED [ 33%]
tests/test_crypto_utils.py::TestCryptoError::test_crypto_error_inheritance PASSED [ 33%]
tests/test_crypto_utils.py::TestSecurityBestPractices::test_encrypted_data_is_not_deterministic PASSED [ 33%]
tests/test_crypto_utils.py::TestSecurityBestPractices::test_key_derivation_with_different_passwords PASSED [ 33%]
tests/test_crypto_utils.py::TestSecurityBestPractices::test_key_derivation_with_different_salts PASSED [ 33%]
tests/test_crypto_utils.py::TestSecurityBestPractices::test_warning_logged_when_using_derived_key PASSED [ 33%]
tests/test_crypto_utils.py::TestCryptoIntegration::test_full_encryption_decryption_workflow PASSED [ 33%]
tests/test_crypto_utils.py::TestCryptoIntegration::test_cross_manager_incompatibility_security PASSED [ 34%]
tests/test_crypto_utils.py::TestCryptoIntegration::test_large_data_encryption PASSED [ 34%]
tests/test_data_management_integration.py::TestDataManagementIntegration::test_export_data_workflow FAILED [ 34%]
tests/test_data_management_integration.py::TestDataManagementIntegration::test_backup_workflow FAILED [ 34%]
tests/test_data_management_integration.py::TestDataManagementIntegration::test_restore_workflow PASSED [ 34%]
tests/test_data_management_integration.py::TestDataManagementIntegration::test_storage_stats_workflow FAILED [ 34%]
tests/test_data_management_integration.py::TestDataManagementIntegration::test_bulk_delete_documents_workflow FAILED [ 34%]
tests/test_data_management_integration.py::TestDataManagementIntegration::test_bulk_delete_conversations_workflow FAILED [ 34%]
tests/test_data_management_integration.py::TestDataManagementIntegration::test_bulk_delete_prompts_workflow FAILED [ 35%]
tests/test_data_management_integration.py::TestDataManagementIntegration::test_data_management_permission_workflow FAILED [ 35%]
tests/test_data_management_integration.py::TestDataManagementIntegration::test_cross_api_data_consistency FAILED [ 35%]
tests/test_data_management_unit.py::TestDataManagementUnit::test_export_data_endpoint_exists FAILED [ 35%]
tests/test_data_management_unit.py::TestDataManagementUnit::test_create_backup_endpoint_exists FAILED [ 35%]
tests/test_data_management_unit.py::TestDataManagementUnit::test_list_backups_endpoint_exists FAILED [ 35%]
tests/test_data_management_unit.py::TestDataManagementUnit::test_restore_data_endpoint_exists FAILED [ 35%]
tests/test_data_management_unit.py::TestDataManagementUnit::test_get_storage_stats_endpoint_exists FAILED [ 35%]
tests/test_data_management_unit.py::TestDataManagementUnit::test_bulk_delete_documents_endpoint_exists FAILED [ 36%]
tests/test_data_management_unit.py::TestDataManagementUnit::test_bulk_delete_conversations_endpoint_exists FAILED [ 36%]
tests/test_data_management_unit.py::TestDataManagementUnit::test_bulk_delete_prompts_endpoint_exists FAILED [ 36%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_user_model_has_required_constraints PASSED [ 36%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_conversation_model_has_required_constraints PASSED [ 36%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_message_model_has_required_constraints PASSED [ 36%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_user_relationships_are_properly_defined PASSED [ 36%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_foreign_key_references_are_valid PASSED [ 36%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_model_fields_match_schema_requirements PASSED [ 37%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_model_indexes_are_properly_defined PASSED [ 37%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_model_enum_fields_are_properly_configured PASSED [ 37%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_json_fields_are_properly_defined PASSED [ 37%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_document_model_has_required_constraints PASSED [ 37%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_document_chunk_model_has_required_constraints PASSED [ 37%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_profile_model_has_required_constraints PASSED [ 37%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_prompt_model_has_required_constraints PASSED [ 37%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_provider_model_has_required_constraints PASSED [ 38%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_model_def_has_required_constraints PASSED [ 38%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_embedding_space_has_required_constraints PASSED [ 38%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_analytics_models_have_required_constraints PASSED [ 38%]
tests/test_database_model_integrity.py::TestDatabaseModelIntegrity::test_toolserver_models_have_required_constraints PASSED [ 38%]
tests/test_database_testing.py::TestDatabaseTesting::test_migration_script_validation SKIPPED [ 38%]
tests/test_database_testing.py::TestDatabaseTesting::test_connection_pooling_behavior SKIPPED [ 38%]
tests/test_database_testing.py::TestDatabaseTesting::test_transaction_rollback_testing PASSED [ 38%]
tests/test_database_testing.py::TestDatabaseTesting::test_index_performance_validation SKIPPED [ 39%]
tests/test_database_testing.py::TestDatabaseTesting::test_foreign_key_constraint_enforcement SKIPPED [ 39%]
tests/test_database_testing.py::TestDatabaseTesting::test_data_integrity_and_consistency SKIPPED [ 39%]
tests/test_database_testing.py::TestDatabaseTesting::test_bulk_operation_performance SKIPPED [ 39%]
tests/test_database_testing.py::TestDatabaseTesting::test_connection_security_and_encryption PASSED [ 39%]
tests/test_database_testing.py::TestDatabaseTesting::test_database_backup_and_recovery_readiness PASSED [ 39%]
tests/test_database_testing.py::TestDatabaseTesting::test_query_performance_optimization SKIPPED [ 39%]
tests/test_database_testing.py::TestDatabaseTesting::test_database_api_integration_consistency PASSED [ 39%]
tests/test_documents_integration.py::TestDocumentsIntegration::test_document_upload_workflow FAILED [ 40%]
tests/test_documents_integration.py::TestDocumentsIntegration::test_document_list_and_search_workflow FAILED [ 40%]
tests/test_documents_integration.py::TestDocumentsIntegration::test_document_crud_workflow FAILED [ 40%]
tests/test_documents_integration.py::TestDocumentsIntegration::test_document_chunks_workflow FAILED [ 40%]
tests/test_documents_integration.py::TestDocumentsIntegration::test_document_processing_workflow FAILED [ 40%]
tests/test_documents_integration.py::TestDocumentsIntegration::test_document_stats_workflow FAILED [ 40%]
tests/test_documents_integration.py::TestDocumentsIntegration::test_document_download_workflow FAILED [ 40%]
tests/test_documents_integration.py::TestDocumentsIntegration::test_document_permission_workflow FAILED [ 40%]
tests/test_documents_unit.py::TestDocumentsUnit::test_upload_document_endpoint_exists FAILED [ 41%]
tests/test_documents_unit.py::TestDocumentsUnit::test_list_documents_endpoint_exists FAILED [ 41%]
tests/test_documents_unit.py::TestDocumentsUnit::test_search_documents_endpoint_exists FAILED [ 41%]
tests/test_documents_unit.py::TestDocumentsUnit::test_get_document_endpoint_exists FAILED [ 41%]
tests/test_documents_unit.py::TestDocumentsUnit::test_delete_document_endpoint_exists FAILED [ 41%]
tests/test_documents_unit.py::TestDocumentsUnit::test_update_document_endpoint_exists FAILED [ 41%]
tests/test_documents_unit.py::TestDocumentsUnit::test_get_document_chunks_endpoint_exists FAILED [ 41%]
tests/test_documents_unit.py::TestDocumentsUnit::test_process_document_endpoint_exists FAILED [ 41%]
tests/test_documents_unit.py::TestDocumentsUnit::test_get_document_stats_endpoint_exists FAILED [ 42%]
tests/test_documents_unit.py::TestDocumentsUnit::test_download_document_endpoint_exists FAILED [ 42%]
tests/test_events_integration.py::TestEventsIntegration::test_events_stream_workflow FAILED [ 42%]
tests/test_events_integration.py::TestEventsIntegration::test_events_stats_real_service FAILED [ 42%]
tests/test_events_integration.py::TestEventsIntegration::test_test_event_end_to_end FAILED [ 42%]
tests/test_events_integration.py::TestEventsIntegration::test_broadcast_test_end_to_end FAILED [ 42%]
tests/test_events_integration.py::TestEventsIntegration::test_multiple_sse_connections FAILED [ 42%]
tests/test_events_integration.py::TestEventsIntegration::test_events_workflow_with_database FAILED [ 42%]
tests/test_events_integration.py::TestEventsIntegration::test_event_validation_integration FAILED [ 43%]
tests/test_events_integration.py::TestEventsIntegration::test_event_data_serialization FAILED [ 43%]
tests/test_events_integration.py::TestEventsIntegration::test_concurrent_event_operations FAILED [ 43%]
tests/test_events_integration.py::TestEventsIntegration::test_sse_connection_cleanup FAILED [ 43%]
tests/test_events_unit.py::TestEventsUnit::test_events_stream_requires_auth FAILED [ 43%]
tests/test_events_unit.py::TestEventsUnit::test_admin_stream_requires_auth FAILED [ 43%]
tests/test_events_unit.py::TestEventsUnit::test_events_stats_requires_auth FAILED [ 43%]
tests/test_events_unit.py::TestEventsUnit::test_test_event_requires_auth FAILED [ 43%]
tests/test_events_unit.py::TestEventsUnit::test_broadcast_test_requires_auth FAILED [ 44%]
tests/test_events_unit.py::TestEventsUnit::test_events_stats_success FAILED [ 44%]
tests/test_events_unit.py::TestEventsUnit::test_test_event_success FAILED [ 44%]
tests/test_events_unit.py::TestEventsUnit::test_broadcast_test_success FAILED [ 44%]
tests/test_events_unit.py::TestEventsUnit::test_test_event_invalid_data FAILED [ 44%]
tests/test_events_unit.py::TestEventsUnit::test_broadcast_test_invalid_data FAILED [ 44%]
tests/test_events_unit.py::TestEventsUnit::test_events_stream_rate_limit FAILED [ 44%]
tests/test_events_unit.py::TestEventsUnit::test_events_stream_connection_limit FAILED [ 44%]
tests/test_events_unit.py::TestEventsUnit::test_events_stream_connection_not_found FAILED [ 45%]
tests/test_events_unit.py::TestEventsUnit::test_admin_stream_requires_admin FAILED [ 45%]
tests/test_events_unit.py::TestEventsUnit::test_events_stats_sse_service_error FAILED [ 45%]
tests/test_events_unit.py::TestEventsUnit::test_test_event_sse_service_error FAILED [ 45%]
tests/test_events_unit.py::TestEventsUnit::test_broadcast_test_sse_service_error FAILED [ 45%]
tests/test_health_integration.py::TestHealthIntegration::test_readiness_check_with_database PASSED [ 45%]
tests/test_health_integration.py::TestHealthIntegration::test_readiness_check_database_timeout PASSED [ 45%]
tests/test_health_integration.py::TestHealthIntegration::test_readiness_check_database_error PASSED [ 45%]
tests/test_health_integration.py::TestHealthIntegration::test_health_endpoints_response_consistency PASSED [ 46%]
tests/test_health_integration.py::TestHealthIntegration::test_readiness_check_performance PASSED [ 46%]
tests/test_health_integration.py::TestHealthIntegration::test_correlation_trace_nonexistent_id PASSED [ 46%]
tests/test_health_integration.py::TestHealthIntegration::test_metrics_endpoint_structure PASSED [ 46%]
tests/test_health_integration.py::TestHealthIntegration::test_multiple_readiness_checks_isolation PASSED [ 46%]
tests/test_health_integration.py::TestHealthIntegration::test_health_endpoints_concurrent_access PASSED [ 46%]
tests/test_health_unit.py::TestHealthUnit::test_health_check_endpoint PASSED [ 46%]
tests/test_health_unit.py::TestHealthUnit::test_liveness_check_endpoint PASSED [ 46%]
tests/test_health_unit.py::TestHealthUnit::test_health_and_liveness_different_status PASSED [ 47%]
tests/test_health_unit.py::TestHealthUnit::test_metrics_endpoint_without_monitoring PASSED [ 47%]
tests/test_health_unit.py::TestHealthUnit::test_correlation_trace_without_monitoring PASSED [ 47%]
tests/test_health_unit.py::TestHealthUnit::test_metrics_endpoint_with_monitoring_success FAILED [ 47%]
tests/test_health_unit.py::TestHealthUnit::test_metrics_endpoint_with_monitoring_error PASSED [ 47%]
tests/test_health_unit.py::TestHealthUnit::test_correlation_trace_with_monitoring_success FAILED [ 47%]
tests/test_health_unit.py::TestHealthUnit::test_correlation_trace_with_monitoring_error FAILED [ 47%]
tests/test_health_unit.py::TestHealthUnit::test_metrics_timestamp_format PASSED [ 47%]
tests/test_infrastructure.py::TestInfrastructureValidation::test_pytest_is_working PASSED [ 48%]
tests/test_infrastructure.py::TestInfrastructureValidation::test_unit_marker_works PASSED [ 48%]
tests/test_infrastructure.py::TestInfrastructureValidation::test_integration_marker_works PASSED [ 48%]
tests/test_infrastructure.py::TestInfrastructureValidation::test_test_data_fixture PASSED [ 48%]
tests/test_infrastructure.py::TestInfrastructureValidation::test_test_login_data_fixture PASSED [ 48%]
tests/test_infrastructure.py::TestInfrastructureValidation::test_async_test_support PASSED [ 48%]
tests/test_infrastructure.py::TestDatabaseFixtures::test_db_session_fixture PASSED [ 48%]
tests/test_infrastructure.py::TestDatabaseFixtures::test_app_fixture PASSED [ 48%]
tests/test_infrastructure.py::TestDatabaseFixtures::test_client_fixture PASSED [ 49%]
tests/test_integration_workflows.py::TestIntegrationWorkflows::test_document_to_chat_workflow SKIPPED [ 49%]
tests/test_integration_workflows.py::TestIntegrationWorkflows::test_user_agent_interaction_workflows SKIPPED [ 49%]
tests/test_integration_workflows.py::TestIntegrationWorkflows::test_analytics_across_multiple_services SKIPPED [ 49%]
tests/test_integration_workflows.py::TestIntegrationWorkflows::test_external_service_integration PASSED [ 49%]
tests/test_integration_workflows.py::TestIntegrationWorkflows::test_cache_service_integration SKIPPED [ 49%]
tests/test_integration_workflows.py::TestIntegrationWorkflows::test_error_propagation_and_recovery SKIPPED [ 49%]
tests/test_integration_workflows.py::TestIntegrationWorkflows::test_service_dependencies_and_graceful_degradation PASSED [ 49%]
tests/test_jobs_integration.py::TestJobsIntegration::test_job_complete_lifecycle FAILED [ 50%]
tests/test_jobs_integration.py::TestJobsIntegration::test_job_listing_and_filtering FAILED [ 50%]
tests/test_jobs_integration.py::TestJobsIntegration::test_job_cancellation_workflow FAILED [ 50%]
tests/test_jobs_integration.py::TestJobsIntegration::test_job_error_scenarios FAILED [ 50%]
tests/test_jobs_integration.py::TestJobsIntegration::test_job_validation_scenarios FAILED [ 50%]
tests/test_jobs_integration.py::TestJobsIntegration::test_job_stats_accuracy FAILED [ 50%]
tests/test_jobs_integration.py::TestJobsIntegration::test_job_cleanup_functionality FAILED [ 50%]
tests/test_jobs_integration.py::TestJobsIntegration::test_concurrent_job_operations FAILED [ 50%]
tests/test_jobs_integration.py::TestJobsIntegration::test_job_data_persistence FAILED [ 51%]
tests/test_jobs_unit.py::TestJobsUnit::test_create_job_requires_auth FAILED [ 51%]
tests/test_jobs_unit.py::TestJobsUnit::test_list_jobs_requires_auth FAILED [ 51%]
tests/test_jobs_unit.py::TestJobsUnit::test_get_job_requires_auth FAILED [ 51%]
tests/test_jobs_unit.py::TestJobsUnit::test_cancel_job_requires_auth FAILED [ 51%]
tests/test_jobs_unit.py::TestJobsUnit::test_get_job_stats_requires_auth FAILED [ 51%]
tests/test_jobs_unit.py::TestJobsUnit::test_cleanup_jobs_requires_auth FAILED [ 51%]
tests/test_jobs_unit.py::TestJobsUnit::test_create_job_success FAILED    [ 51%]
tests/test_jobs_unit.py::TestJobsUnit::test_create_job_invalid_function FAILED [ 52%]
tests/test_jobs_unit.py::TestJobsUnit::test_create_job_invalid_data FAILED [ 52%]
tests/test_jobs_unit.py::TestJobsUnit::test_list_jobs_success FAILED     [ 52%]
tests/test_jobs_unit.py::TestJobsUnit::test_list_jobs_with_filters FAILED [ 52%]
tests/test_jobs_unit.py::TestJobsUnit::test_get_job_success FAILED       [ 52%]
tests/test_jobs_unit.py::TestJobsUnit::test_get_job_not_found FAILED     [ 52%]
tests/test_jobs_unit.py::TestJobsUnit::test_get_job_invalid_id_format FAILED [ 52%]
tests/test_jobs_unit.py::TestJobsUnit::test_cancel_job_success FAILED    [ 52%]
tests/test_jobs_unit.py::TestJobsUnit::test_cancel_job_not_found FAILED  [ 53%]
tests/test_jobs_unit.py::TestJobsUnit::test_cancel_job_invalid_id_format FAILED [ 53%]
tests/test_jobs_unit.py::TestJobsUnit::test_get_job_stats_success FAILED [ 53%]
tests/test_jobs_unit.py::TestJobsUnit::test_cleanup_jobs_success FAILED  [ 53%]
tests/test_jobs_unit.py::TestJobsUnit::test_job_queue_error_handling FAILED [ 53%]
tests/test_jobs_unit.py::TestJobsUnit::test_list_jobs_pagination FAILED  [ 53%]
tests/test_mcp_service.py::TestOAuthConfig::test_oauth_config_creation PASSED [ 53%]
tests/test_mcp_service.py::TestOAuthConfig::test_oauth_config_with_optional_fields PASSED [ 53%]
tests/test_mcp_service.py::TestRemoteMCPServer::test_remote_server_creation PASSED [ 54%]
tests/test_mcp_service.py::TestRemoteMCPServer::test_remote_server_with_oauth PASSED [ 54%]
tests/test_mcp_service.py::TestMCPToolService::test_service_initialization PASSED [ 54%]
tests/test_mcp_service.py::TestMCPToolService::test_get_client PASSED    [ 54%]
tests/test_mcp_service.py::TestMCPToolService::test_validate_server_config_valid PASSED [ 54%]
tests/test_mcp_service.py::TestMCPToolService::test_validate_server_config_empty_name PASSED [ 54%]
tests/test_mcp_service.py::TestMCPToolService::test_validate_server_config_invalid_transport PASSED [ 54%]
tests/test_mcp_service.py::TestMCPToolService::test_is_server_healthy PASSED [ 54%]
tests/test_mcp_service.py::TestMCPToolService::test_retry_with_backoff_success_first_try PASSED [ 55%]
tests/test_mcp_service.py::TestMCPToolService::test_retry_with_backoff_success_after_retries PASSED [ 55%]
tests/test_mcp_service.py::TestMCPToolService::test_retry_with_backoff_all_retries_fail PASSED [ 55%]
tests/test_mcp_service.py::TestMCPToolService::test_retry_with_backoff_circuit_breaker PASSED [ 55%]
tests/test_mcp_service.py::TestMCPToolService::test_add_server_success FAILED [ 55%]
tests/test_mcp_service.py::TestMCPToolService::test_add_server_disabled_service FAILED [ 55%]
tests/test_mcp_service.py::TestMCPToolService::test_add_server_validation_error FAILED [ 55%]
tests/test_mcp_service.py::TestMCPToolService::test_remove_server_success PASSED [ 55%]
tests/test_mcp_service.py::TestMCPToolService::test_remove_nonexistent_server PASSED [ 56%]
tests/test_mcp_service.py::TestMCPToolService::test_discover_tools_success PASSED [ 56%]
tests/test_mcp_service.py::TestMCPToolService::test_discover_tools_disabled_service PASSED [ 56%]
tests/test_mcp_service.py::TestMCPToolService::test_discover_tools_nonexistent_server PASSED [ 56%]
tests/test_mcp_service.py::TestMCPToolService::test_discover_tools_unhealthy_server PASSED [ 56%]
tests/test_mcp_service.py::TestMCPToolService::test_get_tools_all_servers PASSED [ 56%]
tests/test_mcp_service.py::TestMCPToolService::test_get_tools_specific_servers PASSED [ 56%]
tests/test_mcp_service.py::TestMCPToolService::test_get_tools_disabled_service PASSED [ 56%]
tests/test_mcp_service.py::TestMCPToolService::test_call_tool_success FAILED [ 57%]
tests/test_mcp_service.py::TestMCPToolService::test_call_tool_disabled_service FAILED [ 57%]
tests/test_mcp_service.py::TestMCPToolService::test_list_servers FAILED  [ 57%]
tests/test_mcp_service.py::TestMCPToolService::test_get_server_info FAILED [ 57%]
tests/test_mcp_service.py::TestMCPToolService::test_get_server_info_nonexistent FAILED [ 57%]
tests/test_mcp_service.py::TestMCPToolService::test_authenticate_oauth_not_implemented PASSED [ 57%]
tests/test_mcp_service.py::TestMCPToolService::test_convert_server_to_connection_http PASSED [ 57%]
tests/test_mcp_service.py::TestMCPServiceIntegration::test_server_lifecycle FAILED [ 57%]
tests/test_mcp_service.py::TestMCPServiceIntegration::test_multiple_servers_management FAILED [ 58%]
tests/test_mcp_service.py::TestMCPServiceIntegration::test_error_recovery_scenarios FAILED [ 58%]
tests/test_mcp_service.py::TestMCPServiceError::test_mcp_service_error_creation PASSED [ 58%]
tests/test_mcp_service.py::TestMCPServiceError::test_mcp_service_error_with_cause PASSED [ 58%]
tests/test_middleware.py::TestSecurityHeadersMiddleware::test_security_headers_added PASSED [ 58%]
tests/test_middleware.py::TestSecurityHeadersMiddleware::test_content_security_policy_header PASSED [ 58%]
tests/test_middleware.py::TestSecurityHeadersMiddleware::test_x_frame_options_header PASSED [ 58%]
tests/test_middleware.py::TestSecurityHeadersMiddleware::test_x_content_type_options_header PASSED [ 58%]
tests/test_middleware.py::TestSecurityHeadersMiddleware::test_x_xss_protection_header PASSED [ 59%]
tests/test_middleware.py::TestSecurityHeadersMiddleware::test_referrer_policy_header PASSED [ 59%]
tests/test_middleware.py::TestSecurityHeadersMiddleware::test_permissions_policy_header PASSED [ 59%]
tests/test_middleware.py::TestSecurityHeadersMiddleware::test_strict_transport_security_enabled FAILED [ 59%]
tests/test_middleware.py::TestSecurityHeadersMiddleware::test_strict_transport_security_disabled PASSED [ 59%]
tests/test_middleware.py::TestSecurityHeadersMiddleware::test_security_headers_on_different_response_types PASSED [ 59%]
tests/test_middleware.py::TestSecurityHeadersMiddleware::test_security_headers_dont_override_existing FAILED [ 59%]
tests/test_middleware.py::TestAuthRateLimitMiddleware::test_middleware_initialization PASSED [ 59%]
tests/test_middleware.py::TestAuthRateLimitMiddleware::test_rate_limit_configuration PASSED [ 60%]
tests/test_middleware.py::TestAuthRateLimitMiddleware::test_login_endpoint_rate_limiting FAILED [ 60%]
tests/test_middleware.py::TestAuthRateLimitMiddleware::test_register_endpoint_rate_limiting FAILED [ 60%]
tests/test_middleware.py::TestAuthRateLimitMiddleware::test_password_reset_endpoint_rate_limiting FAILED [ 60%]
tests/test_middleware.py::TestAuthRateLimitMiddleware::test_non_auth_endpoint_not_rate_limited PASSED [ 60%]
tests/test_middleware.py::TestAuthRateLimitMiddleware::test_rate_limit_allowed_request PASSED [ 60%]
tests/test_middleware.py::TestAuthRateLimitMiddleware::test_client_ip_identification FAILED [ 60%]
tests/test_middleware.py::TestAuthRateLimitMiddleware::test_rate_limit_with_user_agent_tracking FAILED [ 60%]
tests/test_middleware.py::TestAuthRateLimitMiddleware::test_rate_limit_error_handling PASSED [ 61%]
tests/test_middleware.py::TestAuthRateLimitMiddleware::test_different_auth_endpoints_have_different_limits PASSED [ 61%]
tests/test_middleware.py::TestAuthRateLimitMiddleware::test_get_client_ip_x_forwarded_for PASSED [ 61%]
tests/test_middleware.py::TestAuthRateLimitMiddleware::test_get_client_ip_x_real_ip PASSED [ 61%]
tests/test_middleware.py::TestAuthRateLimitMiddleware::test_get_client_ip_fallback PASSED [ 61%]
tests/test_middleware.py::TestMiddlewareIntegration::test_both_middleware_applied FAILED [ 61%]
tests/test_middleware.py::TestMiddlewareIntegration::test_security_headers_on_rate_limited_response FAILED [ 61%]
tests/test_middleware.py::TestMiddlewareIntegration::test_non_auth_endpoints_only_security_headers PASSED [ 61%]
tests/test_middleware.py::TestMiddlewareIntegration::test_middleware_order_matters FAILED [ 62%]
tests/test_middleware.py::TestMiddlewareIntegration::test_middleware_performance PASSED [ 62%]
tests/test_middleware.py::TestMiddlewareEdgeCases::test_security_middleware_with_exception PASSED [ 62%]
tests/test_middleware.py::TestMiddlewareEdgeCases::test_empty_app_with_middleware PASSED [ 62%]
tests/test_middleware.py::TestMiddlewareEdgeCases::test_rate_limit_middleware_with_none_client PASSED [ 62%]
tests/test_model_registry_fixes.py::TestDefaultProviderLogic::test_set_default_provider_with_model_type PASSED [ 62%]
tests/test_model_registry_fixes.py::TestDefaultProviderLogic::test_set_default_provider_without_models_fails PASSED [ 62%]
tests/test_model_registry_fixes.py::TestDefaultProviderLogic::test_set_default_provider_nonexistent_fails PASSED [ 62%]
tests/test_model_registry_fixes.py::TestDefaultProviderLogic::test_get_default_provider_by_model_type PASSED [ 63%]
tests/test_model_registry_fixes.py::TestValidationImprovements::test_create_model_validates_provider_exists PASSED [ 63%]
tests/test_model_registry_fixes.py::TestValidationImprovements::test_create_model_validates_provider_active PASSED [ 63%]
tests/test_model_registry_fixes.py::TestValidationImprovements::test_create_embedding_space_validates_model_exists PASSED [ 63%]
tests/test_model_registry_fixes.py::TestValidationImprovements::test_create_embedding_space_validates_model_type PASSED [ 63%]
tests/test_model_registry_fixes.py::TestValidationImprovements::test_create_embedding_space_validates_model_active PASSED [ 63%]
tests/test_model_registry_fixes.py::TestValidationImprovements::test_create_embedding_space_validates_dimensions PASSED [ 63%]
tests/test_model_registry_fixes.py::TestBusinessLogicImprovements::test_set_default_provider_sets_model_default PASSED [ 63%]
tests/test_model_registry_fixes.py::TestBusinessLogicImprovements::test_multiple_providers_different_model_types PASSED [ 64%]
tests/test_model_registry_fixes.py::TestTransactionManagement::test_create_model_transaction_rollback_on_error FAILED [ 64%]
tests/test_model_registry_validation.py::TestModelValidation::test_validate_model_consistency_embedding_without_dimensions PASSED [ 64%]
tests/test_model_registry_validation.py::TestModelValidation::test_validate_model_consistency_llm_with_dimensions PASSED [ 64%]
tests/test_model_registry_validation.py::TestModelValidation::test_validate_model_consistency_negative_max_tokens PASSED [ 64%]
tests/test_model_registry_validation.py::TestModelValidation::test_validate_model_consistency_batch_settings_conflict PASSED [ 64%]
tests/test_model_registry_validation.py::TestModelValidation::test_validate_model_consistency_valid_embedding_model PASSED [ 64%]
tests/test_model_registry_validation.py::TestModelValidation::test_validate_model_consistency_valid_llm_model PASSED [ 64%]
tests/test_model_registry_validation.py::TestValidationErrorMessages::test_validation_error_contains_helpful_context PASSED [ 65%]
tests/test_model_registry_validation.py::TestValidationErrorMessages::test_validation_error_is_exception PASSED [ 65%]
tests/test_model_registry_validation.py::TestBusinessLogicValidation::test_dimension_mismatch_error_message PASSED [ 65%]
tests/test_model_registry_validation.py::TestBusinessLogicValidation::test_provider_model_type_mismatch_error PASSED [ 65%]
tests/test_performance.py::TestPerformance::test_authentication_endpoint_performance PASSED [ 65%]
tests/test_performance.py::TestPerformance::test_chat_message_processing_benchmarks SKIPPED [ 65%]
tests/test_performance.py::TestPerformance::test_document_upload_performance_validation SKIPPED [ 65%]
tests/test_performance.py::TestPerformance::test_concurrent_request_handling PASSED [ 65%]
tests/test_performance.py::TestPerformance::test_memory_usage_and_leak_detection SKIPPED [ 66%]
tests/test_performance.py::TestPerformance::test_database_query_optimization SKIPPED [ 66%]
tests/test_performance.py::TestPerformance::test_sustained_load_performance PASSED [ 66%]
tests/test_performance.py::TestPerformance::test_response_time_consistency PASSED [ 66%]
tests/test_plugins.py::TestBasePlugin::test_base_plugin_initialization PASSED [ 66%]
tests/test_plugins.py::TestBasePlugin::test_base_plugin_default_config PASSED [ 66%]
tests/test_plugins.py::TestBasePlugin::test_base_plugin_get_configuration_schema PASSED [ 66%]
tests/test_plugins.py::TestBasePlugin::test_validate_configuration_no_schema PASSED [ 66%]
tests/test_plugins.py::TestBasePlugin::test_validate_configuration_with_schema PASSED [ 67%]
tests/test_plugins.py::TestBasePlugin::test_validate_configuration_type_checking PASSED [ 67%]
tests/test_plugins.py::TestBasePlugin::test_validate_configuration_error_handling PASSED [ 67%]
tests/test_plugins.py::TestToolPlugin::test_tool_plugin_inheritance FAILED [ 67%]
tests/test_plugins.py::TestToolPlugin::test_get_tools_abstract_method PASSED [ 67%]
tests/test_plugins.py::TestToolPlugin::test_get_tools_implementation FAILED [ 67%]
tests/test_plugins.py::TestWorkflowPlugin::test_workflow_plugin_inheritance FAILED [ 67%]
tests/test_plugins.py::TestWorkflowPlugin::test_execute_workflow_abstract_method PASSED [ 67%]
tests/test_plugins.py::TestPluginManager::test_plugin_manager_initialization FAILED [ 68%]
tests/test_plugins.py::TestPluginManager::test_get_plugin_directory_default FAILED [ 68%]
tests/test_plugins.py::TestPluginManager::test_get_plugin_directory_custom FAILED [ 68%]
tests/test_plugins.py::TestPluginManager::test_load_plugin_from_file_success FAILED [ 68%]
tests/test_plugins.py::TestPluginManager::test_load_plugin_from_file_missing_file FAILED [ 68%]
tests/test_plugins.py::TestPluginManager::test_load_plugin_from_file_syntax_error FAILED [ 68%]
tests/test_plugins.py::TestPluginManager::test_unload_plugin_success FAILED [ 68%]
tests/test_plugins.py::TestPluginManager::test_unload_plugin_not_found FAILED [ 68%]
tests/test_plugins.py::TestPluginManager::test_unload_plugin_cleanup_error FAILED [ 69%]
tests/test_plugins.py::TestPluginManager::test_list_plugins FAILED       [ 69%]
tests/test_plugins.py::TestPluginManager::test_list_plugins_by_type FAILED [ 69%]
tests/test_plugins.py::TestPluginManager::test_list_plugins_by_status FAILED [ 69%]
tests/test_plugins.py::TestPluginManager::test_get_plugin_info_found FAILED [ 69%]
tests/test_plugins.py::TestPluginManager::test_get_plugin_info_not_found FAILED [ 69%]
tests/test_plugins.py::TestPluginManager::test_get_tools_from_plugins FAILED [ 69%]
tests/test_plugins.py::TestPluginManager::test_get_tools_from_plugins_inactive_ignored FAILED [ 69%]
tests/test_plugins.py::TestPluginManager::test_health_check_all_plugins FAILED [ 70%]
tests/test_plugins.py::TestPluginManager::test_health_check_plugin_error FAILED [ 70%]
tests/test_plugins.py::TestPluginIntegration::test_plugin_lifecycle FAILED [ 70%]
tests/test_plugins.py::TestPluginIntegration::test_multiple_plugins_management FAILED [ 70%]
tests/test_plugins.py::TestPluginError::test_plugin_error_creation PASSED [ 70%]
tests/test_plugins.py::TestPluginError::test_plugin_error_with_cause PASSED [ 70%]
tests/test_postgresql_functionality.py::TestPostgreSQLDatabase::test_postgresql_session_exists PASSED [ 70%]
tests/test_postgresql_functionality.py::TestPostgreSQLDatabase::test_postgresql_basic_query PASSED [ 70%]
tests/test_postgresql_functionality.py::TestPostgreSQLDatabase::test_postgresql_engine_info PASSED [ 71%]
tests/test_postgresql_functionality.py::TestPostgreSQLDatabase::test_postgresql_transaction_rollback PASSED [ 71%]
tests/test_profiles_integration.py::TestProfilesIntegration::test_profile_complete_lifecycle ERROR [ 71%]
tests/test_profiles_integration.py::TestProfilesIntegration::test_profile_list_and_filter FAILED [ 71%]
tests/test_profiles_integration.py::TestProfilesIntegration::test_profile_stats_and_providers FAILED [ 71%]
tests/test_profiles_integration.py::TestProfilesIntegration::test_profile_error_scenarios FAILED [ 71%]
tests/test_profiles_integration.py::TestProfilesIntegration::test_profile_data_validation FAILED [ 71%]
tests/test_profiles_integration.py::TestProfilesIntegration::test_profile_concurrent_operations FAILED [ 71%]
tests/test_profiles_integration.py::TestProfilesIntegration::test_profile_complex_data_handling FAILED [ 72%]
tests/test_profiles_integration.py::TestProfilesIntegration::test_profile_testing_functionality FAILED [ 72%]
tests/test_profiles_unit.py::TestProfilesUnit::test_create_profile_requires_auth FAILED [ 72%]
tests/test_profiles_unit.py::TestProfilesUnit::test_list_profiles_requires_auth FAILED [ 72%]
tests/test_profiles_unit.py::TestProfilesUnit::test_get_profile_requires_auth FAILED [ 72%]
tests/test_profiles_unit.py::TestProfilesUnit::test_update_profile_requires_auth FAILED [ 72%]
tests/test_profiles_unit.py::TestProfilesUnit::test_delete_profile_requires_auth FAILED [ 72%]
tests/test_profiles_unit.py::TestProfilesUnit::test_test_profile_requires_auth FAILED [ 72%]
tests/test_profiles_unit.py::TestProfilesUnit::test_clone_profile_requires_auth FAILED [ 73%]
tests/test_profiles_unit.py::TestProfilesUnit::test_get_profile_stats_requires_auth FAILED [ 73%]
tests/test_profiles_unit.py::TestProfilesUnit::test_get_available_providers_requires_auth FAILED [ 73%]
tests/test_profiles_unit.py::TestProfilesUnit::test_create_profile_success FAILED [ 73%]
tests/test_profiles_unit.py::TestProfilesUnit::test_create_profile_invalid_data FAILED [ 73%]
tests/test_profiles_unit.py::TestProfilesUnit::test_create_profile_rate_limit FAILED [ 73%]
tests/test_profiles_unit.py::TestProfilesUnit::test_list_profiles_success FAILED [ 73%]
tests/test_profiles_unit.py::TestProfilesUnit::test_get_profile_success FAILED [ 73%]
tests/test_profiles_unit.py::TestProfilesUnit::test_get_profile_not_found FAILED [ 74%]
tests/test_profiles_unit.py::TestProfilesUnit::test_update_profile_success FAILED [ 74%]
tests/test_profiles_unit.py::TestProfilesUnit::test_delete_profile_success FAILED [ 74%]
tests/test_profiles_unit.py::TestProfilesUnit::test_test_profile_success FAILED [ 74%]
tests/test_profiles_unit.py::TestProfilesUnit::test_clone_profile_success FAILED [ 74%]
tests/test_profiles_unit.py::TestProfilesUnit::test_get_profile_stats_success FAILED [ 74%]
tests/test_profiles_unit.py::TestProfilesUnit::test_get_available_providers_success FAILED [ 74%]
tests/test_profiles_unit.py::TestProfilesUnit::test_profile_service_error_handling FAILED [ 74%]
tests/test_profiles_unit.py::TestProfilesUnit::test_profile_validation_errors FAILED [ 75%]
tests/test_profiles_unit.py::TestProfilesUnit::test_list_profiles_filtering FAILED [ 75%]
tests/test_profiles_unit.py::TestProfilesUnit::test_test_profile_rate_limit FAILED [ 75%]
tests/test_prompts_api_security.py::TestSecureTemplateRenderer::test_secure_f_string_rendering FAILED [ 75%]
tests/test_prompts_api_security.py::TestSecureTemplateRenderer::test_secure_f_string_prevents_injection PASSED [ 75%]
tests/test_prompts_api_security.py::TestSecureTemplateRenderer::test_variable_sanitization PASSED [ 75%]
tests/test_prompts_api_security.py::TestSecureTemplateRenderer::test_invalid_variable_names PASSED [ 75%]
tests/test_prompts_api_security.py::TestSecureTemplateRenderer::test_variable_length_limit PASSED [ 75%]
tests/test_prompts_api_security.py::TestSecureTemplateRenderer::test_template_syntax_validation FAILED [ 76%]
tests/test_prompts_api_security.py::TestSecureTemplateRenderer::test_jinja2_secure_rendering PASSED [ 76%]
tests/test_prompts_api_security.py::TestSecureTemplateRenderer::test_mustache_secure_rendering PASSED [ 76%]
tests/test_prompts_api_security.py::TestPromptSchemas::test_prompt_create_validation PASSED [ 76%]
tests/test_prompts_api_security.py::TestPromptSchemas::test_prompt_create_invalid_template_format PASSED [ 76%]
tests/test_prompts_api_security.py::TestPromptSchemas::test_prompt_create_length_constraints PASSED [ 76%]
tests/test_prompts_api_security.py::TestPromptSchemas::test_prompt_update_validation PASSED [ 76%]
tests/test_prompts_api_security.py::TestPromptSchemas::test_prompt_test_request_validation PASSED [ 76%]
tests/test_prompts_api_security.py::TestPromptService::test_create_prompt_success FAILED [ 77%]
tests/test_prompts_api_security.py::TestPromptService::test_create_prompt_duplicate_name PASSED [ 77%]
tests/test_prompts_api_security.py::TestPromptService::test_test_prompt_security PASSED [ 77%]
tests/test_prompts_api_security.py::TestPromptService::test_test_prompt_with_malicious_variables PASSED [ 77%]
tests/test_prompts_api_security.py::TestPromptModel::test_secure_render_f_string PASSED [ 77%]
tests/test_prompts_api_security.py::TestPromptModel::test_validate_variables_with_security PASSED [ 77%]
tests/test_prompts_api_security.py::TestPromptAPIRoutes::test_route_ordering PASSED [ 77%]
tests/test_prompts_api_security.py::TestSecurityFeatures::test_template_injection_prevention FAILED [ 77%]
tests/test_prompts_api_security.py::TestSecurityFeatures::test_xss_prevention PASSED [ 78%]
tests/test_prompts_api_security.py::TestSecurityFeatures::test_variable_name_validation FAILED [ 78%]
tests/test_prompts_api_security.py::TestSecurityFeatures::test_content_length_limits PASSED [ 78%]
tests/test_schema_model_consistency.py::TestSchemaModelConsistency::test_user_registration_schema_matches_model_fields PASSED [ 78%]
tests/test_schema_model_consistency.py::TestSchemaModelConsistency::test_user_update_schema_matches_model_fields PASSED [ 78%]
tests/test_schema_model_consistency.py::TestSchemaModelConsistency::test_user_response_schema_matches_model_fields PASSED [ 78%]
tests/test_schema_model_consistency.py::TestSchemaModelConsistency::test_user_model_required_fields_in_schemas PASSED [ 78%]
tests/test_schema_model_consistency.py::TestSchemaModelConsistency::test_phone_number_field_exists_in_user_model PASSED [ 78%]
tests/test_schema_model_consistency.py::TestSchemaModelConsistency::test_user_schema_validation_with_phone_number PASSED [ 79%]
tests/test_schema_model_consistency.py::TestSchemaModelConsistency::test_user_model_can_store_phone_number PASSED [ 79%]
tests/test_security_testing.py::TestSecurityTesting::test_sql_injection_protection_validation SKIPPED [ 79%]
tests/test_security_testing.py::TestSecurityTesting::test_xss_prevention PASSED [ 79%]
tests/test_security_testing.py::TestSecurityTesting::test_authentication_security_brute_force_protection PASSED [ 79%]
tests/test_security_testing.py::TestSecurityTesting::test_authorization_checks_and_token_validation SKIPPED [ 79%]
tests/test_security_testing.py::TestSecurityTesting::test_file_upload_security_malicious_detection SKIPPED [ 79%]
tests/test_security_testing.py::TestSecurityTesting::test_input_validation_and_sanitization SKIPPED [ 79%]
tests/test_security_testing.py::TestSecurityTesting::test_security_headers_validation PASSED [ 80%]
tests/test_security_testing.py::TestSecurityTesting::test_information_disclosure_prevention PASSED [ 80%]
tests/test_security_testing.py::TestSecurityTesting::test_cors_configuration_security PASSED [ 80%]
tests/test_seeding_fixes.py::TestSeedingEnumFixes::test_prompt_category_enums_exist PASSED [ 80%]
tests/test_seeding_fixes.py::TestSeedingEnumFixes::test_profile_type_enums_exist PASSED [ 80%]
tests/test_seeding_fixes.py::TestDatabaseSeederBasics::test_seeder_initialization PASSED [ 80%]
tests/test_seeding_fixes.py::TestDatabaseSeederBasics::test_count_users_mock PASSED [ 80%]
tests/test_seeding_fixes.py::TestConfigurableSeederBasics::test_configurable_seeder_initialization PASSED [ 80%]
tests/test_seeding_fixes.py::TestConfigurableSeederBasics::test_yaml_config_loading_with_missing_file PASSED [ 81%]
tests/test_seeding_fixes.py::TestSeedingModes::test_seeding_modes_exist PASSED [ 81%]
tests/test_seeding_fixes.py::TestSeedingModes::test_seeding_mode_values PASSED [ 81%]
tests/test_seeding_fixes.py::TestMethodImplementations::test_demo_embedding_spaces_method_exists PASSED [ 81%]
tests/test_seeding_fixes.py::TestMethodImplementations::test_test_registry_data_method_exists PASSED [ 81%]
tests/test_seeding_fixes.py::TestMethodImplementations::test_test_conversations_method_exists PASSED [ 81%]
tests/test_seeding_fixes.py::TestMethodImplementations::test_test_documents_method_exists PASSED [ 81%]
tests/test_seeding_fixes.py::TestErrorHandling::test_seeding_handles_exceptions PASSED [ 81%]
tests/test_seeding_fixes.py::TestSkipExistingLogic::test_skip_existing_when_users_exist PASSED [ 82%]
tests/test_seeding_fixes.py::TestSkipExistingLogic::test_force_mode_bypasses_existing_check PASSED [ 82%]
tests/test_streaming.py::TestStreamingEventType::test_streaming_event_types PASSED [ 82%]
tests/test_streaming.py::TestStreamingEventType::test_streaming_event_type_string_values PASSED [ 82%]
tests/test_streaming.py::TestStreamingEvent::test_streaming_event_data_creation PASSED [ 82%]
tests/test_streaming.py::TestStreamingEvent::test_streaming_event_data_minimal FAILED [ 82%]
tests/test_streaming.py::TestStreamingEvent::test_streaming_event_data_auto_timestamp FAILED [ 82%]
tests/test_streaming.py::TestStreamingEvent::test_streaming_event_data_with_metadata FAILED [ 82%]
tests/test_streaming.py::TestStreamingError::test_streaming_error_basic PASSED [ 83%]
tests/test_streaming.py::TestStreamingError::test_streaming_error_with_event_type PASSED [ 83%]
tests/test_streaming.py::TestStreamingError::test_streaming_error_inheritance PASSED [ 83%]
tests/test_streaming.py::TestStreamingService::test_streaming_service_initialization PASSED [ 83%]
tests/test_streaming.py::TestStreamingService::test_create_stream PASSED [ 83%]
tests/test_streaming.py::TestStreamingService::test_create_stream_auto_correlation_id PASSED [ 83%]
tests/test_streaming.py::TestStreamingService::test_create_stream_metrics_initialization PASSED [ 83%]
tests/test_streaming.py::TestStreamingService::test_end_stream FAILED    [ 83%]
tests/test_streaming.py::TestStreamingService::test_end_nonexistent_stream PASSED [ 84%]
tests/test_streaming.py::TestStreamingService::test_stream_event_basic FAILED [ 84%]
tests/test_streaming.py::TestStreamingService::test_stream_token FAILED  [ 84%]
tests/test_streaming.py::TestStreamingService::test_stream_tool_call_lifecycle FAILED [ 84%]
tests/test_streaming.py::TestStreamingService::test_stream_thinking FAILED [ 84%]
tests/test_streaming.py::TestStreamingService::test_stream_source_found FAILED [ 84%]
tests/test_streaming.py::TestStreamingService::test_stream_error FAILED  [ 84%]
tests/test_streaming.py::TestStreamingService::test_stream_complete FAILED [ 84%]
tests/test_streaming.py::TestStreamingService::test_stream_metadata FAILED [ 85%]
tests/test_streaming.py::TestStreamingService::test_get_stream_metrics FAILED [ 85%]
tests/test_streaming.py::TestStreamingService::test_get_nonexistent_stream_metrics FAILED [ 85%]
tests/test_streaming.py::TestStreamingService::test_list_active_streams FAILED [ 85%]
tests/test_streaming.py::TestStreamingService::test_is_stream_active FAILED [ 85%]
tests/test_streaming.py::TestStreamingService::test_stream_activity_tracking FAILED [ 85%]
tests/test_streaming.py::TestStreamingService::test_stream_error_handling_invalid_stream FAILED [ 85%]
tests/test_streaming.py::TestStreamingService::test_concurrent_streams FAILED [ 85%]
tests/test_streaming.py::TestStreamingService::test_stream_cleanup_on_error FAILED [ 86%]
tests/test_streaming.py::TestStreamingServiceIntegration::test_complete_streaming_workflow FAILED [ 86%]
tests/test_streaming.py::TestStreamingServiceIntegration::test_error_recovery_workflow FAILED [ 86%]
tests/test_streaming.py::TestStreamingServiceIntegration::test_performance_with_high_volume_streaming FAILED [ 86%]
tests/test_streaming.py::TestStreamingServiceIntegration::test_stream_isolation FAILED [ 86%]
tests/test_toolserver_improvements.py::test_crypto_utility PASSED        [ 86%]
tests/test_toolserver_improvements.py::test_rate_limiter PASSED          [ 86%]
tests/test_toolserver_improvements.py::test_mcp_service_validation PASSED [ 86%]
tests/test_toolserver_improvements.py::test_schema_validation PASSED     [ 87%]
tests/test_unified_cache.py::TestCacheInterface::test_memory_cache_basic_operations PASSED [ 87%]
tests/test_unified_cache.py::TestCacheInterface::test_memory_cache_batch_operations PASSED [ 87%]
tests/test_unified_cache.py::TestCacheInterface::test_memory_cache_increment PASSED [ 87%]
tests/test_unified_cache.py::TestCacheInterface::test_memory_cache_ttl PASSED [ 87%]
tests/test_unified_cache.py::TestCacheInterface::test_memory_cache_key_generation PASSED [ 87%]
tests/test_unified_cache.py::TestCacheInterface::test_memory_cache_eviction PASSED [ 87%]
tests/test_unified_cache.py::TestCacheInterface::test_memory_cache_stats PASSED [ 87%]
tests/test_unified_cache.py::TestCacheInterface::test_memory_cache_health_check PASSED [ 88%]
tests/test_unified_cache.py::TestCacheFactory::test_create_different_cache_types PASSED [ 88%]
tests/test_unified_cache.py::TestCacheFactory::test_convenience_methods PASSED [ 88%]
tests/test_unified_cache.py::TestCacheFactory::test_health_check_all PASSED [ 88%]
tests/test_unified_cache.py::TestCacheFactory::test_get_stats_all PASSED [ 88%]
tests/test_unified_cache.py::TestUnifiedModelRegistryCache::test_default_provider_operations PASSED [ 88%]
tests/test_unified_cache.py::TestUnifiedModelRegistryCache::test_provider_data_operations PASSED [ 88%]
tests/test_unified_cache.py::TestUnifiedModelRegistryCache::test_list_operations PASSED [ 88%]
tests/test_unified_cache.py::TestUnifiedWorkflowCache::test_workflow_operations PASSED [ 89%]
tests/test_unified_cache.py::TestUnifiedWorkflowCache::test_workflow_stats PASSED [ 89%]
tests/test_unified_cache.py::TestUnifiedWorkflowCache::test_workflow_key_generation PASSED [ 89%]
tests/test_unified_cache.py::test_cache_integration PASSED               [ 89%]
tests/test_unified_events.py::TestUnifiedEvent::test_create_unified_event PASSED [ 89%]
tests/test_unified_events.py::TestUnifiedEvent::test_event_to_dict PASSED [ 89%]
tests/test_unified_events.py::TestUnifiedEvent::test_event_from_dict PASSED [ 89%]
tests/test_unified_events.py::TestEventCreationFunctions::test_create_realtime_event PASSED [ 89%]
tests/test_unified_events.py::TestEventCreationFunctions::test_create_security_event PASSED [ 90%]
tests/test_unified_events.py::TestEventCreationFunctions::test_create_audit_event PASSED [ 90%]
tests/test_unified_events.py::TestEventCreationFunctions::test_create_streaming_event PASSED [ 90%]
tests/test_unified_events.py::TestEventCreationFunctions::test_create_analytics_event PASSED [ 90%]
tests/test_unified_events.py::TestEventRouter::test_register_emitter PASSED [ 90%]
tests/test_unified_events.py::TestEventRouter::test_add_handlers PASSED  [ 90%]
tests/test_unified_events.py::TestEventRouter::test_route_event PASSED   [ 90%]
tests/test_unified_events.py::TestUnifiedEventManager::test_manager_initialization PASSED [ 90%]
tests/test_unified_events.py::TestUnifiedEventManager::test_emit_different_event_types PASSED [ 91%]
tests/test_unified_events.py::TestUnifiedEventManager::test_system_alert PASSED [ 91%]
tests/test_unified_events.py::TestEventIntegration::test_full_event_flow PASSED [ 91%]
tests/test_unified_events.py::TestEventIntegration::test_convenience_functions PASSED [ 91%]
tests/test_unified_events.py::TestMinimalIntegration::test_setup_functions PASSED [ 91%]
tests/test_unified_events.py::TestMinimalIntegration::test_convenience_without_manager PASSED [ 91%]
tests/test_unified_events.py::TestMinimalIntegration::test_get_stats_without_manager PASSED [ 91%]
tests/test_unified_validation.py::TestValidationEngine::test_validate_input_success PASSED [ 91%]
tests/test_unified_validation.py::TestValidationEngine::test_validate_input_failure PASSED [ 92%]
tests/test_unified_validation.py::TestValidationEngine::test_validate_security_success PASSED [ 92%]
tests/test_unified_validation.py::TestValidationEngine::test_validate_security_failure PASSED [ 92%]
tests/test_unified_validation.py::TestInputValidator::test_email_validation PASSED [ 92%]
tests/test_unified_validation.py::TestInputValidator::test_username_validation PASSED [ 92%]
tests/test_unified_validation.py::TestInputValidator::test_sanitization PASSED [ 92%]
tests/test_unified_validation.py::TestSecurityValidator::test_xss_detection PASSED [ 92%]
tests/test_unified_validation.py::TestSecurityValidator::test_sql_injection_detection PASSED [ 92%]
tests/test_unified_validation.py::TestSecurityValidator::test_path_traversal_detection PASSED [ 93%]
tests/test_unified_validation.py::TestBusinessValidator::test_model_consistency PASSED [ 93%]
tests/test_unified_validation.py::TestBusinessValidator::test_embedding_space_validation PASSED [ 93%]
tests/test_unified_validation.py::TestValidationContext::test_context_overrides PASSED [ 93%]
tests/test_unified_validation.py::TestValidationContext::test_context_modes PASSED [ 93%]
tests/test_unified_validation.py::TestValidationContext::test_validator_enablement PASSED [ 93%]
tests/test_unified_validation.py::TestBackwardsCompatibility::test_legacy_imports SKIPPED [ 93%]
tests/test_unified_validation.py::TestBackwardsCompatibility::test_legacy_validator_classes SKIPPED [ 93%]
tests/test_unified_validation.py::TestValidationResult::test_result_creation PASSED [ 94%]
tests/test_unified_validation.py::TestValidationResult::test_result_with_errors PASSED [ 94%]
tests/test_unified_validation.py::TestValidationResult::test_result_merging PASSED [ 94%]
tests/test_versioning.py::TestAPIVersion::test_api_version_values PASSED [ 94%]
tests/test_versioning.py::TestAPIVersion::test_api_version_string_representation FAILED [ 94%]
tests/test_versioning.py::TestVersionStatus::test_version_status_values FAILED [ 94%]
tests/test_versioning.py::TestVersionStatus::test_version_status_progression FAILED [ 94%]
tests/test_versioning.py::TestVersionInfo::test_version_info_creation PASSED [ 94%]
tests/test_versioning.py::TestVersionInfo::test_version_info_minimal PASSED [ 95%]
tests/test_versioning.py::TestEndpointVersioning::test_endpoint_versioning_creation FAILED [ 95%]
tests/test_versioning.py::TestEndpointVersioning::test_endpoint_versioning_lifecycle FAILED [ 95%]
tests/test_versioning.py::TestAPIVersionManager::test_manager_initialization PASSED [ 95%]
tests/test_versioning.py::TestAPIVersionManager::test_default_versions_loaded FAILED [ 95%]
tests/test_versioning.py::TestAPIVersionManager::test_add_version PASSED [ 95%]
tests/test_versioning.py::TestAPIVersionManager::test_get_version_info_existing PASSED [ 95%]
tests/test_versioning.py::TestAPIVersionManager::test_get_version_info_nonexistent PASSED [ 95%]
tests/test_versioning.py::TestAPIVersionManager::test_get_all_versions PASSED [ 96%]
tests/test_versioning.py::TestAPIVersionManager::test_get_active_versions PASSED [ 96%]
tests/test_versioning.py::TestAPIVersionManager::test_is_version_supported_active PASSED [ 96%]
tests/test_versioning.py::TestAPIVersionManager::test_is_version_supported_deprecated PASSED [ 96%]
tests/test_versioning.py::TestAPIVersionManager::test_is_version_supported_sunset PASSED [ 96%]
tests/test_versioning.py::TestAPIVersionManager::test_is_version_supported_nonexistent PASSED [ 96%]
tests/test_versioning.py::TestAPIVersionManager::test_register_endpoint PASSED [ 96%]
tests/test_versioning.py::TestAPIVersionManager::test_register_endpoint_method_normalization PASSED [ 96%]
tests/test_versioning.py::TestAPIVersionManager::test_is_endpoint_available_current_version PASSED [ 97%]
tests/test_versioning.py::TestAPIVersionManager::test_is_endpoint_available_future_version PASSED [ 97%]
tests/test_versioning.py::TestAPIVersionManager::test_is_endpoint_available_after_removal PASSED [ 97%]
tests/test_versioning.py::TestAPIVersionManager::test_is_endpoint_available_unregistered FAILED [ 97%]
tests/test_versioning.py::TestAPIVersionManager::test_deprecate_endpoint FAILED [ 97%]
tests/test_versioning.py::TestAPIVersionManager::test_deprecate_nonexistent_endpoint FAILED [ 97%]
tests/test_versioning.py::TestAPIVersionManager::test_get_endpoint_info FAILED [ 97%]
tests/test_versioning.py::TestAPIVersionManager::test_get_endpoint_info_nonexistent FAILED [ 97%]
tests/test_versioning.py::TestAPIVersionManager::test_get_endpoints_for_version FAILED [ 98%]
tests/test_versioning.py::TestAPIVersionManager::test_version_middleware_integration FAILED [ 98%]
tests/test_versioning.py::TestVersioningIntegration::test_complete_version_lifecycle FAILED [ 98%]
tests/test_versioning.py::TestVersioningIntegration::test_version_migration_scenario FAILED [ 98%]
tests/test_versioning.py::TestVersioningIntegration::test_backwards_compatibility_checking FAILED [ 98%]
tests/test_workflow_limits_and_streaming.py::TestWorkflowLimitManager::test_get_default_limits PASSED [ 98%]
tests/test_workflow_limits_and_streaming.py::TestWorkflowLimitManager::test_concurrent_limit_check PASSED [ 98%]
tests/test_workflow_limits_and_streaming.py::TestWorkflowLimitManager::test_workflow_tracking_lifecycle PASSED [ 98%]
tests/test_workflow_limits_and_streaming.py::TestWorkflowLimitManager::test_resource_limit_checking PASSED [ 99%]
tests/test_workflow_limits_and_streaming.py::TestWorkflowLimitManager::test_timeout_context_manager PASSED [ 99%]
tests/test_workflow_limits_and_streaming.py::TestWorkflowLimitManager::test_workflow_stats PASSED [ 99%]
tests/test_workflow_limits_and_streaming.py::TestWorkflowExecutionService::test_execute_workflow_with_limits FAILED [ 99%]
tests/test_workflow_limits_and_streaming.py::TestWorkflowExecutionService::test_execute_workflow_timeout FAILED [ 99%]
tests/test_workflow_limits_and_streaming.py::TestWorkflowExecutionService::test_concurrent_workflow_limit PASSED [ 99%]
tests/test_workflow_limits_and_streaming.py::TestWorkflowExecutionService::test_streaming_workflow_with_limits FAILED [ 99%]
tests/test_workflow_limits_and_streaming.py::TestWorkflowExecutionService::test_streaming_workflow_timeout FAILED [ 99%]
tests/test_workflow_limits_and_streaming.py::TestWorkflowExecutionService::test_enhanced_token_streaming_all_workflows FAILED [100%]

==================================== ERRORS ====================================
___ ERROR at setup of TestAnalyticsIntegration.test_metrics_summary_workflow ___

fixturedef = <FixtureDef argname='auth_headers' scope='function' baseid='tests'>
request = <SubRequest 'auth_headers' for <Coroutine test_metrics_summary_workflow>>

    @pytest.hookimpl(wrapper=True)
    def pytest_fixture_setup(fixturedef: FixtureDef, request) -> object | None:
        asyncio_mode = _get_asyncio_mode(request.config)
        if not _is_asyncio_fixture_function(fixturedef.func):
            if asyncio_mode == Mode.STRICT:
                # Ignore async fixtures without explicit asyncio mark in strict mode
                # This applies to pytest_trio fixtures, for example
                return (yield)
            if not _is_coroutine_or_asyncgen(fixturedef.func):
                return (yield)
        default_loop_scope = request.config.getini("asyncio_default_fixture_loop_scope")
        loop_scope = (
            getattr(fixturedef.func, "_loop_scope", None)
            or default_loop_scope
            or fixturedef.scope
        )
        runner_fixture_id = f"_{loop_scope}_scoped_runner"
        runner = request.getfixturevalue(runner_fixture_id)
        synchronizer = _fixture_synchronizer(fixturedef, runner, request)
        _make_asyncio_fixture_function(synchronizer, loop_scope)
        with MonkeyPatch.context() as c:
            c.setattr(fixturedef, "func", synchronizer)
>           hook_result = yield
                          ^^^^^

../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:696: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:321: in _async_fixture_wrapper
    result = runner.run(setup(), context=context)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/asyncio/runners.py:118: in run
    return self._loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/asyncio/base_events.py:691: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:317: in setup
    res = await fixture_function(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

client = <httpx.AsyncClient object at 0x7f849dc3b770>

    @pytest.fixture
    async def auth_headers(client) -> dict[str, str]:
        """
        Create authentication headers for testing protected endpoints.
    
        Args:
            client: The HTTP client for making requests
    
        Returns:
            Dictionary with Authorization header
        """
        import uuid
        import string
        import random
    
        # Generate a more username-friendly unique identifier
        # Use only lowercase letters to avoid sequential pattern validation
        unique_base = str(uuid.uuid4()).replace('-', '')
        # Filter out numbers and use only letters to avoid validation issues
        safe_chars = ''.join(c for c in unique_base if c.isalpha()).lower()[:8]
        # Ensure we have enough characters, pad with random letters if needed
        while len(safe_chars) < 6:
            safe_chars += random.choice(string.ascii_lowercase)
        safe_id = 'testuser' + safe_chars[:6]
    
        user_data = {
            "username": safe_id,
            "email": f"{safe_id}@example.com",
            "password": "SecureP@ssw0rd!",
            "full_name": f"Test User {safe_id}",
        }
    
        response = await client.post("/api/v1/auth/register", json=user_data)
>       assert response.status_code == 201
E       assert 400 == 201
E        +  where 400 = <Response [400 Bad Request]>.status_code

tests/conftest.py:435: AssertionError
------------------------------ Captured log setup ------------------------------
WARNING  chatter.api.auth:auth.py:177 [2m2025-09-05T20:05:30.077594Z[0m [[33m[1mwarning  [0m] [1mRegistration failed           [0m [[34m[1mchatter.api.auth[0m] [36memail[0m=[35mtestuserecaaaa@examp...[0m [36merror[0m=[35m400: Username format is invalid or contains prohibited patterns[0m [36mip_address[0m=[35m127.0.0.1[0m [36musername[0m=[35mtestuserecaaaa[0m
__ ERROR at setup of TestProfilesIntegration.test_profile_complete_lifecycle ___

fixturedef = <FixtureDef argname='auth_headers' scope='function' baseid='tests'>
request = <SubRequest 'auth_headers' for <Coroutine test_profile_complete_lifecycle>>

    @pytest.hookimpl(wrapper=True)
    def pytest_fixture_setup(fixturedef: FixtureDef, request) -> object | None:
        asyncio_mode = _get_asyncio_mode(request.config)
        if not _is_asyncio_fixture_function(fixturedef.func):
            if asyncio_mode == Mode.STRICT:
                # Ignore async fixtures without explicit asyncio mark in strict mode
                # This applies to pytest_trio fixtures, for example
                return (yield)
            if not _is_coroutine_or_asyncgen(fixturedef.func):
                return (yield)
        default_loop_scope = request.config.getini("asyncio_default_fixture_loop_scope")
        loop_scope = (
            getattr(fixturedef.func, "_loop_scope", None)
            or default_loop_scope
            or fixturedef.scope
        )
        runner_fixture_id = f"_{loop_scope}_scoped_runner"
        runner = request.getfixturevalue(runner_fixture_id)
        synchronizer = _fixture_synchronizer(fixturedef, runner, request)
        _make_asyncio_fixture_function(synchronizer, loop_scope)
        with MonkeyPatch.context() as c:
            c.setattr(fixturedef, "func", synchronizer)
>           hook_result = yield
                          ^^^^^

../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:696: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:321: in _async_fixture_wrapper
    result = runner.run(setup(), context=context)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/asyncio/runners.py:118: in run
    return self._loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/asyncio/base_events.py:691: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:317: in setup
    res = await fixture_function(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

client = <httpx.AsyncClient object at 0x7f83e7582990>

    @pytest.fixture
    async def auth_headers(client) -> dict[str, str]:
        """
        Create authentication headers for testing protected endpoints.
    
        Args:
            client: The HTTP client for making requests
    
        Returns:
            Dictionary with Authorization header
        """
        import uuid
        import string
        import random
    
        # Generate a more username-friendly unique identifier
        # Use only lowercase letters to avoid sequential pattern validation
        unique_base = str(uuid.uuid4()).replace('-', '')
        # Filter out numbers and use only letters to avoid validation issues
        safe_chars = ''.join(c for c in unique_base if c.isalpha()).lower()[:8]
        # Ensure we have enough characters, pad with random letters if needed
        while len(safe_chars) < 6:
            safe_chars += random.choice(string.ascii_lowercase)
        safe_id = 'testuser' + safe_chars[:6]
    
        user_data = {
            "username": safe_id,
            "email": f"{safe_id}@example.com",
            "password": "SecureP@ssw0rd!",
            "full_name": f"Test User {safe_id}",
        }
    
        response = await client.post("/api/v1/auth/register", json=user_data)
>       assert response.status_code == 201
E       assert 400 == 201
E        +  where 400 = <Response [400 Bad Request]>.status_code

tests/conftest.py:435: AssertionError
------------------------------ Captured log setup ------------------------------
WARNING  chatter.api.auth:auth.py:177 [2m2025-09-05T20:11:09.481668Z[0m [[33m[1mwarning  [0m] [1mRegistration failed           [0m [[34m[1mchatter.api.auth[0m] [36memail[0m=[35mtestusercbeeee@examp...[0m [36merror[0m=[35m400: Username format is invalid or contains prohibited patterns[0m [36mip_address[0m=[35m127.0.0.1[0m [36musername[0m=[35mtestusercbeeee[0m
=================================== FAILURES ===================================
___________ TestABTestingIntegration.test_ab_test_complete_lifecycle ___________

self = <tests.test_ab_testing_integration.TestABTestingIntegration object at 0x7f8656ee3350>
client = <httpx.AsyncClient object at 0x7f84ba0473b0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOM05YS1lNS0pSVjQ1S0VGU0o1NiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDQwfQ.ogW28ALlz1kYPhbIKVRP8Ky-TrI2UkTX9xhApEwHGbo'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84aae11730>

    @pytest.mark.integration
    async def test_ab_test_complete_lifecycle(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test complete AB test lifecycle from creation to completion."""
        # Create test
        test_data = {
            "name": "Integration Test AB Test",
            "description": "Complete lifecycle test",
            "test_type": "prompt",
            "allocation_strategy": "equal",
            "variants": [
                {
                    "name": "control",
                    "description": "Control variant",
                    "configuration": {"param_a": "value1"},
                    "weight": 1.0
                },
                {
                    "name": "variant_a",
                    "description": "Test variant A",
                    "configuration": {"param_a": "value2"},
                    "weight": 1.0
                }
            ],
            "metrics": ["response_time", "user_satisfaction"],
            "duration_days": 7,
            "min_sample_size": 100,
            "confidence_level": 0.95,
            "traffic_percentage": 100.0
        }
    
>       create_response = await client.post("/api/v1/ab-tests/", json=test_data, headers=auth_headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_integration.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-247' coro=<TestABTestingIntegration.test_ab_test_complete_lifecycle() running at /home/yam/chatter/tests/test_ab_testing_integration.py:42> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOM05YS1lNS0pSVjQ1S0VGU0o1NiIsImVtYWlsIjoidGVzdHVzZXJiZGNlY2NAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmRjZWNjIiwianRpIjoiMWZjZTk0OWUtYTM0Ni00NDM2LThiYTMtMTI4NWRjMzgxZTUxIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY0MCwic2Vzc2lvbl9pZCI6ImZmNmUxZWJmLWQxMTEtNGUyZS1iYWQxLWY5MTdhNWJhMjE4YSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDQwfQ.ogW28ALlz1kYPhbIKVRP8Ky-TrI2UkTX9xhApEwHGbo
____________ TestABTestingIntegration.test_ab_test_list_and_filter _____________

self = <tests.test_ab_testing_integration.TestABTestingIntegration object at 0x7f8656ee25d0>
client = <httpx.AsyncClient object at 0x7f84b8b50830>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFONTNFVEdTTk1GNjlNNTdaVEMzNyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDQyfQ.gc2ZqjRIih7Tv_5OXa5xVD7Iv-UeXw85Fo1S3WEZSVA'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84ba2c7c20>

    @pytest.mark.integration
    async def test_ab_test_list_and_filter(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test AB test listing and filtering functionality."""
        # Create multiple tests
        test_names = ["Test 1", "Test 2", "Test 3"]
        created_tests = []
    
        for name in test_names:
            test_data = {
                "name": name,
                "description": f"Description for {name}",
                "variants": [
                    {"name": "control", "allocation": 50},
                    {"name": "variant", "allocation": 50}
                ]
            }
    
>           response = await client.post("/api/v1/ab-tests/", json=test_data, headers=auth_headers)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_integration.py:95: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-261' coro=<TestABTestingIntegration.test_ab_test_list_and_filter() running at /home/yam/chatter/tests/test_ab_testing_integration.py:95> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFONTNFVEdTTk1GNjlNNTdaVEMzNyIsImVtYWlsIjoidGVzdHVzZXJmY2NhZWNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmNjYWVjIiwianRpIjoiMzE5NjU5NzYtZmU0YS00YWEwLWI1MWYtNzJhNWVkNTk3M2JhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY0Miwic2Vzc2lvbl9pZCI6IjZiN2FiMmEzLTZjZmMtNGE5MC1hNDc5LWZiNjhmOGQ4Y2VhMSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDQyfQ.gc2ZqjRIih7Tv_5OXa5xVD7Iv-UeXw85Fo1S3WEZSVA
____________ TestABTestingIntegration.test_ab_test_update_workflow _____________

self = <tests.test_ab_testing_integration.TestABTestingIntegration object at 0x7f8656f04860>
client = <httpx.AsyncClient object at 0x7f84aaec2d50>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFONlE3QjNHNlNUU1pCVFQwQkdZMCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDQzfQ.uj4i21Vj7DldezxqZ1Cof1ozPJJBpr-alyZm16vvTto'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84b96f3a10>

    @pytest.mark.integration
    async def test_ab_test_update_workflow(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test AB test update functionality."""
        # Create test
        original_data = {
            "name": "Original Test Name",
            "description": "Original description",
            "variants": [
                {"name": "control", "allocation": 50},
                {"name": "variant_a", "allocation": 50}
            ]
        }
    
>       create_response = await client.post("/api/v1/ab-tests/", json=original_data, headers=auth_headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_integration.py:130: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-275' coro=<TestABTestingIntegration.test_ab_test_update_workflow() running at /home/yam/chatter/tests/test_ab_testing_integration.py:130> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFONlE3QjNHNlNUU1pCVFQwQkdZMCIsImVtYWlsIjoidGVzdHVzZXJkZWJjYmJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGViY2JiIiwianRpIjoiMjAwMWM0YTEtNmVmOC00MDMzLWE5NDktZTRhZDE5N2MxYWNmIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY0Mywic2Vzc2lvbl9pZCI6ImIyNmM1ZDhmLTQxMDMtNGM0OS04ZjYxLTJiZTA4Y2NkYmY4OSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDQzfQ.uj4i21Vj7DldezxqZ1Cof1ozPJJBpr-alyZm16vvTto
________ TestABTestingIntegration.test_ab_test_metrics_and_performance _________

self = <tests.test_ab_testing_integration.TestABTestingIntegration object at 0x7f8656f04950>
client = <httpx.AsyncClient object at 0x7f84aacbd6d0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOODAwQ1BTNDNLUUdOVkhEWVZOUiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDQ1fQ.96glaOMY6QNJRgak-76cnaQnhjgoVm2Lhn7ii6mprZw'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84aaee28d0>

    @pytest.mark.integration
    async def test_ab_test_metrics_and_performance(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test AB test metrics and performance tracking."""
        # Create and start test
        test_data = {
            "name": "Metrics Test",
            "description": "Test for metrics tracking",
            "variants": [
                {"name": "control", "allocation": 50},
                {"name": "variant_a", "allocation": 50}
            ],
            "target_metric": "click_through_rate"
        }
    
>       create_response = await client.post("/api/v1/ab-tests/", json=test_data, headers=auth_headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_integration.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-289' coro=<TestABTestingIntegration.test_ab_test_metrics_and_performance() running at /home/yam/chatter/tests/test_ab_testing_integration.py:174> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOODAwQ1BTNDNLUUdOVkhEWVZOUiIsImVtYWlsIjoidGVzdHVzZXJiZmZhZmNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmZmYWZjIiwianRpIjoiNWE1ODYxY2MtYzYyMS00MTJhLWFkNGUtYzM3MjBkMWM5MDAxIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY0NSwic2Vzc2lvbl9pZCI6Ijk2ODZhOTY4LTkxNGItNDJlYy1iZDViLTY0Njg5YmRmZmZlMCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDQ1fQ.96glaOMY6QNJRgak-76cnaQnhjgoVm2Lhn7ii6mprZw
____________ TestABTestingIntegration.test_ab_test_error_scenarios _____________

self = <tests.test_ab_testing_integration.TestABTestingIntegration object at 0x7f8656f04d10>
client = <httpx.AsyncClient object at 0x7f84aa680350>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOOThWTkpIOENBVFE3SEpORjQ0TiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDQ2fQ.IxjRUaCTY4M_sA4PWZMRoy1hTNPOCpRORCWmd92DxwY'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84aac1ad50>

    @pytest.mark.integration
    async def test_ab_test_error_scenarios(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test AB test error handling scenarios."""
        # Test non-existent test operations
        nonexistent_id = "nonexistent-test-id"
    
        operations = [
            ("GET", f"/api/v1/ab-tests/{nonexistent_id}"),
            ("PUT", f"/api/v1/ab-tests/{nonexistent_id}"),
            ("DELETE", f"/api/v1/ab-tests/{nonexistent_id}"),
            ("POST", f"/api/v1/ab-tests/{nonexistent_id}/start"),
            ("POST", f"/api/v1/ab-tests/{nonexistent_id}/pause"),
            ("POST", f"/api/v1/ab-tests/{nonexistent_id}/complete"),
            ("GET", f"/api/v1/ab-tests/{nonexistent_id}/results"),
            ("GET", f"/api/v1/ab-tests/{nonexistent_id}/metrics"),
        ]
    
        for method, url in operations:
            if method == "GET":
>               response = await client.get(url, headers=auth_headers)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_integration.py:226: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-303' coro=<TestABTestingIntegration.test_ab_test_error_scenarios() running at /home/yam/chatter/tests/test_ab_testing_integration.py:226> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOOThWTkpIOENBVFE3SEpORjQ0TiIsImVtYWlsIjoidGVzdHVzZXJiZWNiYWFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmVjYmFhIiwianRpIjoiMTFjNTQ3ZmMtZmNkNi00NjNhLWJkOGYtNDdjODVmMWZhOTY5IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY0Niwic2Vzc2lvbl9pZCI6ImZmZmQ1ODIxLTY3ZDAtNGM5YS1hZjk5LTJiYjQzOTI3NzEzNyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDQ2fQ.IxjRUaCTY4M_sA4PWZMRoy1hTNPOCpRORCWmd92DxwY
____________ TestABTestingIntegration.test_ab_test_state_validation ____________

self = <tests.test_ab_testing_integration.TestABTestingIntegration object at 0x7f8656f050d0>
client = <httpx.AsyncClient object at 0x7f84a92b2c00>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOQVRUODMwWjNFQzZZOURXOUNBWSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDQ4fQ.hcZy2pHzaPfZe8BGGSrhHgnk05vzqENAeZnyd6JB3D8'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84aa4d75f0>

    @pytest.mark.integration
    async def test_ab_test_state_validation(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test AB test state transition validation."""
        # Create test
        test_data = {
            "name": "State Validation Test",
            "description": "Test state transitions",
            "variants": [
                {"name": "control", "allocation": 50},
                {"name": "variant_a", "allocation": 50}
            ]
        }
    
>       create_response = await client.post("/api/v1/ab-tests/", json=test_data, headers=auth_headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_integration.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-317' coro=<TestABTestingIntegration.test_ab_test_state_validation() running at /home/yam/chatter/tests/test_ab_testing_integration.py:249> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOQVRUODMwWjNFQzZZOURXOUNBWSIsImVtYWlsIjoidGVzdHVzZXJhZGJhYWRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWRiYWFkIiwianRpIjoiNDJkNzZlYTctNmUyMS00MWQxLTliOTMtYmI0Yzc5MWVjZmZiIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY0OCwic2Vzc2lvbl9pZCI6IjFjOWRkNGQ4LWZiNmYtNGQ0Yi1iNzg2LTRhNzZjMTlkMDQ1YSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDQ4fQ.hcZy2pHzaPfZe8BGGSrhHgnk05vzqENAeZnyd6JB3D8
_________ TestABTestingIntegration.test_ab_test_concurrent_operations __________

self = <tests.test_ab_testing_integration.TestABTestingIntegration object at 0x7f8656f05490>
client = <httpx.AsyncClient object at 0x7f84a9859730>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOQzNLNFlZRkY0TUU0NVEzQzhZViIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDQ5fQ.SF6QyBETHkisfTdJZAcclIet8OFUfIXmA-wfOOKYAW4'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84a92f7950>

    @pytest.mark.integration
    async def test_ab_test_concurrent_operations(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test concurrent AB test operations."""
        # Create multiple tests concurrently
        test_data_list = [
            {
                "name": f"Concurrent Test {i}",
                "description": f"Concurrent test {i}",
                "variants": [
                    {"name": "control", "allocation": 50},
                    {"name": "variant", "allocation": 50}
                ]
            }
            for i in range(5)
        ]
    
        # Create tasks for concurrent test creation
        create_tasks = [
            asyncio.create_task(client.post("/api/v1/ab-tests/", json=test_data, headers=auth_headers))
            for test_data in test_data_list
        ]
    
        # Wait for all creations
>       create_responses = await asyncio.gather(*create_tasks)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_integration.py:301: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-332' coro=<AsyncClient.post() running at /home/yam/.local/lib/python3.12/site-packages/httpx/_client.py:1859> cb=[gather.<locals>._done_callback() at /usr/lib64/python3.12/asyncio/tasks.py:767]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOQzNLNFlZRkY0TUU0NVEzQzhZViIsImVtYWlsIjoidGVzdHVzZXJjZWJmZWVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2ViZmVlIiwianRpIjoiMzMwYjUzNWEtYTFmMS00ZTMxLTgxMTktNjhiNzk1Y2UyOTYwIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY0OSwic2Vzc2lvbl9pZCI6ImE2ZTUxMjRhLTM2MzQtNGZjOS04MTliLWM5ZmVjNjlkNDlkNCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDQ5fQ.SF6QyBETHkisfTdJZAcclIet8OFUfIXmA-wfOOKYAW4
____________ TestABTestingIntegration.test_ab_test_data_persistence ____________

self = <tests.test_ab_testing_integration.TestABTestingIntegration object at 0x7f8656f05850>
client = <httpx.AsyncClient object at 0x7f84aa54d370>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOREQ2MlhTNEVZOERFWEJKOVg3MiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDUwfQ.T4P4MQoWsn-643joqQKNhl5xABbBtHXDKkS0PZq0r5c'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84a921c5f0>

    @pytest.mark.integration
    async def test_ab_test_data_persistence(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test AB test data persistence across operations."""
        # Create test with specific data
        original_test_data = {
            "name": "Persistence Test",
            "description": "Testing data persistence",
            "variants": [
                {"name": "control", "allocation": 40},
                {"name": "variant_a", "allocation": 30},
                {"name": "variant_b", "allocation": 30}
            ],
            "target_metric": "conversion_rate",
            "success_criteria": {
                "min_improvement": 15.0,
                "confidence_level": 95.0
            },
            "metadata": {
                "experiment_type": "feature_flag",
                "team": "product",
                "priority": "high"
            }
        }
    
        # Create test
>       create_response = await client.post("/api/v1/ab-tests/", json=original_test_data, headers=auth_headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_integration.py:359: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-350' coro=<TestABTestingIntegration.test_ab_test_data_persistence() running at /home/yam/chatter/tests/test_ab_testing_integration.py:359> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOREQ2MlhTNEVZOERFWEJKOVg3MiIsImVtYWlsIjoidGVzdHVzZXJjY2FhYWVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2NhYWFlIiwianRpIjoiODhmYjkyY2EtZTc4OS00YTg4LTljZmYtYjdmODNmZmIxZTQ1IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY1MCwic2Vzc2lvbl9pZCI6IjZmYTNhMTdhLTgzZjItNDc2NS04NTRmLWNiMWQxMWJiZDVkZSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDUwfQ.T4P4MQoWsn-643joqQKNhl5xABbBtHXDKkS0PZq0r5c
_____________ TestABTestingUnit.test_create_ab_test_requires_auth ______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a9b80e30>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a9b80e30>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d9526c0>
client = <httpx.AsyncClient object at 0x7f84a9b80140>

    @pytest.mark.unit
    async def test_create_ab_test_requires_auth(self, client: AsyncClient):
        """Test that creating AB test requires authentication."""
        test_data = {
            "name": "Test AB Test",
            "description": "Test description",
            "variants": [
                {"name": "control", "allocation": 50},
                {"name": "variant_a", "allocation": 50}
            ]
        }
    
>       response = await client.post("/api/v1/ab-tests/", json=test_data)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_unit.py:25: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a9b80e30>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:12.214929Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m35989405-0abb-490e-9051-0438ea1628f2[0m [36mstatus_code[0m=[35m401[0m
______________ TestABTestingUnit.test_list_ab_tests_requires_auth ______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a855fd10>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a855fd10>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d868950>
client = <httpx.AsyncClient object at 0x7f84a855f170>

    @pytest.mark.unit
    async def test_list_ab_tests_requires_auth(self, client: AsyncClient):
        """Test that listing AB tests requires authentication."""
>       response = await client.get("/api/v1/ab-tests/")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_unit.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a855fd10>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:13.014623Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35mc3ce28b0-bfbb-4b20-a50e-9ade4bc62e64[0m [36mstatus_code[0m=[35m401[0m
_______________ TestABTestingUnit.test_get_ab_test_requires_auth _______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a8d06ae0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a8d06ae0>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d868ce0>
client = <httpx.AsyncClient object at 0x7f84a8d05f10>

    @pytest.mark.unit
    async def test_get_ab_test_requires_auth(self, client: AsyncClient):
        """Test that getting specific AB test requires authentication."""
>       response = await client.get("/api/v1/ab-tests/test-id")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_unit.py:37: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a8d06ae0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:13.825554Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m52ee6a87-60d2-4451-99fa-cd49dcdd9eb4[0m [36mstatus_code[0m=[35m401[0m
_____________ TestABTestingUnit.test_update_ab_test_requires_auth ______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a9789c70>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a9789c70>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d869100>
client = <httpx.AsyncClient object at 0x7f84a9788fb0>

    @pytest.mark.unit
    async def test_update_ab_test_requires_auth(self, client: AsyncClient):
        """Test that updating AB test requires authentication."""
>       response = await client.put("/api/v1/ab-tests/test-id", json={})
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_unit.py:43: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1896: in put
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a9789c70>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:14.656442Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m3f5181a2-a493-4a25-9922-27b1e4429188[0m [36mstatus_code[0m=[35m401[0m
_____________ TestABTestingUnit.test_delete_ab_test_requires_auth ______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a88d00e0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a88d00e0>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d869550>
client = <httpx.AsyncClient object at 0x7f84a88b3950>

    @pytest.mark.unit
    async def test_delete_ab_test_requires_auth(self, client: AsyncClient):
        """Test that deleting AB test requires authentication."""
>       response = await client.delete("/api/v1/ab-tests/test-id")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_unit.py:49: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1966: in delete
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a88d00e0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:15.810559Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35mc1e26bd1-c9bd-438f-9d0c-07e3c0ebf41f[0m [36mstatus_code[0m=[35m401[0m
______________ TestABTestingUnit.test_start_ab_test_requires_auth ______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84aab8b3e0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84aab8b3e0>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d869940>
client = <httpx.AsyncClient object at 0x7f84aab8a6f0>

    @pytest.mark.unit
    async def test_start_ab_test_requires_auth(self, client: AsyncClient):
        """Test that starting AB test requires authentication."""
>       response = await client.post("/api/v1/ab-tests/test-id/start")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_unit.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84aab8b3e0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:16.647805Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35mc3b4b83d-8ec1-4292-83d6-1b03e52ffe08[0m [36mstatus_code[0m=[35m401[0m
______________ TestABTestingUnit.test_pause_ab_test_requires_auth ______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a9f55f70>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a9f55f70>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d869d00>
client = <httpx.AsyncClient object at 0x7f84a9f553d0>

    @pytest.mark.unit
    async def test_pause_ab_test_requires_auth(self, client: AsyncClient):
        """Test that pausing AB test requires authentication."""
>       response = await client.post("/api/v1/ab-tests/test-id/pause")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_unit.py:61: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a9f55f70>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:17.477560Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m74513a2c-141c-4512-8d7e-8a28d9169f14[0m [36mstatus_code[0m=[35m401[0m
____________ TestABTestingUnit.test_complete_ab_test_requires_auth _____________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a9cd0e30>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a9cd0e30>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d86a0c0>
client = <httpx.AsyncClient object at 0x7f84a9cd0260>

    @pytest.mark.unit
    async def test_complete_ab_test_requires_auth(self, client: AsyncClient):
        """Test that completing AB test requires authentication."""
>       response = await client.post("/api/v1/ab-tests/test-id/complete")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_unit.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a9cd0e30>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:18.301992Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35maa5711fd-caa5-40ea-8b68-e9ea42fdb039[0m [36mstatus_code[0m=[35m401[0m
_______________ TestABTestingUnit.test_get_results_requires_auth _______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a946b8f0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a946b8f0>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d86a480>
client = <httpx.AsyncClient object at 0x7f84a946ade0>

    @pytest.mark.unit
    async def test_get_results_requires_auth(self, client: AsyncClient):
        """Test that getting results requires authentication."""
>       response = await client.get("/api/v1/ab-tests/test-id/results")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_unit.py:73: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84a946b8f0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:19.144142Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35mc5e328ad-5b23-422b-aad7-4e8fd8973961[0m [36mstatus_code[0m=[35m401[0m
_______________ TestABTestingUnit.test_get_metrics_requires_auth _______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84aaae6750>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84aaae6750>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d86a840>
client = <httpx.AsyncClient object at 0x7f84aaae5c10>

    @pytest.mark.unit
    async def test_get_metrics_requires_auth(self, client: AsyncClient):
        """Test that getting metrics requires authentication."""
>       response = await client.get("/api/v1/ab-tests/test-id/metrics")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_unit.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84aaae6750>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:19.975535Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35me7c785df-da6b-423a-b5fb-ab85c79b0062[0m [36mstatus_code[0m=[35m401[0m
________________ TestABTestingUnit.test_create_ab_test_success _________________

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d86ac00>
mock_get_manager = <AsyncMock name='get_ab_test_manager' id='140207765953936'>
client = <httpx.AsyncClient object at 0x7f84a9ab0d70>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOUVFOWEcwNjFOTlkyNFNXSkgxUSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDYxfQ.8iXvEDNVylv_cQvn5sob1I3gY7wCyBkfKV5tVe8-QVU'}

    @pytest.mark.unit
    @patch('chatter.api.ab_testing.get_ab_test_manager')
    async def test_create_ab_test_success(self, mock_get_manager, client: AsyncClient, auth_headers: dict):
        """Test successful AB test creation."""
        # Mock the manager
        mock_manager = AsyncMock()
    
        from chatter.schemas.ab_testing import TestVariant
        from chatter.services.ab_testing import TestType, VariantAllocation, MetricType
        from datetime import datetime, UTC
    
        # Create proper test variants
        test_variants = [
            TestVariant(
                name="control",
                description="Control variant",
                configuration={},
                weight=1.0
            ),
            TestVariant(
                name="variant_a",
                description="Variant A",
                configuration={},
                weight=1.0
            )
        ]
    
        mock_manager.create_test.return_value = ABTestResponse(
            id="test-123",
            name="Test AB Test",
            description="Test description",
            test_type=TestType.PROMPT,
            status=TestStatus.DRAFT,
            allocation_strategy=VariantAllocation.EQUAL,
            variants=test_variants,
            metrics=[MetricType.CUSTOM],
            duration_days=30,
            min_sample_size=100,
            confidence_level=0.95,
            traffic_percentage=100.0,
            tags=[],
            metadata={},
            created_by="testuser",
            created_at=datetime.now(UTC),
            updated_at=datetime.now(UTC)
        )
        mock_get_manager.return_value = mock_manager
    
        test_data = {
            "name": "Test AB Test",
            "description": "Test description",
            "variants": [
                {"name": "control", "allocation": 50},
                {"name": "variant_a", "allocation": 50}
            ]
        }
    
>       response = await client.post("/api/v1/ab-tests/", json=test_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_unit.py:139: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-494' coro=<TestABTestingUnit.test_create_ab_test_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOUVFOWEcwNjFOTlkyNFNXSkgxUSIsImVtYWlsIjoidGVzdHVzZXJlZGJkYWVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWRiZGFlIiwianRpIjoiMTQzOWYxODktZTMwYi00NDU3LTlhMzEtYWQ1ZTVjMzE2NGYxIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY2MSwic2Vzc2lvbl9pZCI6IjZmNDU2NDE2LTQ5M2ItNDRlNy04MzNlLWYxZjEyNWZjZmQ0OCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDYxfQ.8iXvEDNVylv_cQvn5sob1I3gY7wCyBkfKV5tVe8-QVU
______________ TestABTestingUnit.test_create_ab_test_invalid_data ______________

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d86aff0>
mock_get_manager = <AsyncMock name='get_ab_test_manager' id='140207774317792'>
client = <httpx.AsyncClient object at 0x7f84aa952630>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOUzBQNFFKV1A1V05YU0IwODU5MSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDYyfQ.6dIUg6Al-LcXxCyizquP1PKBHHsxr8NMC455mPBZrMo'}

    @pytest.mark.unit
    @patch('chatter.api.ab_testing.get_ab_test_manager')
    async def test_create_ab_test_invalid_data(self, mock_get_manager, client: AsyncClient, auth_headers: dict):
        """Test AB test creation with invalid data."""
        # Missing required fields
        test_data = {
            "name": "Test AB Test"
            # Missing description and variants
        }
    
>       response = await client.post("/api/v1/ab-tests/", json=test_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_unit.py:157: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-508' coro=<TestABTestingUnit.test_create_ab_test_invalid_data() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOUzBQNFFKV1A1V05YU0IwODU5MSIsImVtYWlsIjoidGVzdHVzZXJkZGZhZmNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGRmYWZjIiwianRpIjoiZWVmNGVhNTMtZWU3MC00YmE2LWFmY2UtYTQwY2VhOTg3NGFhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY2Miwic2Vzc2lvbl9pZCI6IjI3NjJhYTkyLWJmNDQtNDEzOC05OGRjLTNiZTc0Yzg3NjRjMCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDYyfQ.6dIUg6Al-LcXxCyizquP1PKBHHsxr8NMC455mPBZrMo
___________ TestABTestingUnit.test_create_ab_test_invalid_allocation ___________

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d86b3b0>
mock_get_manager = <AsyncMock name='get_ab_test_manager' id='140207759070400'>
client = <httpx.AsyncClient object at 0x7f84a811f410>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOVFdWNkVKNE5KUjlESFdSRFo1USIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDY0fQ.PBP5tfzNOIt0llcxFwP2Xi_vrhKxnQ15KFjQPyp68yQ'}

    @pytest.mark.unit
    @patch('chatter.api.ab_testing.get_ab_test_manager')
    async def test_create_ab_test_invalid_allocation(self, mock_get_manager, client: AsyncClient, auth_headers: dict):
        """Test AB test creation with invalid allocation percentages."""
        test_data = {
            "name": "Test AB Test",
            "description": "Test description",
            "variants": [
                {"name": "control", "allocation": 60},
                {"name": "variant_a", "allocation": 50}  # Total = 110%
            ]
        }
    
        # Mock manager to raise validation error
        mock_manager = AsyncMock()
        mock_manager.create_test.side_effect = ValueError("Invalid allocation percentages")
        mock_get_manager.return_value = mock_manager
    
>       response = await client.post("/api/v1/ab-tests/", json=test_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_unit.py:178: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-522' coro=<TestABTestingUnit.test_create_ab_test_invalid_allocation() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOVFdWNkVKNE5KUjlESFdSRFo1USIsImVtYWlsIjoidGVzdHVzZXJlZGJkY2NAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWRiZGNjIiwianRpIjoiNGIyZjViZTUtOTAyMS00YWIyLWI5MTYtOTM5OWI5OTQxNjZlIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY2NCwic2Vzc2lvbl9pZCI6ImE1NWM1MjQ0LWJjYTctNDdkZC1hZTc5LTljNzJkYjE1MWMwNiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDY0fQ.PBP5tfzNOIt0llcxFwP2Xi_vrhKxnQ15KFjQPyp68yQ
_________________ TestABTestingUnit.test_list_ab_tests_success _________________

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d86b770>
mock_get_manager = <AsyncMock name='get_ab_test_manager' id='140207776298480'>
client = <httpx.AsyncClient object at 0x7f84aab367e0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOV0QxMzEwWUtSTktCTjhHMDA3SyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDY2fQ.mo96UBUYmE30cxUWt8Pu3ECFSV0n5eGgJszC2h1ZT-0'}

    @pytest.mark.unit
    @patch('chatter.api.ab_testing.get_ab_test_manager')
    async def test_list_ab_tests_success(self, mock_get_manager, client: AsyncClient, auth_headers: dict):
        """Test successful AB test listing."""
        mock_manager = AsyncMock()
        mock_manager.list_tests.return_value = {
            "tests": [
                {
                    "id": "test-1",
                    "name": "Test 1",
                    "status": "running",
                    "created_at": "2024-01-01T12:00:00Z"
                },
                {
                    "id": "test-2",
                    "name": "Test 2",
                    "status": "draft",
                    "created_at": "2024-01-01T13:00:00Z"
                }
            ],
            "total": 2,
            "page": 1,
            "per_page": 10
        }
        mock_get_manager.return_value = mock_manager
    
>       response = await client.get("/api/v1/ab-tests/", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_unit.py:207: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-536' coro=<TestABTestingUnit.test_list_ab_tests_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOV0QxMzEwWUtSTktCTjhHMDA3SyIsImVtYWlsIjoidGVzdHVzZXJhYWVjZWFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWFlY2VhIiwianRpIjoiZmUzMGY0NDEtYWIzYi00ZDhlLWE1MTAtZDAxNmM5Zjg1NmRlIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY2Niwic2Vzc2lvbl9pZCI6IjA5YjZlN2FiLTAzZDAtNGU1Zi04NTE4LTRiOThiZDVmNWZiNCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDY2fQ.mo96UBUYmE30cxUWt8Pu3ECFSV0n5eGgJszC2h1ZT-0
__________________ TestABTestingUnit.test_get_ab_test_success __________________

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d86afc0>
mock_get_manager = <AsyncMock name='get_ab_test_manager' id='140207774543184'>
client = <httpx.AsyncClient object at 0x7f84aa98aa50>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOWFczQ0FRUTZaU0hWUjM4V0VKRyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDY3fQ.SYNHnaUu0jIr7qRmQYbOIP8LhiMFziLG85RQXUFOe7A'}

    @pytest.mark.unit
    @patch('chatter.api.ab_testing.get_ab_test_manager')
    async def test_get_ab_test_success(self, mock_get_manager, client: AsyncClient, auth_headers: dict):
        """Test successful AB test retrieval."""
        mock_manager = AsyncMock()
>       mock_test = ABTestResponse(
            id="test-123",
            name="Test AB Test",
            description="Test description",
            status=TestStatus.RUNNING,
            created_by="testuser",
            variants=[{"name": "control", "allocation": 50}],
            created_at="2024-01-01T12:00:00Z",
            updated_at="2024-01-01T12:00:00Z"
        )
E       pydantic_core._pydantic_core.ValidationError: 11 validation errors for ABTestResponse
E       test_type
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       allocation_strategy
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       variants.0.description
E         Field required [type=missing, input_value={'name': 'control', 'allocation': 50}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       variants.0.configuration
E         Field required [type=missing, input_value={'name': 'control', 'allocation': 50}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       metrics
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       duration_days
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       min_sample_size
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       confidence_level
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       traffic_percentage
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       tags
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       metadata
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_ab_testing_unit.py:219: ValidationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOWFczQ0FRUTZaU0hWUjM4V0VKRyIsImVtYWlsIjoidGVzdHVzZXJhYmRlY2NAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWJkZWNjIiwianRpIjoiYWYxYmUxZDMtM2Q5NS00NWVlLWFiYzUtZjE1YzEwMDYzYTU4IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY2Nywic2Vzc2lvbl9pZCI6IjY2ZTI0ODliLWNmN2QtNGExZi1iMWE0LTk0MTAzZmYxZDMyYSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDY3fQ.SYNHnaUu0jIr7qRmQYbOIP8LhiMFziLG85RQXUFOe7A
_________________ TestABTestingUnit.test_get_ab_test_not_found _________________

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d86a1b0>
mock_get_manager = <AsyncMock name='get_ab_test_manager' id='140207772758960'>
client = <httpx.AsyncClient object at 0x7f84aa7d74d0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOWVgzNDRNRUtKNDZOVEpaM1dSWCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDY4fQ.t6G0SH4ivldi9ut6tH1euSEsoTHP70BMllZhFAvZYJM'}

    @pytest.mark.unit
    @patch('chatter.api.ab_testing.get_ab_test_manager')
    async def test_get_ab_test_not_found(self, mock_get_manager, client: AsyncClient, auth_headers: dict):
        """Test AB test retrieval for non-existent test."""
        mock_manager = AsyncMock()
        mock_manager.get_test.return_value = None
        mock_get_manager.return_value = mock_manager
    
>       response = await client.get("/api/v1/ab-tests/nonexistent", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_ab_testing_unit.py:248: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-564' coro=<TestABTestingUnit.test_get_ab_test_not_found() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFOWVgzNDRNRUtKNDZOVEpaM1dSWCIsImVtYWlsIjoidGVzdHVzZXJlYmJiYWFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWJiYmFhIiwianRpIjoiNjA0MjFhYTAtYTc5OC00MTQzLWJiOWUtYjc2MDdkNDAyODNmIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY2OCwic2Vzc2lvbl9pZCI6ImEwODkxNDZhLTI5MTgtNGI5Ni05NTFhLWZhNmZkNjU5Mjk2MSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDY4fQ.t6G0SH4ivldi9ut6tH1euSEsoTHP70BMllZhFAvZYJM
_________________ TestABTestingUnit.test_start_ab_test_success _________________

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d869670>
mock_get_manager = <AsyncMock name='get_ab_test_manager' id='140207762486336'>
client = <httpx.AsyncClient object at 0x7f84a9e09cd0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQMEpQQzlZWTJDMzgxWDQxRzY2QiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDcwfQ.TAhKMQqwFjwA6_LDIARTt4jn7OdYXrkI6nm0GKf0pl4'}

    @pytest.mark.unit
    @patch('chatter.api.ab_testing.get_ab_test_manager')
    async def test_start_ab_test_success(self, mock_get_manager, client: AsyncClient, auth_headers: dict):
        """Test successful AB test start."""
        mock_manager = AsyncMock()
>       mock_test = ABTestResponse(
            id="test-123",
            name="Test AB Test",
            description="Test description",
            status=TestStatus.DRAFT,
            created_by="testuser",
            variants=[{"name": "control", "allocation": 50}],
            created_at="2024-01-01T12:00:00Z",
            updated_at="2024-01-01T12:00:00Z"
        )
E       pydantic_core._pydantic_core.ValidationError: 11 validation errors for ABTestResponse
E       test_type
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       allocation_strategy
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       variants.0.description
E         Field required [type=missing, input_value={'name': 'control', 'allocation': 50}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       variants.0.configuration
E         Field required [type=missing, input_value={'name': 'control', 'allocation': 50}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       metrics
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       duration_days
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       min_sample_size
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       confidence_level
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       traffic_percentage
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       tags
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       metadata
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_ab_testing_unit.py:256: ValidationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQMEpQQzlZWTJDMzgxWDQxRzY2QiIsImVtYWlsIjoidGVzdHVzZXJmZWNmZmRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmVjZmZkIiwianRpIjoiMmJiZjYyYmUtNDY2OS00NzcxLWFmZTEtMDMzYTQ3ZTQ1NjY3IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY3MCwic2Vzc2lvbl9pZCI6ImFmZmFhMWNlLTBkMWYtNDc2Yy1hYWE1LWQ0M2I1ZDI5ZGNhYiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDcwfQ.TAhKMQqwFjwA6_LDIARTt4jn7OdYXrkI6nm0GKf0pl4
_____________ TestABTestingUnit.test_start_ab_test_invalid_status ______________

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d868e30>
mock_get_manager = <AsyncMock name='get_ab_test_manager' id='140207737843600'>
client = <httpx.AsyncClient object at 0x7f84a868b170>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQMUQ1WUdBNEZGVjJUQkcyRUVBWiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDcxfQ.E1zOXlpkBF4rsKyXiGhLSIqmrFQ0fYYjzaKd0JFOmRk'}

    @pytest.mark.unit
    @patch('chatter.api.ab_testing.get_ab_test_manager')
    async def test_start_ab_test_invalid_status(self, mock_get_manager, client: AsyncClient, auth_headers: dict):
        """Test starting AB test with invalid status."""
        mock_manager = AsyncMock()
>       mock_test = ABTestResponse(
            id="test-123",
            name="Test AB Test",
            description="Test description",
            status=TestStatus.RUNNING,  # Already running
            created_by="testuser",
            variants=[{"name": "control", "allocation": 50}],
            created_at="2024-01-01T12:00:00Z",
            updated_at="2024-01-01T12:00:00Z"
        )
E       pydantic_core._pydantic_core.ValidationError: 11 validation errors for ABTestResponse
E       test_type
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       allocation_strategy
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       variants.0.description
E         Field required [type=missing, input_value={'name': 'control', 'allocation': 50}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       variants.0.configuration
E         Field required [type=missing, input_value={'name': 'control', 'allocation': 50}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       metrics
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       duration_days
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       min_sample_size
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       confidence_level
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       traffic_percentage
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       tags
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       metadata
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_ab_testing_unit.py:282: ValidationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQMUQ1WUdBNEZGVjJUQkcyRUVBWiIsImVtYWlsIjoidGVzdHVzZXJlZmZlYmFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWZmZWJhIiwianRpIjoiNzFiNjAwODktNzQyNi00ODU1LTg0ZWYtYzExYmY4NDU1MTFhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY3MSwic2Vzc2lvbl9pZCI6ImFhOWYxYTNhLTQ1ZGQtNDIzNC05YzI4LWRlNmNiYTYzMTcyNSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDcxfQ.E1zOXlpkBF4rsKyXiGhLSIqmrFQ0fYYjzaKd0JFOmRk
_____________ TestABTestingUnit.test_delete_running_test_forbidden _____________

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f860d86bb90>
mock_get_manager = <AsyncMock name='get_ab_test_manager' id='140207741248256'>
client = <httpx.AsyncClient object at 0x7f84a89cb440>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQMjc3ODkxV1AwV05FSlo4MFNFQSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDcyfQ.CqnGKd3SQxMrPWZl6tchdQw8eRBicyEWpuBWKhqj0C4'}

    @pytest.mark.unit
    @patch('chatter.api.ab_testing.get_ab_test_manager')
    async def test_delete_running_test_forbidden(self, mock_get_manager, client: AsyncClient, auth_headers: dict):
        """Test that deleting running test is forbidden."""
        mock_manager = AsyncMock()
>       mock_test = ABTestResponse(
            id="test-123",
            name="Test AB Test",
            description="Test description",
            status=TestStatus.RUNNING,  # Running test
            created_by="testuser",
            variants=[{"name": "control", "allocation": 50}],
            created_at="2024-01-01T12:00:00Z",
            updated_at="2024-01-01T12:00:00Z"
        )
E       pydantic_core._pydantic_core.ValidationError: 11 validation errors for ABTestResponse
E       test_type
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       allocation_strategy
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       variants.0.description
E         Field required [type=missing, input_value={'name': 'control', 'allocation': 50}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       variants.0.configuration
E         Field required [type=missing, input_value={'name': 'control', 'allocation': 50}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       metrics
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       duration_days
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       min_sample_size
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       confidence_level
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       traffic_percentage
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       tags
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       metadata
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_ab_testing_unit.py:303: ValidationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQMjc3ODkxV1AwV05FSlo4MFNFQSIsImVtYWlsIjoidGVzdHVzZXJjZmFjYmVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2ZhY2JlIiwianRpIjoiNzdlZjE5MGMtNWYyNC00YjgzLTljYzQtM2JhNWEwYTU0MWUzIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY3Miwic2Vzc2lvbl9pZCI6IjkwNzNiYjU1LTNiNzUtNGU0Yy04MDYyLTQwN2YwZTI4ODRhOSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDcyfQ.CqnGKd3SQxMrPWZl6tchdQw8eRBicyEWpuBWKhqj0C4
___________ TestABTestingUnit.test_access_other_user_test_forbidden ____________

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f86597e8260>
mock_get_manager = <AsyncMock name='get_ab_test_manager' id='140207578414496'>
client = <httpx.AsyncClient object at 0x7f849ee7f980>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQMzBYS0gyUjE5UkhLWTA0MEFQMiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDcyfQ.Cax4R5V1XHEy7jMxW6u7reeJcsMYTkQiehyyBLmmtVo'}

    @pytest.mark.unit
    @patch('chatter.api.ab_testing.get_ab_test_manager')
    async def test_access_other_user_test_forbidden(self, mock_get_manager, client: AsyncClient, auth_headers: dict):
        """Test that accessing other user's test is forbidden."""
        mock_manager = AsyncMock()
>       mock_test = ABTestResponse(
            id="test-123",
            name="Test AB Test",
            description="Test description",
            status=TestStatus.DRAFT,
            created_by="otheruser",  # Different user
            variants=[{"name": "control", "allocation": 50}],
            created_at="2024-01-01T12:00:00Z",
            updated_at="2024-01-01T12:00:00Z"
        )
E       pydantic_core._pydantic_core.ValidationError: 11 validation errors for ABTestResponse
E       test_type
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       allocation_strategy
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       variants.0.description
E         Field required [type=missing, input_value={'name': 'control', 'allocation': 50}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       variants.0.configuration
E         Field required [type=missing, input_value={'name': 'control', 'allocation': 50}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       metrics
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       duration_days
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       min_sample_size
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       confidence_level
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       traffic_percentage
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       tags
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       metadata
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_ab_testing_unit.py:324: ValidationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQMzBYS0gyUjE5UkhLWTA0MEFQMiIsImVtYWlsIjoidGVzdHVzZXJmZmNmZWFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmZjZmVhIiwianRpIjoiMWI1OTgxZDYtMTJlZS00OTRjLTlhMTQtZWIxZmZkNjdjZDEyIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY3Miwic2Vzc2lvbl9pZCI6IjAyYzk0NmFhLTAwMDMtNDk0NS05YjAxLTVmZTU2YWFkZTQwMyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDcyfQ.Cax4R5V1XHEy7jMxW6u7reeJcsMYTkQiehyyBLmmtVo
__________________ TestABTestingUnit.test_get_results_success __________________

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f86597e8350>
mock_get_manager = <AsyncMock name='get_ab_test_manager' id='140207743815408'>
client = <httpx.AsyncClient object at 0x7f84a8c7bd70>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQNFM0VlJGVEhQMUoyMVZCSDU0WCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDc0fQ.xfdDDu-poKHPb_0md9bDr3hQ84yZMoS2rNXIv6-6k28'}

    @pytest.mark.unit
    @patch('chatter.api.ab_testing.get_ab_test_manager')
    async def test_get_results_success(self, mock_get_manager, client: AsyncClient, auth_headers: dict):
        """Test successful results retrieval."""
        mock_manager = AsyncMock()
>       mock_test = ABTestResponse(
            id="test-123",
            name="Test AB Test",
            description="Test description",
            status=TestStatus.COMPLETED,
            created_by="testuser",
            variants=[{"name": "control", "allocation": 50}],
            created_at="2024-01-01T12:00:00Z",
            updated_at="2024-01-01T12:00:00Z"
        )
E       pydantic_core._pydantic_core.ValidationError: 11 validation errors for ABTestResponse
E       test_type
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       allocation_strategy
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       variants.0.description
E         Field required [type=missing, input_value={'name': 'control', 'allocation': 50}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       variants.0.configuration
E         Field required [type=missing, input_value={'name': 'control', 'allocation': 50}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       metrics
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       duration_days
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       min_sample_size
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       confidence_level
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       traffic_percentage
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       tags
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       metadata
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_ab_testing_unit.py:345: ValidationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQNFM0VlJGVEhQMUoyMVZCSDU0WCIsImVtYWlsIjoidGVzdHVzZXJjYmRmZmRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2JkZmZkIiwianRpIjoiMzZkZDVhMDItNTQ2Ni00OGIxLWJhMjQtOGI3ZmQzMDIyNWNkIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY3NCwic2Vzc2lvbl9pZCI6IjlmYTYyNGJhLTNjNjUtNDZmMC1hMThkLWYyZThiYTcwZWYyOCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDc0fQ.xfdDDu-poKHPb_0md9bDr3hQ84yZMoS2rNXIv6-6k28
__________________ TestABTestingUnit.test_get_metrics_success __________________

self = <tests.test_ab_testing_unit.TestABTestingUnit object at 0x7f86597e8710>
mock_get_manager = <AsyncMock name='get_ab_test_manager' id='140207585700480'>
client = <httpx.AsyncClient object at 0x7f849f5f44a0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQNVRZOVZZMVBTUkRSMzE3V1I2QSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDc1fQ.n8ZkMUEW9G-Zn3hxNxOOZFtIkel6iqd9_E-LYpWyE7E'}

    @pytest.mark.unit
    @patch('chatter.api.ab_testing.get_ab_test_manager')
    async def test_get_metrics_success(self, mock_get_manager, client: AsyncClient, auth_headers: dict):
        """Test successful metrics retrieval."""
        mock_manager = AsyncMock()
>       mock_test = ABTestResponse(
            id="test-123",
            name="Test AB Test",
            description="Test description",
            status=TestStatus.RUNNING,
            created_by="testuser",
            variants=[{"name": "control", "allocation": 50}],
            created_at="2024-01-01T12:00:00Z",
            updated_at="2024-01-01T12:00:00Z"
        )
E       pydantic_core._pydantic_core.ValidationError: 11 validation errors for ABTestResponse
E       test_type
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       allocation_strategy
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       variants.0.description
E         Field required [type=missing, input_value={'name': 'control', 'allocation': 50}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       variants.0.configuration
E         Field required [type=missing, input_value={'name': 'control', 'allocation': 50}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       metrics
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       duration_days
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       min_sample_size
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       confidence_level
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       traffic_percentage
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       tags
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       metadata
E         Field required [type=missing, input_value={'id': 'test-123', 'name'... '2024-01-01T12:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_ab_testing_unit.py:382: ValidationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQNVRZOVZZMVBTUkRSMzE3V1I2QSIsImVtYWlsIjoidGVzdHVzZXJlYmFjY2RAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWJhY2NkIiwianRpIjoiYTBjMDVhNDctYjJiOC00OTJjLTk5OWUtNTMxMjdhMDJkMWI0IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY3NSwic2Vzc2lvbl9pZCI6IjEyYzRlMmY1LTcyNWEtNGU4NS04M2NkLTNmNzdjZTMwMGExMCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDc1fQ.n8ZkMUEW9G-Zn3hxNxOOZFtIkel6iqd9_E-LYpWyE7E
_____________ TestAgentsIntegration.test_agent_complete_lifecycle ______________

self = <tests.test_agents_integration.TestAgentsIntegration object at 0x7f86597e9790>
client = <httpx.AsyncClient object at 0x7f849f828680>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQNlhQSFRKQzBKSzJXMzlYQks1VyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDc2fQ.1k5IJtuq_JxpzfB28_RAgtmiYFedH4TETCbC-vhmvxk'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f849f5f5cd0>

    @pytest.mark.integration
    async def test_agent_complete_lifecycle(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test complete agent lifecycle from creation to deletion."""
        # Create agent
        agent_data = {
            "name": "Integration Test Agent",
            "description": "Agent for integration testing",
            "agent_type": "chat",
            "configuration": {
                "model": "gpt-3.5-turbo",
                "temperature": 0.7,
                "max_tokens": 1000,
                "system_prompt": "You are a helpful assistant for testing."
            },
            "capabilities": ["text_generation", "conversation"],
            "metadata": {
                "test_mode": True,
                "environment": "integration"
            }
        }
    
>       create_response = await client.post("/api/v1/agents/", json=agent_data, headers=auth_headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_integration.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-662' coro=<TestAgentsIntegration.test_agent_complete_lifecycle() running at /home/yam/chatter/tests/test_agents_integration.py:33> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQNlhQSFRKQzBKSzJXMzlYQks1VyIsImVtYWlsIjoidGVzdHVzZXJiYmJjYmJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmJiY2JiIiwianRpIjoiYTg0NWVmNzAtOTNiZS00YjFhLWIwNzgtNGE0YmQwYmE4NTAzIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY3Niwic2Vzc2lvbl9pZCI6IjEzMTIzNTAyLTNlMWEtNDMwMy1hMWU5LWJjNTBjMGNlZjU5OSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDc2fQ.1k5IJtuq_JxpzfB28_RAgtmiYFedH4TETCbC-vhmvxk
______________ TestAgentsIntegration.test_agents_list_and_filter _______________

self = <tests.test_agents_integration.TestAgentsIntegration object at 0x7f86597e9ac0>
client = <httpx.AsyncClient object at 0x7f849fa1b1d0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQOERLRVhFQjI4UkQ4NVI0MzBNOSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDc4fQ.xv9BEj3-9bMDbciKMiFLB41NybcNawrj-FaHDxtRCo8'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f849f7c31a0>

    @pytest.mark.integration
    async def test_agents_list_and_filter(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test agent listing and filtering functionality."""
        # Create agents with different types
        agents_to_create = [
            {
                "name": "Chat Agent",
                "description": "Agent for chat interactions",
                "agent_type": "chat",
                "configuration": {"model": "gpt-3.5-turbo"}
            },
            {
                "name": "Assistant Agent",
                "description": "General assistant agent",
                "agent_type": "assistant",
                "configuration": {"model": "gpt-4"}
            },
            {
                "name": "Code Agent",
                "description": "Agent for code assistance",
                "agent_type": "coding",
                "configuration": {"model": "gpt-4", "temperature": 0.2}
            }
        ]
    
        created_agent_ids = []
    
        for agent_data in agents_to_create:
>           response = await client.post("/api/v1/agents/", json=agent_data, headers=auth_headers)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_integration.py:123: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-676' coro=<TestAgentsIntegration.test_agents_list_and_filter() running at /home/yam/chatter/tests/test_agents_integration.py:123> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQOERLRVhFQjI4UkQ4NVI0MzBNOSIsImVtYWlsIjoidGVzdHVzZXJhYWZhZGVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWFmYWRlIiwianRpIjoiODA0OGExNzgtMzJjMC00MGIyLThmNTUtM2M4ODE1MzcxMmE2IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY3OCwic2Vzc2lvbl9pZCI6IjI5YzcwMDdiLWMzZDAtNDI2Zi1iYjMxLTMzMWUwZWRkYTZmNyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDc4fQ.xv9BEj3-9bMDbciKMiFLB41NybcNawrj-FaHDxtRCo8
_____________ TestAgentsIntegration.test_agent_templates_workflow ______________

self = <tests.test_agents_integration.TestAgentsIntegration object at 0x7f860d86bec0>
client = <httpx.AsyncClient object at 0x7f849fcb4350>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQQTRKSFRaRjVTUzBFOEhSTUJFWiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDgwfQ.hO8bHdQIIPTXyrBRp1HWx-p03SXRL4XU_cL74X2HLFQ'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84a8f98410>

    @pytest.mark.integration
    async def test_agent_templates_workflow(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test agent templates functionality."""
        # Get available templates
>       templates_response = await client.get("/api/v1/agents/templates", headers=auth_headers)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_integration.py:157: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-690' coro=<TestAgentsIntegration.test_agent_templates_workflow() running at /home/yam/chatter/tests/test_agents_integration.py:157> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQQTRKSFRaRjVTUzBFOEhSTUJFWiIsImVtYWlsIjoidGVzdHVzZXJmYmRhZmNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmJkYWZjIiwianRpIjoiNTExM2EwOWEtOTE3Yi00ODZiLThhY2UtYzVhNDA2ZWQyNWI4IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY4MCwic2Vzc2lvbl9pZCI6IjJiNTJlMDhhLTljNDYtNDAyYS04NzQ1LTgxMjhlZDFiMTQzYSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDgwfQ.hO8bHdQIIPTXyrBRp1HWx-p03SXRL4XU_cL74X2HLFQ
_______________ TestAgentsIntegration.test_bulk_agent_operations _______________

self = <tests.test_agents_integration.TestAgentsIntegration object at 0x7f860d868a10>
client = <httpx.AsyncClient object at 0x7f84a8225190>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQQkhRUEpRTkY5OTlNWFdXVjFURyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDgxfQ.zU7eMDLlxP4su-F103-9EEMS2ZZC8WqgrQ1xuUcxUxc'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f849f196630>

    @pytest.mark.integration
    async def test_bulk_agent_operations(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test bulk agent operations."""
        # Bulk create agents
        bulk_create_data = {
            "agents": [
                {
                    "name": "Bulk Agent 1",
                    "description": "First bulk created agent",
                    "agent_type": "chat",
                    "configuration": {"model": "gpt-3.5-turbo"}
                },
                {
                    "name": "Bulk Agent 2",
                    "description": "Second bulk created agent",
                    "agent_type": "assistant",
                    "configuration": {"model": "gpt-4"}
                },
                {
                    "name": "Bulk Agent 3",
                    "description": "Third bulk created agent",
                    "agent_type": "coding",
                    "configuration": {"model": "gpt-4", "temperature": 0.1}
                }
            ]
        }
    
>       bulk_create_response = await client.post("/api/v1/agents/bulk", json=bulk_create_data, headers=auth_headers)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_integration.py:217: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-704' coro=<TestAgentsIntegration.test_bulk_agent_operations() running at /home/yam/chatter/tests/test_agents_integration.py:217> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQQkhRUEpRTkY5OTlNWFdXVjFURyIsImVtYWlsIjoidGVzdHVzZXJiZGFmYWFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmRhZmFhIiwianRpIjoiNzk5ODI0NWEtNzVmYy00NDA2LWE3NGMtMjNkOWUyNjY0YmQ5IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY4MSwic2Vzc2lvbl9pZCI6ImY5MzVjNjk3LTgxOGUtNDVjNi1iOTQ4LWRlNTc2N2Q4MjBjNiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDgxfQ.zU7eMDLlxP4su-F103-9EEMS2ZZC8WqgrQ1xuUcxUxc
____________ TestAgentsIntegration.test_agent_testing_functionality ____________

self = <tests.test_agents_integration.TestAgentsIntegration object at 0x7f86597e9c10>
client = <httpx.AsyncClient object at 0x7f84a9902810>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQQ1RXODAwSk5XRUJTOVRNSEFQWCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDgyfQ.a59doelSy9gLRCgGCvAySxITDkigTtRStb-UirWbLzI'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84a827bc80>

    @pytest.mark.integration
    async def test_agent_testing_functionality(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test agent testing functionality end-to-end."""
        # Create a test agent
        agent_data = {
            "name": "Testing Agent",
            "description": "Agent for testing functionality",
            "agent_type": "chat",
            "configuration": {
                "model": "gpt-3.5-turbo",
                "temperature": 0.7,
                "system_prompt": "You are a test assistant. Always respond helpfully."
            }
        }
    
>       create_response = await client.post("/api/v1/agents/", json=agent_data, headers=auth_headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_integration.py:256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-718' coro=<TestAgentsIntegration.test_agent_testing_functionality() running at /home/yam/chatter/tests/test_agents_integration.py:256> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQQ1RXODAwSk5XRUJTOVRNSEFQWCIsImVtYWlsIjoidGVzdHVzZXJlZmVmY2JAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWZlZmNiIiwianRpIjoiYjk5Y2QyYjMtMWYwOS00ZGI3LThlMGItOTZkMDA2ZDU4OGRkIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY4Miwic2Vzc2lvbl9pZCI6IjUyZWM0NmNkLWZiMTgtNGRlMS1hMjhiLWRkZmIxYTgyMzMzZSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDgyfQ.a59doelSy9gLRCgGCvAySxITDkigTtRStb-UirWbLzI
______________ TestAgentsIntegration.test_agent_health_monitoring ______________

self = <tests.test_agents_integration.TestAgentsIntegration object at 0x7f86597e97c0>
client = <httpx.AsyncClient object at 0x7f84a9ef7d70>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQRTNKWFkzS0I5U0FLNU45VDNaVyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDg0fQ.-RF_HJ_Xa8yJpr_3Q__kTIoC_mU1k6XMOYI5YPkUeYE'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84a86aaf90>

    @pytest.mark.integration
    async def test_agent_health_monitoring(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test agent health monitoring functionality."""
        # Create agent for health testing
        agent_data = {
            "name": "Health Monitor Agent",
            "description": "Agent for health monitoring tests",
            "agent_type": "chat",
            "configuration": {"model": "gpt-3.5-turbo"}
        }
    
>       create_response = await client.post("/api/v1/agents/", json=agent_data, headers=auth_headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_integration.py:304: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-732' coro=<TestAgentsIntegration.test_agent_health_monitoring() running at /home/yam/chatter/tests/test_agents_integration.py:304> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQRTNKWFkzS0I5U0FLNU45VDNaVyIsImVtYWlsIjoidGVzdHVzZXJlZmFmYWJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWZhZmFiIiwianRpIjoiYTU4NDdhM2QtYWY0MC00NTlhLWI5Y2YtOWE5ZjFiY2JmNWE1IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY4NCwic2Vzc2lvbl9pZCI6ImM4MDk5ZGI4LWYwZWEtNDk2ZS1iZDZkLWYzM2U5OGNkMGVjMyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDg0fQ.-RF_HJ_Xa8yJpr_3Q__kTIoC_mU1k6XMOYI5YPkUeYE
_______________ TestAgentsIntegration.test_agent_error_scenarios _______________

self = <tests.test_agents_integration.TestAgentsIntegration object at 0x7f86597e8080>
client = <httpx.AsyncClient object at 0x7f84a8c79910>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQRlI4UDdBWjBUWVlWNU5GMFYzUyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDg1fQ.1jKepNFiKf1UzPylBFOkKyCrrLg17104qUGe_1dpqUg'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84a88c2240>

    @pytest.mark.integration
    async def test_agent_error_scenarios(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test agent error handling scenarios."""
        # Test non-existent agent operations
        nonexistent_id = "nonexistent-agent-id"
    
        operations = [
            ("GET", f"/api/v1/agents/{nonexistent_id}"),
            ("PUT", f"/api/v1/agents/{nonexistent_id}"),
            ("DELETE", f"/api/v1/agents/{nonexistent_id}"),
            ("POST", f"/api/v1/agents/{nonexistent_id}/test"),
            ("GET", f"/api/v1/agents/{nonexistent_id}/health"),
        ]
    
        for method, url in operations:
            if method == "GET":
>               response = await client.get(url, headers=auth_headers)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_integration.py:347: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-746' coro=<TestAgentsIntegration.test_agent_error_scenarios() running at /home/yam/chatter/tests/test_agents_integration.py:347> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQRlI4UDdBWjBUWVlWNU5GMFYzUyIsImVtYWlsIjoidGVzdHVzZXJmY2VhZmRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmNlYWZkIiwianRpIjoiM2ExMzliMDQtOTZjMy00NWMzLTg5NGUtNjg0M2Q2NjY5MWIwIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY4NSwic2Vzc2lvbl9pZCI6IjFjZWE1ZmZiLTI3YzMtNDIzMy04NzU2LTRkODAzNWU5YzQ0YSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDg1fQ.1jKepNFiKf1UzPylBFOkKyCrrLg17104qUGe_1dpqUg
_______________ TestAgentsIntegration.test_agent_data_validation _______________

self = <tests.test_agents_integration.TestAgentsIntegration object at 0x7f86597ea5a0>
client = <httpx.AsyncClient object at 0x7f849f18b5f0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQSDE1RjAxSjFTV1lFR1BRNjE3MiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDg3fQ.W3hFC3hNu-2qiEnhcXsEMTvWt1QQoiot6I3Dg66R5Xc'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f849ff5f0b0>

    @pytest.mark.integration
    async def test_agent_data_validation(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test agent data validation in integration environment."""
        # Test invalid agent type
        invalid_type_data = {
            "name": "Invalid Type Agent",
            "description": "Agent with invalid type",
            "agent_type": "invalid_type_xyz",
            "configuration": {"model": "gpt-3.5-turbo"}
        }
    
>       response = await client.post("/api/v1/agents/", json=invalid_type_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_integration.py:369: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-760' coro=<TestAgentsIntegration.test_agent_data_validation() running at /home/yam/chatter/tests/test_agents_integration.py:369> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQSDE1RjAxSjFTV1lFR1BRNjE3MiIsImVtYWlsIjoidGVzdHVzZXJhYWJkZmJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWFiZGZiIiwianRpIjoiMjM2NDBmNGYtY2U4Yi00NzcwLTgzMjgtOTczNDAxMGZjZTdlIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY4Nywic2Vzc2lvbl9pZCI6ImRjYTMyOTY0LTkwOWQtNDU5Yy1hZGU5LTYxNjYyMGMzYzhlZSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDg3fQ.W3hFC3hNu-2qiEnhcXsEMTvWt1QQoiot6I3Dg66R5Xc
____________ TestAgentsIntegration.test_concurrent_agent_operations ____________

self = <tests.test_agents_integration.TestAgentsIntegration object at 0x7f86597ea960>
client = <httpx.AsyncClient object at 0x7f84a83863c0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQSjlGVlpFUVAzUkdNNlFKQjc3VCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDg4fQ.m7kxUt6aspPr7uS_hqDogss9hKJJcjRiQj0SdXsiGWw'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f849f4c9490>

    @pytest.mark.integration
    async def test_concurrent_agent_operations(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test concurrent agent operations."""
        # Create multiple agents concurrently
        agent_data_list = [
            {
                "name": f"Concurrent Agent {i}",
                "description": f"Agent created concurrently {i}",
                "agent_type": "chat",
                "configuration": {
                    "model": "gpt-3.5-turbo",
                    "temperature": 0.5 + (i * 0.1)
                }
            }
            for i in range(5)
        ]
    
        # Create tasks for concurrent agent creation
        create_tasks = [
            asyncio.create_task(client.post("/api/v1/agents/", json=agent_data, headers=auth_headers))
            for agent_data in agent_data_list
        ]
    
        # Wait for all creations
>       create_responses = await asyncio.gather(*create_tasks)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_integration.py:417: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-775' coro=<AsyncClient.post() running at /home/yam/.local/lib/python3.12/site-packages/httpx/_client.py:1859> cb=[gather.<locals>._done_callback() at /usr/lib64/python3.12/asyncio/tasks.py:767]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQSjlGVlpFUVAzUkdNNlFKQjc3VCIsImVtYWlsIjoidGVzdHVzZXJlYmJjYWNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWJiY2FjIiwianRpIjoiYjI0ZTBlYTAtZGI4Ni00N2EyLWJjMGYtOTJkMDY2NGZkYWMxIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY4OCwic2Vzc2lvbl9pZCI6IjJhZWM2ZTI2LTM3ODQtNDcxOS04YjRjLTRmNWYxYzM3ZTY2MyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDg4fQ.m7kxUt6aspPr7uS_hqDogss9hKJJcjRiQj0SdXsiGWw
____________ TestAgentsIntegration.test_agent_complex_configuration ____________

self = <tests.test_agents_integration.TestAgentsIntegration object at 0x7f86597ead20>
client = <httpx.AsyncClient object at 0x7f849f60a780>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQS1pKV0ZFSzNaWEdaQURSU0ZXSyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDkwfQ.4Mu1cjs23laTzrFomrqDiDg0_ErhonhcyyXbCiNLGfA'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f849e0f3830>

    @pytest.mark.integration
    async def test_agent_complex_configuration(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test agents with complex configurations."""
        # Create agent with complex configuration
        complex_agent_data = {
            "name": "Complex Configuration Agent",
            "description": "Agent with advanced configuration options",
            "agent_type": "assistant",
            "configuration": {
                "model": "gpt-4",
                "temperature": 0.8,
                "max_tokens": 2048,
                "top_p": 0.9,
                "frequency_penalty": 0.1,
                "presence_penalty": 0.2,
                "system_prompt": "You are an expert AI assistant with advanced capabilities. Provide detailed and accurate responses.",
                "custom_parameters": {
                    "response_format": "detailed",
                    "context_window": 4096,
                    "safety_level": "moderate"
                }
            },
            "capabilities": [
                "text_generation",
                "conversation",
                "analysis",
                "summarization"
            ],
            "metadata": {
                "version": "1.0",
                "created_for": "integration_testing",
                "features": {
                    "streaming": True,
                    "function_calling": False,
                    "multi_turn": True
                }
            }
        }
    
        # Create agent
>       create_response = await client.post("/api/v1/agents/", json=complex_agent_data, headers=auth_headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_integration.py:497: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-793' coro=<TestAgentsIntegration.test_agent_complex_configuration() running at /home/yam/chatter/tests/test_agents_integration.py:497> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQS1pKV0ZFSzNaWEdaQURSU0ZXSyIsImVtYWlsIjoidGVzdHVzZXJiYWZmYmVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmFmZmJlIiwianRpIjoiOTU1NGNhNzctNGU4MS00YTZjLWJhMzYtNjQ2ZjBjYmM5YTVkIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjY5MCwic2Vzc2lvbl9pZCI6IjdhNTU5NjZmLTg0Y2UtNGQ5Ni04MDU1LTZmYjRhMDMyNDc3MSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDkwfQ.4Mu1cjs23laTzrFomrqDiDg0_ErhonhcyyXbCiNLGfA
________________ TestAgentsUnit.test_create_agent_requires_auth ________________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849d78a180>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849d78a180>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_agents_unit.TestAgentsUnit object at 0x7f86597ea930>
client = <httpx.AsyncClient object at 0x7f849d789550>

    @pytest.mark.unit
    async def test_create_agent_requires_auth(self, client: AsyncClient):
        """Test that creating agent requires authentication."""
        agent_data = {
            "name": "Test Agent",
            "description": "Test agent description",
            "agent_type": "chat"
        }
    
>       response = await client.post("/api/v1/agents/", json=agent_data)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_unit.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849d78a180>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:51.409920Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35ma9c1fc46-fe12-4dae-b8a3-166265b43141[0m [36mstatus_code[0m=[35m401[0m
________________ TestAgentsUnit.test_list_agents_requires_auth _________________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849e111040>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849e111040>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_agents_unit.TestAgentsUnit object at 0x7f860d86bc80>
client = <httpx.AsyncClient object at 0x7f849e110350>

    @pytest.mark.unit
    async def test_list_agents_requires_auth(self, client: AsyncClient):
        """Test that listing agents requires authentication."""
>       response = await client.get("/api/v1/agents/")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_unit.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849e111040>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:52.234218Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m15d1f4b9-9996-45a1-a5cb-4798381a5401[0m [36mstatus_code[0m=[35m401[0m
____________ TestAgentsUnit.test_get_agent_templates_requires_auth _____________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849e6180e0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849e6180e0>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_agents_unit.TestAgentsUnit object at 0x7f86597d09e0>
client = <httpx.AsyncClient object at 0x7f849e6f7440>

    @pytest.mark.unit
    async def test_get_agent_templates_requires_auth(self, client: AsyncClient):
        """Test that getting agent templates requires authentication."""
>       response = await client.get("/api/v1/agents/templates")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_unit.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849e6180e0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:53.052696Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35ma52f5f29-b2bc-4502-8fa0-30bfd038ee49[0m [36mstatus_code[0m=[35m401[0m
_________________ TestAgentsUnit.test_get_agent_requires_auth __________________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849d886e70>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849d886e70>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_agents_unit.TestAgentsUnit object at 0x7f86597d0da0>
client = <httpx.AsyncClient object at 0x7f849d886360>

    @pytest.mark.unit
    async def test_get_agent_requires_auth(self, client: AsyncClient):
        """Test that getting specific agent requires authentication."""
>       response = await client.get("/api/v1/agents/agent-id")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_unit.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849d886e70>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:53.987923Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m0d0a81fb-9977-4b5d-b7ef-588eac409814[0m [36mstatus_code[0m=[35m401[0m
________________ TestAgentsUnit.test_update_agent_requires_auth ________________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849e96dd90>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849e96dd90>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_agents_unit.TestAgentsUnit object at 0x7f86597d1160>
client = <httpx.AsyncClient object at 0x7f849e96d070>

    @pytest.mark.unit
    async def test_update_agent_requires_auth(self, client: AsyncClient):
        """Test that updating agent requires authentication."""
>       response = await client.put("/api/v1/agents/agent-id", json={})
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_unit.py:44: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1896: in put
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849e96dd90>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:55.076562Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35mfcf74df4-a02f-4df6-b85f-c20e6cca741f[0m [36mstatus_code[0m=[35m401[0m
________________ TestAgentsUnit.test_delete_agent_requires_auth ________________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849e99c740>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849e99c740>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_agents_unit.TestAgentsUnit object at 0x7f86597d1520>
client = <httpx.AsyncClient object at 0x7f849e96fc20>

    @pytest.mark.unit
    async def test_delete_agent_requires_auth(self, client: AsyncClient):
        """Test that deleting agent requires authentication."""
>       response = await client.delete("/api/v1/agents/agent-id")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_unit.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1966: in delete
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849e99c740>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:56.586015Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35maed4ea6c-4cf3-41cc-975e-5ae1f546fc7e[0m [36mstatus_code[0m=[35m401[0m
_________________ TestAgentsUnit.test_test_agent_requires_auth _________________

self = <tests.test_agents_unit.TestAgentsUnit object at 0x7f86597d18e0>
client = <httpx.AsyncClient object at 0x7f849d4d6b10>

    @pytest.mark.unit
    async def test_test_agent_requires_auth(self, client: AsyncClient):
        """Test that testing agent requires authentication."""
        response = await client.post("/api/v1/agents/agent-id/test", json={})
>       assert response.status_code == 401
E       assert 404 == 401
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_agents_unit.py:57: AssertionError
______________ TestAgentsUnit.test_get_agent_health_requires_auth ______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849da58530>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849da58530>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_agents_unit.TestAgentsUnit object at 0x7f86597d1ca0>
client = <httpx.AsyncClient object at 0x7f849da0b9b0>

    @pytest.mark.unit
    async def test_get_agent_health_requires_auth(self, client: AsyncClient):
        """Test that getting agent health requires authentication."""
>       response = await client.get("/api/v1/agents/agent-id/health")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_unit.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849da58530>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:58.527538Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m69ddfe08-30be-46a5-aed8-b3c4880487d8[0m [36mstatus_code[0m=[35m401[0m
_____________ TestAgentsUnit.test_bulk_create_agents_requires_auth _____________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84aba171d0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84aba171d0>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_agents_unit.TestAgentsUnit object at 0x7f86597d2060>
client = <httpx.AsyncClient object at 0x7f84aba164e0>

    @pytest.mark.unit
    async def test_bulk_create_agents_requires_auth(self, client: AsyncClient):
        """Test that bulk creating agents requires authentication."""
>       response = await client.post("/api/v1/agents/bulk", json={})
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_unit.py:68: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84aba171d0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:04:59.581949Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35mce4746f3-d26f-4dbb-9040-cacb1cef7f28[0m [36mstatus_code[0m=[35m401[0m
_____________ TestAgentsUnit.test_bulk_delete_agents_requires_auth _____________

self = <tests.test_agents_unit.TestAgentsUnit object at 0x7f86597d2420>
client = <httpx.AsyncClient object at 0x7f849e29d520>

    @pytest.mark.unit
    async def test_bulk_delete_agents_requires_auth(self, client: AsyncClient):
        """Test that bulk deleting agents requires authentication."""
        import json
>       response = await client.delete(
            "/api/v1/agents/bulk",
            content=json.dumps({"agent_ids": ["test-id"]}),
            headers={"Content-Type": "application/json"}
        )
E       TypeError: AsyncClient.delete() got an unexpected keyword argument 'content'

tests/test_agents_unit.py:75: TypeError
___________________ TestAgentsUnit.test_create_agent_success ___________________

self = <Coroutine test_create_agent_success>

    def runtest(self) -> None:
        synchronized_obj = wrap_in_sync(self.obj)
        with MonkeyPatch.context() as c:
            c.setattr(self, "obj", synchronized_obj)
>           super().runtest()

../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:426: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:642: in inner
    _loop.run_until_complete(task)
/usr/lib64/python3.12/asyncio/base_events.py:691: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1410: in patched
    with self.decoration_helper(patched,
/usr/lib64/python3.12/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1375: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/contextlib.py:526: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1467: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f86597eb9b0>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'chatter.api.agents' from '/home/yam/chatter/chatter/api/agents.py'> does not have the attribute 'AgentService'

/usr/lib64/python3.12/unittest/mock.py:1437: AttributeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQWVdQMjY2RFc2R1MySjRNMkswQSIsImVtYWlsIjoidGVzdHVzZXJhZmZjYmVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWZmY2JlIiwianRpIjoiZDcxZGViMjctZmEwMy00MzQ4LTk0NTMtYjQxNjgyNDE4MjM1IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcwMSwic2Vzc2lvbl9pZCI6IjA1NmFjYzkwLWFiMTEtNGQ0YS1hYzQ3LTQzZDg1Yjk4MzBhOSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTAxfQ.2Jbvw6hXhmbb0RsIcFQEuZTxa6fAGkmF32MxDfAR5Yg
________________ TestAgentsUnit.test_create_agent_invalid_data _________________

self = <tests.test_agents_unit.TestAgentsUnit object at 0x7f86597d2bd0>
client = <httpx.AsyncClient object at 0x7f849d29cbc0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQWlYzUTNRNDc2QzdWS1cxQUs1USIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTAyfQ.0uG-Y9X6GOqtllHu1zmJNziRun68E-7jRThUGYIAfsk'}

    @pytest.mark.unit
    async def test_create_agent_invalid_data(self, client: AsyncClient, auth_headers: dict):
        """Test agent creation with invalid data."""
        # Missing required fields
        agent_data = {
            "description": "Test agent description"
            # Missing name and agent_type
        }
    
>       response = await client.post("/api/v1/agents/", json=agent_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_agents_unit.py:129: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-951' coro=<TestAgentsUnit.test_create_agent_invalid_data() running at /home/yam/chatter/tests/test_agents_unit.py:129> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFQWlYzUTNRNDc2QzdWS1cxQUs1USIsImVtYWlsIjoidGVzdHVzZXJjYWViZWJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2FlYmViIiwianRpIjoiOTUxMjRiOGQtZWY3Ny00YzNhLTljYmYtMzc4Njg4ZWUwODI0IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcwMiwic2Vzc2lvbl9pZCI6IjcwMzBmNTMwLTY3NDEtNDM0ZS1hNzliLTkyNjA3ODg3ZWExOCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTAyfQ.0uG-Y9X6GOqtllHu1zmJNziRun68E-7jRThUGYIAfsk
___________________ TestAgentsUnit.test_list_agents_success ____________________

self = <Coroutine test_list_agents_success>

    def runtest(self) -> None:
        synchronized_obj = wrap_in_sync(self.obj)
        with MonkeyPatch.context() as c:
            c.setattr(self, "obj", synchronized_obj)
>           super().runtest()

../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:426: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:642: in inner
    _loop.run_until_complete(task)
/usr/lib64/python3.12/asyncio/base_events.py:691: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1410: in patched
    with self.decoration_helper(patched,
/usr/lib64/python3.12/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1375: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/contextlib.py:526: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1467: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f86597ebb00>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'chatter.api.agents' from '/home/yam/chatter/chatter/api/agents.py'> does not have the attribute 'AgentService'

/usr/lib64/python3.12/unittest/mock.py:1437: AttributeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRMU02MzRDWVZaMDNKQ1M1V0E4RiIsImVtYWlsIjoidGVzdHVzZXJiY2RjYmJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmNkY2JiIiwianRpIjoiOTI0ODEwOWItMTYzZi00NTQ0LWI0YTItZGYwZGMzODE5YjQzIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcwNCwic2Vzc2lvbl9pZCI6ImZlMDBmNTIwLWUwNWMtNGY1OC05MDVhLWIxNzY5NjkzZmFkNiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTA0fQ.UC50YzRq2mXsOfDQuGKWDQ0Xq_zGsNUHhcGfXFrJgkY
_______________ TestAgentsUnit.test_get_agent_templates_success ________________

self = <Coroutine test_get_agent_templates_success>

    def runtest(self) -> None:
        synchronized_obj = wrap_in_sync(self.obj)
        with MonkeyPatch.context() as c:
            c.setattr(self, "obj", synchronized_obj)
>           super().runtest()

../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:426: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:642: in inner
    _loop.run_until_complete(task)
/usr/lib64/python3.12/asyncio/base_events.py:691: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1410: in patched
    with self.decoration_helper(patched,
/usr/lib64/python3.12/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1375: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/contextlib.py:526: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1467: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f86597ebbf0>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'chatter.api.agents' from '/home/yam/chatter/chatter/api/agents.py'> does not have the attribute 'AgentService'

/usr/lib64/python3.12/unittest/mock.py:1437: AttributeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRMkpWRkVGUTZFNTdBMFlSS1FSSiIsImVtYWlsIjoidGVzdHVzZXJiZWZjYWJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmVmY2FiIiwianRpIjoiMzI4YzM5NzctNmY1My00M2M1LWIyNjgtMWVkM2QyZmFiNGJkIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcwNSwic2Vzc2lvbl9pZCI6IjhmNmJjYTVlLWM1NWItNDhiMi05NDNmLWVmMzY5ZGZmNTQ4NCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTA1fQ.XYbcN5G-aHjgW68gVaqb6VBNWrvS-EjbIqMbRHNeWbQ
____________________ TestAgentsUnit.test_get_agent_success _____________________

self = <Coroutine test_get_agent_success>

    def runtest(self) -> None:
        synchronized_obj = wrap_in_sync(self.obj)
        with MonkeyPatch.context() as c:
            c.setattr(self, "obj", synchronized_obj)
>           super().runtest()

../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:426: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:642: in inner
    _loop.run_until_complete(task)
/usr/lib64/python3.12/asyncio/base_events.py:691: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1410: in patched
    with self.decoration_helper(patched,
/usr/lib64/python3.12/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1375: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/contextlib.py:526: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1467: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f86597ebd10>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'chatter.api.agents' from '/home/yam/chatter/chatter/api/agents.py'> does not have the attribute 'AgentService'

/usr/lib64/python3.12/unittest/mock.py:1437: AttributeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRM0dUWkZSRFg2RjVQUkRUQ1lYMyIsImVtYWlsIjoidGVzdHVzZXJmYmZjZWVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmJmY2VlIiwianRpIjoiNzBjM2EzYmMtNGIwOC00OGI3LTgzNzAtNTA4YmFhNDZjZTFmIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcwNiwic2Vzc2lvbl9pZCI6IjllMzZhMGE5LTY2ZjAtNDNjOS1hMGZhLThlYzExNzgwZjIyMCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTA2fQ.9QdoCTo1EH_jh-Uc91IRE9exgm50IDtbIdp8JNdC-h8
___________________ TestAgentsUnit.test_get_agent_not_found ____________________

self = <Coroutine test_get_agent_not_found>

    def runtest(self) -> None:
        synchronized_obj = wrap_in_sync(self.obj)
        with MonkeyPatch.context() as c:
            c.setattr(self, "obj", synchronized_obj)
>           super().runtest()

../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:426: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:642: in inner
    _loop.run_until_complete(task)
/usr/lib64/python3.12/asyncio/base_events.py:691: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1410: in patched
    with self.decoration_helper(patched,
/usr/lib64/python3.12/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1375: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/contextlib.py:526: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1467: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f86597ebe30>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'chatter.api.agents' from '/home/yam/chatter/chatter/api/agents.py'> does not have the attribute 'AgentService'

/usr/lib64/python3.12/unittest/mock.py:1437: AttributeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRNEY0RDNON0Q1MlRSM0dBUk5HWCIsImVtYWlsIjoidGVzdHVzZXJiY2JiYWNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmNiYmFjIiwianRpIjoiODMzZjU3YjMtZjgxNS00M2YwLWFkZTQtNzA3MDc2ZDQ4NzQ4IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcwNywic2Vzc2lvbl9pZCI6ImYyNDgxMWQ3LTdlNmYtNGI1ZS05MWUwLTdiNDk4NmRlNTI1YSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTA3fQ.57PTo_Tm8EoYo8OEerVTTW0L99ZoTnuRAgWsxL3ZN1A
___________________ TestAgentsUnit.test_update_agent_success ___________________

self = <Coroutine test_update_agent_success>

    def runtest(self) -> None:
        synchronized_obj = wrap_in_sync(self.obj)
        with MonkeyPatch.context() as c:
            c.setattr(self, "obj", synchronized_obj)
>           super().runtest()

../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:426: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:642: in inner
    _loop.run_until_complete(task)
/usr/lib64/python3.12/asyncio/base_events.py:691: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1410: in patched
    with self.decoration_helper(patched,
/usr/lib64/python3.12/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1375: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/contextlib.py:526: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1467: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f86597ebf50>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'chatter.api.agents' from '/home/yam/chatter/chatter/api/agents.py'> does not have the attribute 'AgentService'

/usr/lib64/python3.12/unittest/mock.py:1437: AttributeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRNUM5RUFCR1c2MFFSMVY1QUtGNSIsImVtYWlsIjoidGVzdHVzZXJlY2RjYmNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWNkY2JjIiwianRpIjoiZTg1YTY3ZDktOTAxYi00ZDU0LThiMGItNGFlYzc1N2E3MTY2IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcwOCwic2Vzc2lvbl9pZCI6IjQ0ODJmYmZlLWRmM2UtNDJhZi05NWZjLTU5NDMxNmFkNWUxMSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTA4fQ.VLJj-dztCeDnWeQ9UgEcsdQNvRjjZ5mliuxXxoYVs70
___________________ TestAgentsUnit.test_delete_agent_success ___________________

self = <Coroutine test_delete_agent_success>

    def runtest(self) -> None:
        synchronized_obj = wrap_in_sync(self.obj)
        with MonkeyPatch.context() as c:
            c.setattr(self, "obj", synchronized_obj)
>           super().runtest()

../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:426: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:642: in inner
    _loop.run_until_complete(task)
/usr/lib64/python3.12/asyncio/base_events.py:691: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1410: in patched
    with self.decoration_helper(patched,
/usr/lib64/python3.12/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1375: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/contextlib.py:526: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1467: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f86597d00b0>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'chatter.api.agents' from '/home/yam/chatter/chatter/api/agents.py'> does not have the attribute 'AgentService'

/usr/lib64/python3.12/unittest/mock.py:1437: AttributeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRNkEzNjFZMU5FOFgxV0REVlo2VCIsImVtYWlsIjoidGVzdHVzZXJhZGJjZWFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWRiY2VhIiwianRpIjoiMjE3MzZmOTAtOThhMS00MmUyLWI4N2MtYjBmOWM3ZTU2YTFmIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcwOSwic2Vzc2lvbl9pZCI6IjE2ZDc3ZDk4LWQ5ZDctNDljYy05ZjllLTk0MDZmMzRkYTI1YSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTA5fQ.Sz_FafSMT2G7r5dFRYk8bn93bEbuRnVwixv8CFMKRC8
____________________ TestAgentsUnit.test_test_agent_success ____________________

self = <Coroutine test_test_agent_success>

    def runtest(self) -> None:
        synchronized_obj = wrap_in_sync(self.obj)
        with MonkeyPatch.context() as c:
            c.setattr(self, "obj", synchronized_obj)
>           super().runtest()

../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:426: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:642: in inner
    _loop.run_until_complete(task)
/usr/lib64/python3.12/asyncio/base_events.py:691: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1410: in patched
    with self.decoration_helper(patched,
/usr/lib64/python3.12/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1375: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/contextlib.py:526: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1467: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f86597d01d0>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'chatter.api.agents' from '/home/yam/chatter/chatter/api/agents.py'> does not have the attribute 'AgentService'

/usr/lib64/python3.12/unittest/mock.py:1437: AttributeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRNzgyMVlYMFExNjBORzg2TUFYNSIsImVtYWlsIjoidGVzdHVzZXJiYmJmYmZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmJiZmJmIiwianRpIjoiYzYyNjVlNDMtMmI3YS00YWViLWI0NzItNDU1YmM5ZWYzMWRlIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcxMCwic2Vzc2lvbl9pZCI6ImQ4ZDBhMDA4LWE3NDgtNGUxZS05YmUxLWEyNGM2YzhjNzU0OSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTEwfQ.U2zwkvK5zjslp0Qp3WEuo4QyR3jWAq9TzN34JfnESLI
_________________ TestAgentsUnit.test_get_agent_health_success _________________

self = <Coroutine test_get_agent_health_success>

    def runtest(self) -> None:
        synchronized_obj = wrap_in_sync(self.obj)
        with MonkeyPatch.context() as c:
            c.setattr(self, "obj", synchronized_obj)
>           super().runtest()

../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:426: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:642: in inner
    _loop.run_until_complete(task)
/usr/lib64/python3.12/asyncio/base_events.py:691: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1410: in patched
    with self.decoration_helper(patched,
/usr/lib64/python3.12/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1375: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/contextlib.py:526: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1467: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f86597d02f0>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'chatter.api.agents' from '/home/yam/chatter/chatter/api/agents.py'> does not have the attribute 'AgentService'

/usr/lib64/python3.12/unittest/mock.py:1437: AttributeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRODc1N0E4NEJSRFk1QlBQMTFFVyIsImVtYWlsIjoidGVzdHVzZXJkYmZiYWZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGJmYmFmIiwianRpIjoiOTA5M2ZkNjgtMGE3NC00NDBlLTlmYmItOGEzZWVmM2U1NWE4IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcxMSwic2Vzc2lvbl9pZCI6IjU5NDFkYmZkLTdkMjMtNGM2My1hYmZiLTNhODcwOGJmMWNiMSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTExfQ.6yUwM3NNdgI9_6VBoeo34dnPcAZdaRkYcRnn367_js0
________________ TestAgentsUnit.test_bulk_create_agents_success ________________

self = <Coroutine test_bulk_create_agents_success>

    def runtest(self) -> None:
        synchronized_obj = wrap_in_sync(self.obj)
        with MonkeyPatch.context() as c:
            c.setattr(self, "obj", synchronized_obj)
>           super().runtest()

../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:426: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:642: in inner
    _loop.run_until_complete(task)
/usr/lib64/python3.12/asyncio/base_events.py:691: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1410: in patched
    with self.decoration_helper(patched,
/usr/lib64/python3.12/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1375: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/contextlib.py:526: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1467: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f86597d0410>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'chatter.api.agents' from '/home/yam/chatter/chatter/api/agents.py'> does not have the attribute 'AgentService'

/usr/lib64/python3.12/unittest/mock.py:1437: AttributeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFROTVBWTRaWjZIN0VTRloxRDg2SyIsImVtYWlsIjoidGVzdHVzZXJlZmRmZmJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWZkZmZiIiwianRpIjoiODg0OGJmZTktM2FkMS00ZDIwLTgyMTUtM2JmZDdmZmY0ZjkwIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcxMSwic2Vzc2lvbl9pZCI6ImQxMWVhZWRiLTI2OTQtNDhhZS05ZDNhLWZiZGZiMjZkMDc5MyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTExfQ.fgkRnm0T9Ylk6o-a2_Mq4Ehot6tzztRUNlfictdq1M8
________________ TestAgentsUnit.test_bulk_delete_agents_success ________________

self = <Coroutine test_bulk_delete_agents_success>

    def runtest(self) -> None:
        synchronized_obj = wrap_in_sync(self.obj)
        with MonkeyPatch.context() as c:
            c.setattr(self, "obj", synchronized_obj)
>           super().runtest()

../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:426: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:642: in inner
    _loop.run_until_complete(task)
/usr/lib64/python3.12/asyncio/base_events.py:691: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1410: in patched
    with self.decoration_helper(patched,
/usr/lib64/python3.12/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1375: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/contextlib.py:526: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1467: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f86597d0530>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'chatter.api.agents' from '/home/yam/chatter/chatter/api/agents.py'> does not have the attribute 'AgentService'

/usr/lib64/python3.12/unittest/mock.py:1437: AttributeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRQTNDTjFOREFXOEo2OTdCMDFIUyIsImVtYWlsIjoidGVzdHVzZXJlYWZhZmFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWFmYWZhIiwianRpIjoiNDA1MmZmYzgtN2UwNy00ZjMxLWFiZmQtZTliNDc5M2I3MGMyIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcxMiwic2Vzc2lvbl9pZCI6ImFkODUyMWRmLWI2NTgtNDc4OS05NjA5LTA5M2M4OTM5MWRiYyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTEyfQ.kLJOSp9LW5ILWluB9O7dE2WOxOGq9eNa85TzU0n0iYY
_______________ TestAgentsUnit.test_agent_service_error_handling _______________

self = <Coroutine test_agent_service_error_handling>

    def runtest(self) -> None:
        synchronized_obj = wrap_in_sync(self.obj)
        with MonkeyPatch.context() as c:
            c.setattr(self, "obj", synchronized_obj)
>           super().runtest()

../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:426: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:642: in inner
    _loop.run_until_complete(task)
/usr/lib64/python3.12/asyncio/base_events.py:691: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1410: in patched
    with self.decoration_helper(patched,
/usr/lib64/python3.12/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1375: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/contextlib.py:526: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1467: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f86597d0650>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'chatter.api.agents' from '/home/yam/chatter/chatter/api/agents.py'> does not have the attribute 'AgentService'

/usr/lib64/python3.12/unittest/mock.py:1437: AttributeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRQjJDUFkzMUswNzJZSEpTNVpTSiIsImVtYWlsIjoidGVzdHVzZXJjZmJhZWRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2ZiYWVkIiwianRpIjoiMmJiMTE5N2MtMzk0Mi00Y2RiLWJlNmItODdmOWJlMTAyNDBmIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcxMywic2Vzc2lvbl9pZCI6Ijc5YzI3ZTVhLWFhYjEtNGQ2Ny04MzI1LTEzYjE4MWYzZDE0ZiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTEzfQ.dYWncQzGZwWg21Aa7DQdxnDQF_CyfhJJKqSsZ94TTIg
_________________ TestAgentsUnit.test_list_agents_with_filters _________________

self = <Coroutine test_list_agents_with_filters>

    def runtest(self) -> None:
        synchronized_obj = wrap_in_sync(self.obj)
        with MonkeyPatch.context() as c:
            c.setattr(self, "obj", synchronized_obj)
>           super().runtest()

../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:426: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:642: in inner
    _loop.run_until_complete(task)
/usr/lib64/python3.12/asyncio/base_events.py:691: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1410: in patched
    with self.decoration_helper(patched,
/usr/lib64/python3.12/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1375: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/contextlib.py:526: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1467: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f86597d0770>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'chatter.api.agents' from '/home/yam/chatter/chatter/api/agents.py'> does not have the attribute 'AgentService'

/usr/lib64/python3.12/unittest/mock.py:1437: AttributeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRQzFCNUVEMzJEUTNaNFZXSzNIVCIsImVtYWlsIjoidGVzdHVzZXJlYmJlZWFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWJiZWVhIiwianRpIjoiMTdhZjFiODgtNzgxNS00OWY5LWIxYTQtZjM2ZDMwNWJhZDE4IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcxNCwic2Vzc2lvbl9pZCI6IjU3ZWQxZWQ5LTczYjQtNDRiNS04ZDljLTYyZWY5MGZjYzEzMyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTE0fQ.DHyAbUxAaadpCcXA9BG2o5ryJv5UNbLKTtwfP_oDwAY
______________ TestAgentsUnit.test_agent_test_with_invalid_input _______________

self = <Coroutine test_agent_test_with_invalid_input>

    def runtest(self) -> None:
        synchronized_obj = wrap_in_sync(self.obj)
        with MonkeyPatch.context() as c:
            c.setattr(self, "obj", synchronized_obj)
>           super().runtest()

../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:426: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:642: in inner
    _loop.run_until_complete(task)
/usr/lib64/python3.12/asyncio/base_events.py:691: in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1410: in patched
    with self.decoration_helper(patched,
/usr/lib64/python3.12/contextlib.py:137: in __enter__
    return next(self.gen)
           ^^^^^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1375: in decoration_helper
    arg = exit_stack.enter_context(patching)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/contextlib.py:526: in enter_context
    result = _enter(cm)
             ^^^^^^^^^^
/usr/lib64/python3.12/unittest/mock.py:1467: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f86597d0890>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'chatter.api.agents' from '/home/yam/chatter/chatter/api/agents.py'> does not have the attribute 'AgentService'

/usr/lib64/python3.12/unittest/mock.py:1437: AttributeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRRDAwUEQ1SjMzNjdEUjZFUzVQMCIsImVtYWlsIjoidGVzdHVzZXJjY2VjY2ZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2NlY2NmIiwianRpIjoiZGJiNjhkMmMtNWQwZS00M2NhLWJlZjUtMDQ3NDA4NjU1Y2M3IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcxNSwic2Vzc2lvbl9pZCI6IjVmMzBlZjZlLWY2ZWYtNDc2Yy1iMzMwLTFhZWRjMDM3Y2IyNSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTE1fQ.Yq8kdSKbpj4rJfQnH5W4tFXcLt_Mx0SUCh4Yr3vLMuI
__________ TestAnalyticsIntegration.test_analytics_dashboard_workflow __________

self = <tests.test_analytics_integration.TestAnalyticsIntegration object at 0x7f86597d3410>
client = <httpx.AsyncClient object at 0x7f848f667770>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRRFhKRkNWNFpLS0s2QUFOTVRFSiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTE2fQ.1C3aALTqkS7tiiMK618wPvoWn9_ekmwqvkeg8KyqbgM'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f849ca0f0e0>

    @pytest.mark.integration
    async def test_analytics_dashboard_workflow(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test complete analytics dashboard workflow."""
        # Get dashboard data
>       dashboard_response = await client.get("/api/v1/analytics/dashboard", headers=auth_headers)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_integration.py:16: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1147' coro=<TestAnalyticsIntegration.test_analytics_dashboard_workflow() running at /home/yam/chatter/tests/test_analytics_integration.py:16> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRRFhKRkNWNFpLS0s2QUFOTVRFSiIsImVtYWlsIjoidGVzdHVzZXJlZmFiZWRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWZhYmVkIiwianRpIjoiOGRhZmZhMmItOGQ5MC00MjNlLWEzYTYtYTBkNWVjMjg5OTQ3IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcxNiwic2Vzc2lvbl9pZCI6IjIyOGMzNGJkLWMxM2YtNDAzZi1hOGYwLWU4NTZmMzBjODIzYiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTE2fQ.1C3aALTqkS7tiiMK618wPvoWn9_ekmwqvkeg8KyqbgM
________ TestAnalyticsIntegration.test_conversation_analytics_workflow _________

self = <tests.test_analytics_integration.TestAnalyticsIntegration object at 0x7f86597c4fe0>
client = <httpx.AsyncClient object at 0x7f849c9665a0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRRlFHSEdRQlJXM1pFVzM5NlNGUiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTE4fQ.ebLBwJxFYN18aiUDlhyf8u89qmghdHChZ-6TJwg8ot0'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f849ca20140>

    @pytest.mark.integration
    async def test_conversation_analytics_workflow(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test conversation analytics workflow."""
        # Get conversation stats
>       stats_response = await client.get("/api/v1/analytics/conversations", headers=auth_headers)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_integration.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1161' coro=<TestAnalyticsIntegration.test_conversation_analytics_workflow() running at /home/yam/chatter/tests/test_analytics_integration.py:31> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRRlFHSEdRQlJXM1pFVzM5NlNGUiIsImVtYWlsIjoidGVzdHVzZXJhY2VhZWFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWNlYWVhIiwianRpIjoiMTg3ZGFlNzQtNTczMS00ZmQ1LWJmNGMtMmQ3YTVkNzliYWVkIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcxOCwic2Vzc2lvbl9pZCI6ImJlY2Y0ZmM2LTk5NDEtNDM1OC05Y2FiLWNkYWI4MjdjMTcxNSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTE4fQ.ebLBwJxFYN18aiUDlhyf8u89qmghdHChZ-6TJwg8ot0
_____________ TestAnalyticsIntegration.test_usage_metrics_workflow _____________

self = <tests.test_analytics_integration.TestAnalyticsIntegration object at 0x7f86597c4c50>
client = <httpx.AsyncClient object at 0x7f848f3666c0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRSDBHRzZFRFZDVE1KWkpaNzBLRyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTIwfQ.wg9RrxoNc9ByQB_Fpg8truFja5Do4CWHQ-rYq21Q-ro'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f849ce978f0>

    @pytest.mark.integration
    async def test_usage_metrics_workflow(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test usage metrics workflow."""
        # Get usage metrics
>       usage_response = await client.get("/api/v1/analytics/usage", headers=auth_headers)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_integration.py:54: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1175' coro=<TestAnalyticsIntegration.test_usage_metrics_workflow() running at /home/yam/chatter/tests/test_analytics_integration.py:54> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRSDBHRzZFRFZDVE1KWkpaNzBLRyIsImVtYWlsIjoidGVzdHVzZXJhY2NhZWZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWNjYWVmIiwianRpIjoiNDJjMTJkZTAtNDVhYy00ZmY2LWIyNTItYjNkMGU5ZmEyNGNjIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcyMCwic2Vzc2lvbl9pZCI6IjcyODlhYmNjLTI3ODktNDE5ZS04NTg2LTVhYzY4OGZhY2YxMSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTIwfQ.wg9RrxoNc9ByQB_Fpg8truFja5Do4CWHQ-rYq21Q-ro
__________ TestAnalyticsIntegration.test_performance_metrics_workflow __________

self = <tests.test_analytics_integration.TestAnalyticsIntegration object at 0x7f86597c5b20>
client = <httpx.AsyncClient object at 0x7f849c230470>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRSkE2QTA1VzFGR1E4WThHU0JXWiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTIxfQ.xMIhPGBJNJMw7bw7sKaSBWT2ktlKAh6T7Tp6a0PSVMg'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f848f3639e0>

    @pytest.mark.integration
    async def test_performance_metrics_workflow(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test performance metrics workflow."""
        # Get performance metrics
>       perf_response = await client.get("/api/v1/analytics/performance", headers=auth_headers)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_integration.py:77: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1189' coro=<TestAnalyticsIntegration.test_performance_metrics_workflow() running at /home/yam/chatter/tests/test_analytics_integration.py:77> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRSkE2QTA1VzFGR1E4WThHU0JXWiIsImVtYWlsIjoidGVzdHVzZXJhYmJjYmZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWJiY2JmIiwianRpIjoiZmMxNDk0MGQtY2IzMC00ZWZkLThmYTMtYTg3OTMxMjgyNzc4IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcyMSwic2Vzc2lvbl9pZCI6IjdlYmUzYTIxLTJiYmQtNDM1OS05Y2FjLWZjODY1NjlhZjAxNSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTIxfQ.xMIhPGBJNJMw7bw7sKaSBWT2ktlKAh6T7Tp6a0PSVMg
__________ TestAnalyticsIntegration.test_document_analytics_workflow ___________

self = <tests.test_analytics_integration.TestAnalyticsIntegration object at 0x7f86597c5ee0>
client = <httpx.AsyncClient object at 0x7f849cf1d8b0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRTTNaOVFGNDhIR1M4V0FFNFJOVyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTIzfQ.JUrq_92N4m2O3zNIKCLOKtMQ3KSoTLeDAs2x1Z_DWUg'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f849d1252b0>

    @pytest.mark.integration
    async def test_document_analytics_workflow(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test document analytics workflow."""
        # Get document analytics
>       doc_response = await client.get("/api/v1/analytics/documents", headers=auth_headers)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_integration.py:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1203' coro=<TestAnalyticsIntegration.test_document_analytics_workflow() running at /home/yam/chatter/tests/test_analytics_integration.py:100> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRTTNaOVFGNDhIR1M4V0FFNFJOVyIsImVtYWlsIjoidGVzdHVzZXJjZmRmZmZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2ZkZmZmIiwianRpIjoiYjZhZWQ0NjEtNzljYS00OTYyLTgzMjgtMWMwNTM2NmRkNGI3IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcyMywic2Vzc2lvbl9pZCI6IjkwN2IzZTlmLTQxMmYtNGJiNS1hMjQxLTM0Mjk3MzQxZWIzMiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTIzfQ.JUrq_92N4m2O3zNIKCLOKtMQ3KSoTLeDAs2x1Z_DWUg
___________ TestAnalyticsIntegration.test_system_analytics_workflow ____________

self = <tests.test_analytics_integration.TestAnalyticsIntegration object at 0x7f86597c62a0>
client = <httpx.AsyncClient object at 0x7f849ed80fb0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRTkNINUI2WFFLQkdTUVhUUDFNQSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTI0fQ.HWIdScGpSMPV4cfD_DiN0xhelHqh87RgqSX3FAsy0Ok'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f849cf632c0>

    @pytest.mark.integration
    async def test_system_analytics_workflow(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test system analytics workflow."""
        # Get system analytics
>       system_response = await client.get("/api/v1/analytics/system", headers=auth_headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_integration.py:122: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1217' coro=<TestAnalyticsIntegration.test_system_analytics_workflow() running at /home/yam/chatter/tests/test_analytics_integration.py:122> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRTkNINUI2WFFLQkdTUVhUUDFNQSIsImVtYWlsIjoidGVzdHVzZXJlZGZmZWZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWRmZmVmIiwianRpIjoiZjYzMjA3OWQtNDFjOS00Y2U2LTk0M2ItNmE4ZTU5Y2Q5MGIyIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcyNCwic2Vzc2lvbl9pZCI6ImE1ZWQ0YjlkLTY5YTEtNDM4MC1iYzE2LTA1NWY0NDc4YWY0OCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTI0fQ.HWIdScGpSMPV4cfD_DiN0xhelHqh87RgqSX3FAsy0Ok
____________ TestAnalyticsIntegration.test_user_analytics_workflow _____________

self = <tests.test_analytics_integration.TestAnalyticsIntegration object at 0x7f86597c6660>
client = <httpx.AsyncClient object at 0x7f849d8107a0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRUE4wM0Y5REdZWFFIVE5ZRkNEMyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTI1fQ.Qf_f0i3xYv16qMEbI_V_PM3WUozgg4PYoOHeCOp7xdM'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f849e6f04a0>

    @pytest.mark.integration
    async def test_user_analytics_workflow(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test user analytics workflow."""
        # Test with a sample user ID
        user_id = "test-user-123"
    
        # Get user analytics
>       user_response = await client.get(f"/api/v1/analytics/users/{user_id}", headers=auth_headers)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_integration.py:147: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1231' coro=<TestAnalyticsIntegration.test_user_analytics_workflow() running at /home/yam/chatter/tests/test_analytics_integration.py:147> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRUE4wM0Y5REdZWFFIVE5ZRkNEMyIsImVtYWlsIjoidGVzdHVzZXJhYmJlYmZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWJiZWJmIiwianRpIjoiMzQ1ODliZTQtZGVmNi00NDc1LTlhOTUtMjdlOGNmMDA2OGE4IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcyNSwic2Vzc2lvbl9pZCI6IjJlZTRiZTBmLTE4NWUtNDQwNy05YmI3LWYyZTI4M2NiMzdkNiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTI1fQ.Qf_f0i3xYv16qMEbI_V_PM3WUozgg4PYoOHeCOp7xdM
___________ TestAnalyticsIntegration.test_analytics_export_workflow ____________

self = <tests.test_analytics_integration.TestAnalyticsIntegration object at 0x7f86597c6a20>
client = <httpx.AsyncClient object at 0x7f849e99ca70>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRUVhNRkZGU0g5U0c3M0dCSEI1MCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTI3fQ.s0qbHfBdpB8VoN1MAYjyxPGcPZlaQ1wMoTeJPPSW33M'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f849e6f08c0>

    @pytest.mark.integration
    async def test_analytics_export_workflow(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test analytics export workflow."""
        # Request analytics export
        export_data = {
            "date_range": {
                "start": "2024-01-01",
                "end": "2024-01-31"
            },
            "format": "json",
            "include_types": ["conversations", "usage"]
        }
    
>       export_response = await client.post("/api/v1/analytics/export", json=export_data, headers=auth_headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_integration.py:179: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1245' coro=<TestAnalyticsIntegration.test_analytics_export_workflow() running at /home/yam/chatter/tests/test_analytics_integration.py:179> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRUVhNRkZGU0g5U0c3M0dCSEI1MCIsImVtYWlsIjoidGVzdHVzZXJlZGZkZGVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWRmZGRlIiwianRpIjoiNWY4N2M2NDktZmE1Mi00OWQ1LTg2OGYtZWVlNGQ4OGY0MDlmIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcyNywic2Vzc2lvbl9pZCI6IjA4MmNjZDFlLTk5ZWUtNDMxZS04YmViLWUzMGE0N2UyYTdlMCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTI3fQ.s0qbHfBdpB8VoN1MAYjyxPGcPZlaQ1wMoTeJPPSW33M
_____________ TestAnalyticsIntegration.test_analytics_health_check _____________

self = <tests.test_analytics_integration.TestAnalyticsIntegration object at 0x7f86597c6de0>
client = <httpx.AsyncClient object at 0x7f849e2cb6e0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRUzZCMDdaOFMwN1M0MzRQVFFEMiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTI4fQ.uC_2ixDk6Z8d_WPOZstI_1xiPNmP9bs9Wv-cTW8M-oQ'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f849f34b950>

    @pytest.mark.integration
    async def test_analytics_health_check(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test analytics health check."""
        # Get analytics health
>       health_response = await client.get("/api/v1/analytics/health", headers=auth_headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_integration.py:197: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1259' coro=<TestAnalyticsIntegration.test_analytics_health_check() running at /home/yam/chatter/tests/test_analytics_integration.py:197> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRUzZCMDdaOFMwN1M0MzRQVFFEMiIsImVtYWlsIjoidGVzdHVzZXJlZWZmZGFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWVmZmRhIiwianRpIjoiMmZlMzAzN2ItNWI4MC00YjY3LWIzYTAtZjEwY2MwN2I5OTcxIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjcyOCwic2Vzc2lvbl9pZCI6IjM3ZGZjZjY1LTNmMTctNGEwOS04NDk3LTM5YmRhZTJkNWMyMyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTI4fQ.uC_2ixDk6Z8d_WPOZstI_1xiPNmP9bs9Wv-cTW8M-oQ
_________ TestAnalyticsIntegration.test_toolserver_analytics_workflow __________

self = <tests.test_analytics_integration.TestAnalyticsIntegration object at 0x7f86597c7560>
client = <httpx.AsyncClient object at 0x7f849d6c7380>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRVk5GNU1OTlhKRUFBUTVaQ0JNRCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTMwfQ.2g7VIrNTIydhh70nbd19uw_N2SJQNhsiI2DsVEQbXQk'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84aba3f350>

    @pytest.mark.integration
    async def test_toolserver_analytics_workflow(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test toolserver analytics workflow."""
        # Get toolserver analytics
>       toolserver_response = await client.get("/api/v1/analytics/toolservers", headers=auth_headers)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_integration.py:231: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1286' coro=<TestAnalyticsIntegration.test_toolserver_analytics_workflow() running at /home/yam/chatter/tests/test_analytics_integration.py:231> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRVk5GNU1OTlhKRUFBUTVaQ0JNRCIsImVtYWlsIjoidGVzdHVzZXJhZWVmYWNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWVlZmFjIiwianRpIjoiZTJlOTFlMWMtNGRmYS00ZDkzLTk4MzMtMTUyNDM4Mjg0NjQyIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjczMCwic2Vzc2lvbl9pZCI6ImZlNTEwZDViLTAwYWEtNDU2MS1hNzg3LTU4NmI4NGRkODc1NCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTMwfQ.2g7VIrNTIydhh70nbd19uw_N2SJQNhsiI2DsVEQbXQk
_________ TestAnalyticsIntegration.test_concurrent_analytics_requests __________

self = <tests.test_analytics_integration.TestAnalyticsIntegration object at 0x7f86597c7920>
client = <httpx.AsyncClient object at 0x7f848f3d49b0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRV1lEUFY5R0FEV0E5OVo2WkdESiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTMyfQ.zc5I4u13e-MekvGx9pzfsa_qz-d2nrwjrbgRDypwbX4'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84abfa6b10>

    @pytest.mark.integration
    async def test_concurrent_analytics_requests(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test concurrent analytics requests."""
        # Create concurrent requests to different analytics endpoints
        endpoints = [
            "/api/v1/analytics/conversations",
            "/api/v1/analytics/usage",
            "/api/v1/analytics/performance",
            "/api/v1/analytics/system",
            "/api/v1/analytics/health"
        ]
    
        # Create tasks for concurrent requests
        tasks = [
            asyncio.create_task(client.get(endpoint, headers=auth_headers))
            for endpoint in endpoints
        ]
    
        # Wait for all requests
>       responses = await asyncio.gather(*tasks)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_integration.py:261: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1301' coro=<AsyncClient.get() running at /home/yam/.local/lib/python3.12/site-packages/httpx/_client.py:1768> cb=[gather.<locals>._done_callback() at /usr/lib64/python3.12/asyncio/tasks.py:767]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRV1lEUFY5R0FEV0E5OVo2WkdESiIsImVtYWlsIjoidGVzdHVzZXJhYWZkYmZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWFmZGJmIiwianRpIjoiNDFlZGY0ZjMtOTIwYy00ZDc1LTgwMTktMjljNGNiZjUwM2RlIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjczMiwic2Vzc2lvbl9pZCI6IjZjNTBjMDRkLTJiN2YtNGViMS05YWFkLTcwODE1NTJjYmVhMiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTMyfQ.zc5I4u13e-MekvGx9pzfsa_qz-d2nrwjrbgRDypwbX4
___________ TestAnalyticsIntegration.test_analytics_data_consistency ___________

self = <tests.test_analytics_integration.TestAnalyticsIntegration object at 0x7f86597d2900>
client = <httpx.AsyncClient object at 0x7f849cf80560>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRWTdZM0VDMkE0SFZZRVZZRzgzMCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTMzfQ.ZynAzZPjAQrBPcQBREPx-G-YNj2pHDFJJ_gIOBoEirc'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f848f217cb0>

    @pytest.mark.integration
    async def test_analytics_data_consistency(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test analytics data consistency across endpoints."""
        # Get data from multiple endpoints
>       dashboard_response = await client.get("/api/v1/analytics/dashboard", headers=auth_headers)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_integration.py:271: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1319' coro=<TestAnalyticsIntegration.test_analytics_data_consistency() running at /home/yam/chatter/tests/test_analytics_integration.py:271> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRWTdZM0VDMkE0SFZZRVZZRzgzMCIsImVtYWlsIjoidGVzdHVzZXJmZWRmZGNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmVkZmRjIiwianRpIjoiZDg2NjUyYzEtNDA0Ni00ODFlLTljMTUtOTEzMDZmMzBkODAyIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjczMywic2Vzc2lvbl9pZCI6ImEyYTAxMjk3LTYwNmYtNDkzZi1iNDM5LWQzYTI0NWZlYjA1ZSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTMzfQ.ZynAzZPjAQrBPcQBREPx-G-YNj2pHDFJJ_gIOBoEirc
____________ TestAnalyticsIntegration.test_analytics_error_handling ____________

self = <tests.test_analytics_integration.TestAnalyticsIntegration object at 0x7f86597c7da0>
client = <httpx.AsyncClient object at 0x7f849d1f2f90>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRWkdUR1hENzVOUVk2SEtTRks3MCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTM0fQ.yJBVX0Q_Ky9I9xTDZq4Gp1RGqDolvCqo81AyjNAK3K4'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f849cf3fe30>

    @pytest.mark.integration
    async def test_analytics_error_handling(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test analytics error handling scenarios."""
        # Test with invalid parameters where applicable
    
        # Invalid user ID format
>       invalid_user_response = await client.get("/api/v1/analytics/users/invalid-user-format", headers=auth_headers)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_integration.py:300: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1333' coro=<TestAnalyticsIntegration.test_analytics_error_handling() running at /home/yam/chatter/tests/test_analytics_integration.py:300> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFRWkdUR1hENzVOUVk2SEtTRks3MCIsImVtYWlsIjoidGVzdHVzZXJhYWVkYmRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWFlZGJkIiwianRpIjoiY2IzMTExYTItNWVlZi00M2E4LTkyNjAtZGNlYWUzM2Y2OWQ2IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjczNCwic2Vzc2lvbl9pZCI6ImE5NjQxYTM2LTlmNTAtNDUwZC1iMjk4LWY3ODg4ZTcxMmVlNSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTM0fQ.yJBVX0Q_Ky9I9xTDZq4Gp1RGqDolvCqo81AyjNAK3K4
_______ TestAnalyticsIntegration.test_analytics_pagination_and_filtering _______

self = <tests.test_analytics_integration.TestAnalyticsIntegration object at 0x7f86597c70e0>
client = <httpx.AsyncClient object at 0x7f848f1118e0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSMUNNNlBUQTFBTVZaSjZDMlo0SCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTM2fQ.H0SUPhKvlSP2rsadNq7B0s6YpyvWn6iyiCqdPkkO2BQ'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f849cf3ed20>

    @pytest.mark.integration
    async def test_analytics_pagination_and_filtering(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test analytics endpoints that support pagination and filtering."""
        # Test with query parameters where supported
    
        # Test date range filtering on usage metrics
>       usage_with_params = await client.get(
            "/api/v1/analytics/usage?start_date=2024-01-01&end_date=2024-01-31",
            headers=auth_headers
        )

tests/test_analytics_integration.py:321: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1347' coro=<TestAnalyticsIntegration.test_analytics_pagination_and_filtering() running at /home/yam/chatter/tests/test_analytics_integration.py:321> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSMUNNNlBUQTFBTVZaSjZDMlo0SCIsImVtYWlsIjoidGVzdHVzZXJjYmJjZWZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2JiY2VmIiwianRpIjoiNzU2MTJjNWQtODM5Yy00ZTlkLWFiMzEtZTA3YzVhOGY1MjFiIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjczNiwic2Vzc2lvbl9pZCI6IjZkNGYxYzc5LWQzYTctNGZjZi04MzNkLTFiOGUyYzcyZjVkNiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTM2fQ.H0SUPhKvlSP2rsadNq7B0s6YpyvWn6iyiCqdPkkO2BQ
______ TestAnalyticsIntegration.test_analytics_response_format_validation ______

self = <tests.test_analytics_integration.TestAnalyticsIntegration object at 0x7f86597c65d0>
client = <httpx.AsyncClient object at 0x7f848eaec680>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSMk5IVzBCV0hZQzNIRTJFQkpSWCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTM4fQ.AuvmKVn3_-3zlku2qN_bna2TLRA6po1kXsub40Z76X0'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f849d1116a0>

    @pytest.mark.integration
    async def test_analytics_response_format_validation(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test that analytics responses follow expected format."""
        endpoints_to_test = [
            "/api/v1/analytics/conversations",
            "/api/v1/analytics/usage",
            "/api/v1/analytics/dashboard"
        ]
    
        for endpoint in endpoints_to_test:
>           response = await client.get(endpoint, headers=auth_headers)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_integration.py:347: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1361' coro=<TestAnalyticsIntegration.test_analytics_response_format_validation() running at /home/yam/chatter/tests/test_analytics_integration.py:347> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSMk5IVzBCV0hZQzNIRTJFQkpSWCIsImVtYWlsIjoidGVzdHVzZXJjYmJhY2NAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2JiYWNjIiwianRpIjoiMmM2NTA4MTEtOGExMS00NDZiLTkxMjEtNDNjNzAwZDhlNTQzIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjczOCwic2Vzc2lvbl9pZCI6IjI4ZjBkNzdkLWM0OWEtNDc0ZC1iYzcyLTA2ZDUzNWJmYzY4MSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTM4fQ.AuvmKVn3_-3zlku2qN_bna2TLRA6po1kXsub40Z76X0
_________ TestAnalyticsUnit.test_get_conversation_stats_requires_auth __________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848f0c7c50>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848f0c7c50>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597c13a0>
client = <httpx.AsyncClient object at 0x7f848f0c6ff0>

    @pytest.mark.unit
    async def test_get_conversation_stats_requires_auth(self, client: AsyncClient):
        """Test that getting conversation stats requires authentication."""
>       response = await client.get("/api/v1/analytics/conversations")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848f0c7c50>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:05:39.242455Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35mb3c36e9c-4ed3-4430-9fe0-c01e722466d7[0m [36mstatus_code[0m=[35m401[0m
____________ TestAnalyticsUnit.test_get_usage_metrics_requires_auth ____________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848f4aea20>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848f4aea20>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597c16a0>
client = <httpx.AsyncClient object at 0x7f848f4addc0>

    @pytest.mark.unit
    async def test_get_usage_metrics_requires_auth(self, client: AsyncClient):
        """Test that getting usage metrics requires authentication."""
>       response = await client.get("/api/v1/analytics/usage")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:20: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848f4aea20>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:05:40.060120Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35mbfb7289f-6b2f-4a1e-be6b-a6b7d75e3b1e[0m [36mstatus_code[0m=[35m401[0m
_________ TestAnalyticsUnit.test_get_performance_metrics_requires_auth _________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848ff29a00>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848ff29a00>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597c1ac0>
client = <httpx.AsyncClient object at 0x7f848ff28e60>

    @pytest.mark.unit
    async def test_get_performance_metrics_requires_auth(self, client: AsyncClient):
        """Test that getting performance metrics requires authentication."""
>       response = await client.get("/api/v1/analytics/performance")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848ff29a00>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:05:40.871242Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m458f77af-dc77-47d4-8ca7-dc7ff5a28e89[0m [36mstatus_code[0m=[35m401[0m
_________ TestAnalyticsUnit.test_get_document_analytics_requires_auth __________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848e3f4860>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848e3f4860>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597c6d20>
client = <httpx.AsyncClient object at 0x7f848e347cb0>

    @pytest.mark.unit
    async def test_get_document_analytics_requires_auth(self, client: AsyncClient):
        """Test that getting document analytics requires authentication."""
>       response = await client.get("/api/v1/analytics/documents")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848e3f4860>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:05:41.708156Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m6ff4bed9-9ff4-4fff-9718-f82bd6cc4eeb[0m [36mstatus_code[0m=[35m401[0m
__________ TestAnalyticsUnit.test_get_system_analytics_requires_auth ___________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848daaf590>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848daaf590>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597c1370>
client = <httpx.AsyncClient object at 0x7f848daaea20>

    @pytest.mark.unit
    async def test_get_system_analytics_requires_auth(self, client: AsyncClient):
        """Test that getting system analytics requires authentication."""
>       response = await client.get("/api/v1/analytics/system")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848daaf590>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:05:42.535741Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m16c2b380-0cab-4950-a795-062018220911[0m [36mstatus_code[0m=[35m401[0m
______________ TestAnalyticsUnit.test_get_dashboard_requires_auth ______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848e33f710>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848e33f710>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597c2000>
client = <httpx.AsyncClient object at 0x7f848e33e3c0>

    @pytest.mark.unit
    async def test_get_dashboard_requires_auth(self, client: AsyncClient):
        """Test that getting dashboard requires authentication."""
>       response = await client.get("/api/v1/analytics/dashboard")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:44: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848e33f710>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:05:43.968372Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35mbc823551-8b17-411d-9bd5-9b3c970a0096[0m [36mstatus_code[0m=[35m401[0m
________ TestAnalyticsUnit.test_get_toolserver_analytics_requires_auth _________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848ff8b650>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848ff8b650>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597c2030>
client = <httpx.AsyncClient object at 0x7f848ff8a7e0>

    @pytest.mark.unit
    async def test_get_toolserver_analytics_requires_auth(self, client: AsyncClient):
        """Test that getting toolserver analytics requires authentication."""
>       response = await client.get("/api/v1/analytics/toolservers")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848ff8b650>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:05:44.933997Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35mc834bc88-0502-4a00-a943-98fbd0683bd9[0m [36mstatus_code[0m=[35m401[0m
___________ TestAnalyticsUnit.test_get_user_analytics_requires_auth ____________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849f9b7050>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849f9b7050>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597c23f0>
client = <httpx.AsyncClient object at 0x7f848edb2ea0>

    @pytest.mark.unit
    async def test_get_user_analytics_requires_auth(self, client: AsyncClient):
        """Test that getting user analytics requires authentication."""
>       response = await client.get("/api/v1/analytics/users/user-123")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:56: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f849f9b7050>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:05:45.881460Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m531efd07-c9bc-4412-9cfc-1b9a25b60879[0m [36mstatus_code[0m=[35m401[0m
____________ TestAnalyticsUnit.test_export_analytics_requires_auth _____________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848e27abd0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848e27abd0>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597c27b0>
client = <httpx.AsyncClient object at 0x7f848e279e20>

    @pytest.mark.unit
    async def test_export_analytics_requires_auth(self, client: AsyncClient):
        """Test that exporting analytics requires authentication."""
>       response = await client.post("/api/v1/analytics/export", json={})
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848e27abd0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:05:46.786037Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m5108968a-3d39-4679-97a1-ae1d457fcfd5[0m [36mstatus_code[0m=[35m401[0m
_______________ TestAnalyticsUnit.test_get_health_requires_auth ________________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848e699670>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848e699670>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597c2b70>
client = <httpx.AsyncClient object at 0x7f848e698c20>

    @pytest.mark.unit
    async def test_get_health_requires_auth(self, client: AsyncClient):
        """Test that getting analytics health requires authentication."""
>       response = await client.get("/api/v1/analytics/health")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:68: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848e699670>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:05:47.623431Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35mdc625dc7-a3b6-45b8-9ac4-b1b1e1f39c5c[0m [36mstatus_code[0m=[35m401[0m
___________ TestAnalyticsUnit.test_get_metrics_summary_requires_auth ___________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848e0f8320>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848e0f8320>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597c2f30>
client = <httpx.AsyncClient object at 0x7f848e0c7800>

    @pytest.mark.unit
    async def test_get_metrics_summary_requires_auth(self, client: AsyncClient):
        """Test that getting metrics summary requires authentication."""
>       response = await client.get("/api/v1/analytics/metrics/summary")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:74: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848e0f8320>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:05:48.456325Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m684744b3-5d80-432d-8a97-09a121eb0c55[0m [36mstatus_code[0m=[35m401[0m
____________ TestAnalyticsUnit.test_get_conversation_stats_success _____________

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597c32f0>
mock_analytics_service = <MagicMock name='AnalyticsService' id='140207327972768'>
client = <httpx.AsyncClient object at 0x7f848f9066c0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSRFpYMDZLMFNYRDRCWDVXWUtNUCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTQ5fQ.cm21isVXzNts9hTd0JYAaV-PbqYOttYGYdYZ0aGQRYM'}

    @pytest.mark.unit
    @patch('chatter.api.analytics.AnalyticsService')
    async def test_get_conversation_stats_success(self, mock_analytics_service, client: AsyncClient, auth_headers: dict):
        """Test successful conversation stats retrieval."""
        # Mock analytics service
        mock_service = AsyncMock()
        mock_stats = {
            "total_conversations": 150,
            "active_conversations": 12,
            "conversations_today": 8,
            "average_messages_per_conversation": 4.5,
            "conversations_by_hour": [1, 2, 0, 3, 5, 2, 4, 1, 0, 2, 3, 6],
            "top_conversation_topics": [
                {"topic": "technical_support", "count": 45},
                {"topic": "general_inquiry", "count": 38}
            ]
        }
        mock_service.get_conversation_stats.return_value = mock_stats
        mock_analytics_service.return_value = mock_service
    
>       response = await client.get("/api/v1/analytics/conversations", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:97: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1518' coro=<TestAnalyticsUnit.test_get_conversation_stats_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSRFpYMDZLMFNYRDRCWDVXWUtNUCIsImVtYWlsIjoidGVzdHVzZXJiZmJiZmFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmZiYmZhIiwianRpIjoiZDU3ZjNlZGYtMGY1Ny00MDcxLTg2N2QtNjMzN2JlYmVlMzhiIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjc0OSwic2Vzc2lvbl9pZCI6ImRjNDQ4M2Y4LWVkMmYtNDI5Ny05ZDhhLWY5YzllMGY3MGRhYyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTQ5fQ.cm21isVXzNts9hTd0JYAaV-PbqYOttYGYdYZ0aGQRYM
_______________ TestAnalyticsUnit.test_get_usage_metrics_success _______________

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597c36e0>
mock_analytics_service = <MagicMock name='AnalyticsService' id='140207294619648'>
client = <httpx.AsyncClient object at 0x7f848df7f680>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSRkdZUEVWNzNTNTE2WDU5NDdFQSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTUxfQ.pnG0SWZTSXttTqNQWEu5E3_CDBvdWdSgwJkvgsQ6d3k'}

    @pytest.mark.unit
    @patch('chatter.api.analytics.AnalyticsService')
    async def test_get_usage_metrics_success(self, mock_analytics_service, client: AsyncClient, auth_headers: dict):
        """Test successful usage metrics retrieval."""
        mock_service = AsyncMock()
        mock_metrics = {
            "api_calls_today": 1250,
            "api_calls_this_week": 8500,
            "api_calls_this_month": 35000,
            "tokens_used_today": 125000,
            "tokens_used_this_week": 850000,
            "tokens_used_this_month": 3500000,
            "top_endpoints": [
                {"endpoint": "/chat/completions", "calls": 500},
                {"endpoint": "/documents/process", "calls": 300}
            ],
            "usage_by_hour": [10, 15, 8, 25, 35, 42, 38, 28, 20, 18, 25, 30]
        }
        mock_service.get_usage_metrics.return_value = mock_metrics
        mock_analytics_service.return_value = mock_service
    
>       response = await client.get("/api/v1/analytics/usage", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:127: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1532' coro=<TestAnalyticsUnit.test_get_usage_metrics_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSRkdZUEVWNzNTNTE2WDU5NDdFQSIsImVtYWlsIjoidGVzdHVzZXJmZGJlZmVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmRiZWZlIiwianRpIjoiYTJlZjUzZmQtYWJhYy00NjM4LTg3ZmItNzFjMWRlMzNhNmU3IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjc1MSwic2Vzc2lvbl9pZCI6IjQ3MDM5MjA1LWM1MmItNGQ5Ni1hYmY4LWJmZDBmYTIwMDgwNyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTUxfQ.pnG0SWZTSXttTqNQWEu5E3_CDBvdWdSgwJkvgsQ6d3k
____________ TestAnalyticsUnit.test_get_performance_metrics_success ____________

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597c3aa0>
mock_analytics_service = <MagicMock name='AnalyticsService' id='140207302942720'>
client = <httpx.AsyncClient object at 0x7f848e7ca4b0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSSE1TNjJBSDkxWTJHRDBKMTZaOCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTUzfQ.DZsdLKfLzGNGqyzs_oATpNoxPYQh3q4LCWC1ziwJcb0'}

    @pytest.mark.unit
    @patch('chatter.api.analytics.AnalyticsService')
    async def test_get_performance_metrics_success(self, mock_analytics_service, client: AsyncClient, auth_headers: dict):
        """Test successful performance metrics retrieval."""
        mock_service = AsyncMock()
        mock_metrics = {
            "average_response_time": 245.6,
            "p95_response_time": 450.2,
            "p99_response_time": 850.1,
            "error_rate": 0.02,
            "successful_requests": 9850,
            "failed_requests": 150,
            "response_times_by_hour": [200, 210, 195, 220, 250, 240, 235, 225, 215, 205, 230, 245],
            "slowest_endpoints": [
                {"endpoint": "/documents/process", "avg_time": 1250.5},
                {"endpoint": "/chat/completions", "avg_time": 180.3}
            ]
        }
        mock_service.get_performance_metrics.return_value = mock_metrics
        mock_analytics_service.return_value = mock_service
    
>       response = await client.get("/api/v1/analytics/performance", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:157: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1546' coro=<TestAnalyticsUnit.test_get_performance_metrics_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSSE1TNjJBSDkxWTJHRDBKMTZaOCIsImVtYWlsIjoidGVzdHVzZXJkZmFhY2NAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGZhYWNjIiwianRpIjoiYTI2N2FkYjEtM2FlYS00ODVkLWFkNmEtMGMxZTMyNGE3YmM5IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjc1Mywic2Vzc2lvbl9pZCI6IjIzY2E0ZDUzLTUzM2YtNDgxNS05YWExLTZhZWY3MjY3MzMzMCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTUzfQ.DZsdLKfLzGNGqyzs_oATpNoxPYQh3q4LCWC1ziwJcb0
____________ TestAnalyticsUnit.test_get_document_analytics_success _____________

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f8659770170>
mock_analytics_service = <MagicMock name='AnalyticsService' id='140207288019440'>
client = <httpx.AsyncClient object at 0x7f848d98d520>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSSzQ3SjJGVzdLUzhCRlQyV1JOQiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTU0fQ.tTBjlbUDDmukZMQ1Gof1WhGKzQ1JDDAL_VLlfsOS3uY'}

    @pytest.mark.unit
    @patch('chatter.api.analytics.AnalyticsService')
    async def test_get_document_analytics_success(self, mock_analytics_service, client: AsyncClient, auth_headers: dict):
        """Test successful document analytics retrieval."""
        mock_service = AsyncMock()
        mock_analytics = {
            "total_documents": 450,
            "documents_processed_today": 25,
            "processing_success_rate": 0.95,
            "average_processing_time": 2.4,
            "documents_by_type": {
                "pdf": 200,
                "docx": 150,
                "txt": 100
            },
            "processing_status_breakdown": {
                "completed": 425,
                "processing": 15,
                "failed": 10
            }
        }
        mock_service.get_document_analytics.return_value = mock_analytics
        mock_analytics_service.return_value = mock_service
    
>       response = await client.get("/api/v1/analytics/documents", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1560' coro=<TestAnalyticsUnit.test_get_document_analytics_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSSzQ3SjJGVzdLUzhCRlQyV1JOQiIsImVtYWlsIjoidGVzdHVzZXJhY2JlYmNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWNiZWJjIiwianRpIjoiMjljMzhiOWQtNDcyYS00ZDM2LThmNWQtOTU2YTM4MTc1NDgxIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjc1NCwic2Vzc2lvbl9pZCI6IjY5Y2JiNGJmLTk1Y2QtNDBkMC04NDk3LWRmZGM0ZDAzNzAxZiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTU0fQ.tTBjlbUDDmukZMQ1Gof1WhGKzQ1JDDAL_VLlfsOS3uY
_____________ TestAnalyticsUnit.test_get_system_analytics_success ______________

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f8659770260>
mock_analytics_service = <MagicMock name='AnalyticsService' id='140207316716960'>
client = <httpx.AsyncClient object at 0x7f848f4ec230>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSTU0xS0ZXNVFSQjlZWEVTUjBNRiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTU2fQ.kV5tqgWuzMT9__2D87SZJNvqj4wS0IVhtZrEP3BncDA'}

    @pytest.mark.unit
    @patch('chatter.api.analytics.AnalyticsService')
    async def test_get_system_analytics_success(self, mock_analytics_service, client: AsyncClient, auth_headers: dict):
        """Test successful system analytics retrieval."""
        mock_service = AsyncMock()
        mock_analytics = {
            "uptime_seconds": 3600000,
            "memory_usage_mb": 1024,
            "cpu_usage_percent": 25.5,
            "disk_usage_percent": 45.2,
            "active_connections": 150,
            "database_connections": 25,
            "cache_hit_rate": 0.85,
            "system_health": "healthy"
        }
        mock_service.get_system_analytics.return_value = mock_analytics
        mock_analytics_service.return_value = mock_service
    
>       response = await client.get("/api/v1/analytics/system", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:215: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1574' coro=<TestAnalyticsUnit.test_get_system_analytics_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSTU0xS0ZXNVFSQjlZWEVTUjBNRiIsImVtYWlsIjoidGVzdHVzZXJmZWZhZWJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmVmYWViIiwianRpIjoiZDNlNWM5NWUtNjUzMS00MmRiLWE3NjQtZjg5OGI1ZWFjYjBiIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjc1Niwic2Vzc2lvbl9pZCI6ImIwNDg0OGJkLTllZDEtNGIxZS04NzEyLTgwNGIzOTQwNDRmMiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTU2fQ.kV5tqgWuzMT9__2D87SZJNvqj4wS0IVhtZrEP3BncDA
_________________ TestAnalyticsUnit.test_get_dashboard_success _________________

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f8659770620>
mock_analytics_service = <MagicMock name='AnalyticsService' id='140207310249984'>
client = <httpx.AsyncClient object at 0x7f848d9ddc40>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSUDI4Qzg4MDFCRDJKVjlWR01SNyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTU3fQ.n8ETRUJVY1n6LZAy1ajazHN3PyeuwnOHbsDXIuxxRA8'}

    @pytest.mark.unit
    @patch('chatter.api.analytics.AnalyticsService')
    async def test_get_dashboard_success(self, mock_analytics_service, client: AsyncClient, auth_headers: dict):
        """Test successful dashboard data retrieval."""
        mock_service = AsyncMock()
        mock_dashboard = {
            "summary": {
                "total_users": 125,
                "active_users": 45,
                "total_conversations": 350,
                "api_calls_today": 1250
            },
            "recent_activity": [
                {"timestamp": "2024-01-01T12:00:00Z", "event": "User login", "user": "user1"},
                {"timestamp": "2024-01-01T11:55:00Z", "event": "Document processed", "user": "user2"}
            ],
            "alerts": [
                {"level": "warning", "message": "High API usage detected", "timestamp": "2024-01-01T12:05:00Z"}
            ]
        }
        mock_service.get_dashboard_data.return_value = mock_dashboard
        mock_analytics_service.return_value = mock_service
    
>       response = await client.get("/api/v1/analytics/dashboard", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:246: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1588' coro=<TestAnalyticsUnit.test_get_dashboard_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSUDI4Qzg4MDFCRDJKVjlWR01SNyIsImVtYWlsIjoidGVzdHVzZXJlY2NmY2FAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWNjZmNhIiwianRpIjoiMzJkNjk5NGItNTMzMi00NzI3LTg1ZGQtNWJjMjE0NzA0YWY5IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjc1Nywic2Vzc2lvbl9pZCI6IjMzZDhjYTFkLTE4ZTgtNGI3NC04YWQ5LWRkMDI0N2Q1ZDg5NCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTU3fQ.n8ETRUJVY1n6LZAy1ajazHN3PyeuwnOHbsDXIuxxRA8
______________ TestAnalyticsUnit.test_get_user_analytics_success _______________

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597709e0>
mock_analytics_service = <MagicMock name='AnalyticsService' id='140207309519232'>
client = <httpx.AsyncClient object at 0x7f848ee0dc40>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSUUI3MzJaTkJQN1I0RjhFV1BDSiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTU5fQ.CfUOx8theKclW8T2jkBgcIt62WvjX6oyYkLgHdTVEy8'}

    @pytest.mark.unit
    @patch('chatter.api.analytics.AnalyticsService')
    async def test_get_user_analytics_success(self, mock_analytics_service, client: AsyncClient, auth_headers: dict):
        """Test successful user analytics retrieval."""
        mock_service = AsyncMock()
        mock_user_analytics = {
            "user_id": "user-123",
            "conversations_count": 25,
            "messages_sent": 150,
            "documents_uploaded": 8,
            "api_calls_made": 500,
            "tokens_used": 50000,
            "activity_by_day": {
                "2024-01-01": 10,
                "2024-01-02": 15,
                "2024-01-03": 8
            }
        }
        mock_service.get_user_analytics.return_value = mock_user_analytics
        mock_analytics_service.return_value = mock_service
    
>       response = await client.get("/api/v1/analytics/users/user-123", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:275: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1602' coro=<TestAnalyticsUnit.test_get_user_analytics_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSUUI3MzJaTkJQN1I0RjhFV1BDSiIsImVtYWlsIjoidGVzdHVzZXJkY2NhZWVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGNjYWVlIiwianRpIjoiNzgxOTQ2NWUtMWRlMC00M2JmLTgyODgtZTEzMGRkYjNhNDdhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjc1OSwic2Vzc2lvbl9pZCI6IjM0NDA1NGRjLTUyNzEtNDE2ZC04OTBjLTJiM2Q0M2JkMDU2YiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTU5fQ.CfUOx8theKclW8T2jkBgcIt62WvjX6oyYkLgHdTVEy8
_______________ TestAnalyticsUnit.test_export_analytics_success ________________

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597c3b60>
mock_analytics_service = <MagicMock name='AnalyticsService' id='140207294018528'>
client = <httpx.AsyncClient object at 0x7f848df453d0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSUzdHWU1aWkRBQk00OFpFOVM2UCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTYxfQ.JNHAQkgxC0s0f37PsVIAEWqm8wQBeJ26PoxF0E2j3wE'}

    @pytest.mark.unit
    @patch('chatter.api.analytics.AnalyticsService')
    async def test_export_analytics_success(self, mock_analytics_service, client: AsyncClient, auth_headers: dict):
        """Test successful analytics export."""
        mock_service = AsyncMock()
        mock_export_result = {
            "export_id": "export-123",
            "status": "completed",
            "download_url": "https://example.com/download/export-123",
            "format": "csv",
            "records_count": 1000
        }
        mock_service.export_analytics.return_value = mock_export_result
        mock_analytics_service.return_value = mock_service
    
        export_data = {
            "date_range": {
                "start": "2024-01-01",
                "end": "2024-01-31"
            },
            "format": "csv",
            "include_types": ["conversations", "usage", "performance"]
        }
    
>       response = await client.post("/api/v1/analytics/export", json=export_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:307: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1616' coro=<TestAnalyticsUnit.test_export_analytics_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSUzdHWU1aWkRBQk00OFpFOVM2UCIsImVtYWlsIjoidGVzdHVzZXJkY2FlY2RAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGNhZWNkIiwianRpIjoiN2Q1N2JkODQtM2M1MC00Njg4LWE1YjQtMTBhZGVjYzM0YWY0IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjc2MSwic2Vzc2lvbl9pZCI6IjE5MGQwNzM3LTQ5MzYtNDY4ZS1hMGRjLWIxNzE5Nzk2OWRhYSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTYxfQ.JNHAQkgxC0s0f37PsVIAEWqm8wQBeJ26PoxF0E2j3wE
___________ TestAnalyticsUnit.test_analytics_service_error_handling ____________

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597c3260>
mock_analytics_service = <MagicMock name='AnalyticsService' id='140207301173248'>
client = <httpx.AsyncClient object at 0x7f848dd98050>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSVEdKWTRTQktGNUJFUDlDWDA0UCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTYyfQ.LIe-ZIXRYe0yypB13NB__O9ri0xOsiiarYqgVtfPX04'}

    @pytest.mark.unit
    @patch('chatter.api.analytics.AnalyticsService')
    async def test_analytics_service_error_handling(self, mock_analytics_service, client: AsyncClient, auth_headers: dict):
        """Test analytics service error handling."""
        mock_service = AsyncMock()
        mock_service.get_conversation_stats.side_effect = Exception("Analytics service error")
        mock_analytics_service.return_value = mock_service
    
>       response = await client.get("/api/v1/analytics/conversations", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:323: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1630' coro=<TestAnalyticsUnit.test_analytics_service_error_handling() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSVEdKWTRTQktGNUJFUDlDWDA0UCIsImVtYWlsIjoidGVzdHVzZXJmY2RjYmJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmNkY2JiIiwianRpIjoiOGFlMjQxZjQtYmM2Yy00MDUwLTk4NDYtZDA3YzhiZDEwOTJhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjc2Miwic2Vzc2lvbl9pZCI6IjNlNWQ2YzdjLWFiYTYtNGVlNy1iYmU0LTFjNzY1M2Y2MzY5ZCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTYyfQ.LIe-ZIXRYe0yypB13NB__O9ri0xOsiiarYqgVtfPX04
________________ TestAnalyticsUnit.test_invalid_user_id_format _________________

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f86597c2570>
client = <httpx.AsyncClient object at 0x7f848d391820>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSVlJSTjBYTVhaUEtKS0tLRFZaMSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTYzfQ.hyCN8y6a_aZ9z-qaorxJ3qn1EumQsWJ5TCrl76poMyw'}

    @pytest.mark.unit
    async def test_invalid_user_id_format(self, client: AsyncClient, auth_headers: dict):
        """Test user analytics with invalid user ID format."""
        # This would depend on validation logic in the API
>       response = await client.get("/api/v1/analytics/users/invalid-user-id", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:330: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1644' coro=<TestAnalyticsUnit.test_invalid_user_id_format() running at /home/yam/chatter/tests/test_analytics_unit.py:330> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSVlJSTjBYTVhaUEtKS0tLRFZaMSIsImVtYWlsIjoidGVzdHVzZXJmZWNhYmVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmVjYWJlIiwianRpIjoiZDdmZDFjYzgtMjdlNi00NTZjLTg3YjQtMmJkNTdhYTE2YWVjIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjc2Mywic2Vzc2lvbl9pZCI6ImVhOGRjYmFiLTlmNjctNGZiYi1iOTA3LWQ4ZTY5MzhkNjA3YiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTYzfQ.hyCN8y6a_aZ9z-qaorxJ3qn1EumQsWJ5TCrl76poMyw
______________ TestAnalyticsUnit.test_get_metrics_summary_success ______________

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f8659770770>
mock_analytics_service = <MagicMock name='AnalyticsService' id='140207286667408'>
client = <httpx.AsyncClient object at 0x7f848d2543e0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSWDZEQlo3QzdRNUI4WU04RTZQQiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTY1fQ.3LSSRsMUtQy2poROEBGBb5hyNsdlt8tEjA-Lus6oS3U'}

    @pytest.mark.unit
    @patch('chatter.api.analytics.AnalyticsService')
    async def test_get_metrics_summary_success(self, mock_analytics_service, client: AsyncClient, auth_headers: dict):
        """Test successful metrics summary retrieval."""
        mock_service = AsyncMock()
        mock_summary = {
            "timestamp": "2024-01-01T12:00:00Z",
            "api_calls": 1250,
            "error_rate": 0.02,
            "avg_response_time": 245.6,
            "active_users": 45,
            "system_health": "healthy",
            "alerts_count": 2
        }
        mock_service.get_metrics_summary.return_value = mock_summary
        mock_analytics_service.return_value = mock_service
    
>       response = await client.get("/api/v1/analytics/metrics/summary", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:351: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1658' coro=<TestAnalyticsUnit.test_get_metrics_summary_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSWDZEQlo3QzdRNUI4WU04RTZQQiIsImVtYWlsIjoidGVzdHVzZXJmZWVhZGRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmVlYWRkIiwianRpIjoiMGU0N2VkMTUtOWQ0MC00NmMyLWFlYzQtMzBkMzM1Mzg2ZDY4IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjc2NSwic2Vzc2lvbl9pZCI6IjhkZTYyNzU1LTYwYjMtNDllMi05NjIyLWIzM2Q0ODQzZGIyMSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTY1fQ.3LSSRsMUtQy2poROEBGBb5hyNsdlt8tEjA-Lus6oS3U
__________________ TestAnalyticsUnit.test_get_health_success ___________________

self = <tests.test_analytics_unit.TestAnalyticsUnit object at 0x7f8659770320>
mock_analytics_service = <MagicMock name='AnalyticsService' id='140207323553792'>
client = <httpx.AsyncClient object at 0x7f848fb71be0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSWU0yNkhKUkQ1WlowQlBUNE1aSyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTY2fQ.LpIsT7h-8QeoEogtdXDo3mISKJsvWUgOzSGPnKKkcpg'}

    @pytest.mark.unit
    @patch('chatter.api.analytics.AnalyticsService')
    async def test_get_health_success(self, mock_analytics_service, client: AsyncClient, auth_headers: dict):
        """Test successful analytics health check."""
        mock_service = AsyncMock()
        mock_health = {
            "status": "healthy",
            "services": {
                "database": "healthy",
                "cache": "healthy",
                "analytics_engine": "healthy"
            },
            "last_updated": "2024-01-01T12:00:00Z"
        }
        mock_service.get_health_status.return_value = mock_health
        mock_analytics_service.return_value = mock_service
    
>       response = await client.get("/api/v1/analytics/health", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_analytics_unit.py:376: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-1672' coro=<TestAnalyticsUnit.test_get_health_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFSWU0yNkhKUkQ1WlowQlBUNE1aSyIsImVtYWlsIjoidGVzdHVzZXJjY2ZkZWRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2NmZGVkIiwianRpIjoiZmFmYjhlMDMtMjNhMC00NDI0LThmZTQtNWUxMmQ4MWM4Zjk2IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjc2Niwic2Vzc2lvbl9pZCI6IjFkZWYwNjJhLWYyNGYtNDAxZS1iYTQ3LThkMzI2ZjE2ZjQ1NSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NTY2fQ.LpIsT7h-8QeoEogtdXDo3mISKJsvWUgOzSGPnKKkcpg
__________________ TestAuthIntegration.test_api_key_workflow ___________________

self = <tests.test_auth_integration.TestAuthIntegration object at 0x7f84cad3a6c0>
client = <httpx.AsyncClient object at 0x7f848ad8fa70>
test_user_data = {'email': 'alice@example.com', 'full_name': 'Alice User', 'password': 'SecureP@ssw0rd!', 'username': 'alice'}

    @pytest.mark.integration
    async def test_api_key_workflow(self, client: AsyncClient, test_user_data: dict):
        """Test API key creation and usage workflow."""
        # Register user
        register_response = await client.post("/api/v1/auth/register", json=test_user_data)
        register_data = register_response.json()
    
        access_token = register_data["access_token"]
        auth_headers = {"Authorization": f"Bearer {access_token}"}
    
        # Create API key
        api_key_data = {"name": "Test API Key"}
        api_key_response = await client.post(
            "/api/v1/auth/api-key",
            json=api_key_data,
            headers=auth_headers
        )
        assert api_key_response.status_code == 200
    
        api_key_response_data = api_key_response.json()
        assert "api_key" in api_key_response_data
        assert api_key_response_data["api_key_name"] == api_key_data["name"]
    
        # List API keys
>       list_response = await client.get("/api/v1/auth/api-keys", headers=auth_headers)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_auth_integration.py:190: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:302: in app
    raw_response = await run_endpoint_function(
../.local/lib/python3.12/site-packages/fastapi/routing.py:213: in run_endpoint_function
    return await dependant.call(**values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

current_user = <User(id=01K4DQS7JTCA8NSXTWHVP75PJK, email=alice@example.com, username=alice)>
auth_service = <chatter.core.auth.AuthService object at 0x7f848ad384d0>

    @router.get("/api-keys", response_model=list[APIKeyResponse])
    async def list_api_keys(
        current_user: User = Depends(get_current_user),
        auth_service: AuthService = Depends(get_auth_service),
    ) -> list[APIKeyResponse]:
        """List user's API keys.
    
        Args:
            current_user: Current authenticated user
            auth_service: Authentication service
    
        Returns:
            List of API keys
        """
        api_keys = await auth_service.list_api_keys(current_user.id)
>       return [APIKeyResponse.model_validate(key) for key in api_keys]
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       pydantic_core._pydantic_core.ValidationError: 3 validation errors for APIKeyResponse
E       id
E         Field required [type=missing, input_value={'name': 'Test API Key', ...None, 'is_active': True}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       api_key
E         Field required [type=missing, input_value={'name': 'Test API Key', ...None, 'is_active': True}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       api_key_name
E         Field required [type=missing, input_value={'name': 'Test API Key', ...None, 'is_active': True}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

chatter/api/auth.py:443: ValidationError
--------------------------- Captured stdout teardown ---------------------------
Event loop issue during rollback: Task <Task pending name='Task-1784' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer.<locals>.async_finalizer() running at /home/yam/.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:281> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
---------------------------- Captured log teardown -----------------------------
ERROR    sqlalchemy.pool.impl.NullPool:base.py:376 Exception closing connection <AdaptedConnection <asyncpg.connection.Connection object at 0x7f848ad00aa0>>
Traceback (most recent call last):
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 374, in _close_connection
    self._dialect.do_close(connection)
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 720, in do_close
    dbapi_connection.close()
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 898, in close
    self.await_(self._connection.close())
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/asyncpg/connection.py", line 1504, in close
    await self._protocol.close(timeout)
  File "asyncpg/protocol/protocol.pyx", line 628, in close
RuntimeError: Task <Task pending name='Task-1784' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer.<locals>.async_finalizer() running at /home/yam/.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:281> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181]> got Future <Future pending> attached to a different loop
________ TestAuthServiceSecurity.test_user_creation_security_validation ________

self = <tests.test_auth_security_comprehensive.TestAuthServiceSecurity object at 0x7f84caa51c10>
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84b9541220>

    @pytest.mark.security
    async def test_user_creation_security_validation(self, db_session: AsyncSession):
        """Test user creation with enhanced security validation."""
        auth_service = AuthService(db_session)
    
        # Test disposable email rejection
        import uuid
        unique_id = str(uuid.uuid4())[:8]
        with pytest.raises(Exception) as exc_info:
            await auth_service.create_user(UserCreate(
                username=f"testuser_{unique_id}",
                email="test@10minutemail.com",
                password="ValidPass123!",
                full_name="Test User"
            ))
        assert "disposable email" in str(exc_info.value).lower()
    
        # Test prohibited username rejection
        unique_id = str(uuid.uuid4())[:8]
        with pytest.raises(Exception) as exc_info:
            await auth_service.create_user(UserCreate(
                username="admin",
                email=f"test_{unique_id}@example.com",
                password="ValidPass123!",
                full_name="Test User"
            ))
        assert "prohibited" in str(exc_info.value).lower()
    
        # Test weak password rejection
        unique_id = str(uuid.uuid4())[:8]
        with pytest.raises(Exception) as exc_info:
            await auth_service.create_user(UserCreate(
                username=f"testuser_{unique_id}",
                email=f"test_{unique_id}@example.com",
                password="123456",
                full_name="Test User"
            ))
>       assert "security requirements" in str(exc_info.value).lower()
E       assert 'security requirements' in "1 validation error for usercreate\npassword\n  string should have at least 8 characters [type=string_too_short, input_value='123456', input_type=str]\n    for further information visit https://errors.pydantic.dev/2.11/v/string_too_short"
E        +  where "1 validation error for usercreate\npassword\n  string should have at least 8 characters [type=string_too_short, input_value='123456', input_type=str]\n    for further information visit https://errors.pydantic.dev/2.11/v/string_too_short" = <built-in method lower of str object at 0x7f8480c50150>()
E        +    where <built-in method lower of str object at 0x7f8480c50150> = "1 validation error for UserCreate\npassword\n  String should have at least 8 characters [type=string_too_short, input_value='123456', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_too_short".lower
E        +      where "1 validation error for UserCreate\npassword\n  String should have at least 8 characters [type=string_too_short, input_value='123456', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_too_short" = str(1 validation error for UserCreate\npassword\n  String should have at least 8 characters [type=string_too_short, input_value='123456', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_too_short)
E        +        where 1 validation error for UserCreate\npassword\n  String should have at least 8 characters [type=string_too_short, input_value='123456', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_too_short = <ExceptionInfo 1 validation error for UserCreate\npassword\n  String should have at least 8 characters [type=string_too_short, input_value='123456', input_type=str]\n    For further information visit https://errors.pydantic.dev/2.11/v/string_too_short tblen=2>.value

tests/test_auth_security_comprehensive.py:260: AssertionError
_____________ TestAuthServiceSecurity.test_secure_api_key_creation _____________

self = <tests.test_auth_security_comprehensive.TestAuthServiceSecurity object at 0x7f84caa52f90>
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f8480c7be00>

    @pytest.mark.security
    async def test_secure_api_key_creation(self, db_session: AsyncSession):
        """Test secure API key creation."""
        auth_service = AuthService(db_session)
    
        # Create test user
        user_data = UserCreate(
            username="testuser",
            email="test@example.com",
            password="ValidPass123!",
            full_name="Test User"
        )
        user = await auth_service.create_user(user_data)
    
        # Create API key
        api_key = await auth_service.create_api_key(user.id, "Test Key")
    
        # Verify key format
        assert api_key.startswith("chatter_api_")
        assert len(api_key) > 50
    
        # Verify key works for authentication
        await db_session.refresh(user)
        found_user = await auth_service.get_user_by_api_key(api_key)
        assert found_user is not None
        assert found_user.id == user.id
    
        # Test duplicate key creation prevention
        with pytest.raises(Exception) as exc_info:
            await auth_service.create_api_key(user.id, "Another Key")
>       assert "already has an API key" in str(exc_info.value).lower()
E       AssertionError: assert 'already has an API key' in '409: user already has an api key. revoke existing key first.'
E        +  where '409: user already has an api key. revoke existing key first.' = <built-in method lower of str object at 0x7f8480c70c00>()
E        +    where <built-in method lower of str object at 0x7f8480c70c00> = '409: User already has an API key. Revoke existing key first.'.lower
E        +      where '409: User already has an API key. Revoke existing key first.' = str(ConflictProblem(status_code=409, detail='User already has an API key. Revoke existing key first.'))
E        +        where ConflictProblem(status_code=409, detail='User already has an API key. Revoke existing key first.') = <ExceptionInfo ConflictProblem(status_code=409, detail='User already has an API key. Revoke existing key first.') tblen=2>.value

tests/test_auth_security_comprehensive.py:342: AssertionError
_______ TestTokenSecurityIntegration.test_token_creation_security_claims _______

self = <tests.test_auth_security_comprehensive.TestTokenSecurityIntegration object at 0x7f84caa53710>
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f8480c96a50>

    @pytest.mark.security
    async def test_token_creation_security_claims(self, db_session: AsyncSession):
        """Test token creation includes proper security claims."""
        auth_service = AuthService(db_session)
    
        # Create test user
        user_data = UserCreate(
            username="testuser",
            email="test@example.com",
            password="ValidPass123!",
            full_name="Test User"
        )
        user = await auth_service.create_user(user_data)
    
        # Create tokens
        tokens = auth_service.create_tokens(user)
    
        # Verify token structure
        assert "access_token" in tokens
        assert "refresh_token" in tokens
        assert "jti" in tokens
        assert "session_id" in tokens
    
        # Decode and verify claims
>       from chatter.utils.security import verify_token
E       ModuleNotFoundError: No module named 'chatter.utils.security'

tests/test_auth_security_comprehensive.py:397: ModuleNotFoundError
_____________ TestRateLimitingIntegration.test_login_rate_limiting _____________

self = <tests.test_auth_security_comprehensive.TestRateLimitingIntegration object at 0x7f84caa53dd0>
client = <httpx.AsyncClient object at 0x7f8480189310>

    @pytest.mark.security
    async def test_login_rate_limiting(self, client: AsyncClient):
        """Test login endpoint rate limiting."""
        login_data = {
            "username": "testuser",
            "password": "wrongpassword"
        }
    
        # Make multiple rapid requests
        responses = []
        for i in range(10):
            response = await client.post("/api/v1/auth/login", json=login_data)
            responses.append(response.status_code)
    
        # Should have some rate limited responses
        # (This test may need adjustment based on actual middleware setup)
        status_codes = set(responses)
>       assert len(status_codes) > 1  # Should have different status codes
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       assert 1 > 1
E        +  where 1 = len({401})

tests/test_auth_security_comprehensive.py:469: AssertionError
------------------------------ Captured log call -------------------------------
WARNING  chatter.core.auth:auth.py:206 [2m2025-09-05T20:06:32.253055Z[0m [[33m[1mwarning  [0m] [1mAuthentication failed - user not found[0m [[34m[1mchatter.core.auth[0m] [36midentifier[0m=[35mtestuser[0m
WARNING  chatter.core.auth:auth.py:206 [2m2025-09-05T20:06:32.255152Z[0m [[33m[1mwarning  [0m] [1mAuthentication failed - user not found[0m [[34m[1mchatter.core.auth[0m] [36midentifier[0m=[35mtestuser[0m
WARNING  chatter.core.auth:auth.py:206 [2m2025-09-05T20:06:32.256898Z[0m [[33m[1mwarning  [0m] [1mAuthentication failed - user not found[0m [[34m[1mchatter.core.auth[0m] [36midentifier[0m=[35mtestuser[0m
WARNING  chatter.core.auth:auth.py:206 [2m2025-09-05T20:06:32.258498Z[0m [[33m[1mwarning  [0m] [1mAuthentication failed - user not found[0m [[34m[1mchatter.core.auth[0m] [36midentifier[0m=[35mtestuser[0m
WARNING  chatter.core.auth:auth.py:206 [2m2025-09-05T20:06:32.260104Z[0m [[33m[1mwarning  [0m] [1mAuthentication failed - user not found[0m [[34m[1mchatter.core.auth[0m] [36midentifier[0m=[35mtestuser[0m
WARNING  chatter.core.auth:auth.py:206 [2m2025-09-05T20:06:32.261894Z[0m [[33m[1mwarning  [0m] [1mAuthentication failed - user not found[0m [[34m[1mchatter.core.auth[0m] [36midentifier[0m=[35mtestuser[0m
WARNING  chatter.core.auth:auth.py:206 [2m2025-09-05T20:06:32.263338Z[0m [[33m[1mwarning  [0m] [1mAuthentication failed - user not found[0m [[34m[1mchatter.core.auth[0m] [36midentifier[0m=[35mtestuser[0m
WARNING  chatter.core.auth:auth.py:206 [2m2025-09-05T20:06:32.265024Z[0m [[33m[1mwarning  [0m] [1mAuthentication failed - user not found[0m [[34m[1mchatter.core.auth[0m] [36midentifier[0m=[35mtestuser[0m
WARNING  chatter.core.auth:auth.py:206 [2m2025-09-05T20:06:32.266711Z[0m [[33m[1mwarning  [0m] [1mAuthentication failed - user not found[0m [[34m[1mchatter.core.auth[0m] [36midentifier[0m=[35mtestuser[0m
WARNING  chatter.core.auth:auth.py:206 [2m2025-09-05T20:06:32.268287Z[0m [[33m[1mwarning  [0m] [1mAuthentication failed - user not found[0m [[34m[1mchatter.core.auth[0m] [36midentifier[0m=[35mtestuser[0m
--------------------------- Captured stdout teardown ---------------------------
Event loop issue during rollback: Task <Task pending name='Task-1970' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer.<locals>.async_finalizer() running at /home/yam/.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:281> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
---------------------------- Captured log teardown -----------------------------
ERROR    sqlalchemy.pool.impl.NullPool:base.py:376 Exception closing connection <AdaptedConnection <asyncpg.connection.Connection object at 0x7f848177a300>>
Traceback (most recent call last):
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 374, in _close_connection
    self._dialect.do_close(connection)
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 720, in do_close
    dbapi_connection.close()
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 898, in close
    self.await_(self._connection.close())
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/asyncpg/connection.py", line 1504, in close
    await self._protocol.close(timeout)
  File "asyncpg/protocol/protocol.pyx", line 628, in close
RuntimeError: Task <Task pending name='Task-1970' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer.<locals>.async_finalizer() running at /home/yam/.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:281> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181]> got Future <Future pending> attached to a different loop
__ TestCompleteAuthSecurityIntegration.test_complete_secure_registration_flow __

self = <tests.test_auth_security_integration.TestCompleteAuthSecurityIntegration object at 0x7f84caa64dd0>
client = <httpx.AsyncClient object at 0x7f845ea01b80>

    @pytest.mark.integration
    @pytest.mark.security
    async def test_complete_secure_registration_flow(self, client: AsyncClient):
        """Test complete secure registration with all validations."""
        # Test 1: Try registration with disposable email (should fail)
        disposable_email_data = {
            "username": "testuser",
            "email": "test@10minutemail.com",
            "password": "ValidPass123!",
            "full_name": "Test User"
        }
    
        response = await client.post("/api/v1/auth/register", json=disposable_email_data)
        assert response.status_code == 400
        assert "disposable email" in response.json()["detail"].lower()
    
        # Test 2: Try registration with prohibited username (should fail)
        prohibited_username_data = {
            "username": "admin",
            "email": "test@example.com",
            "password": "ValidPass123!",
            "full_name": "Test User"
        }
    
        response = await client.post("/api/v1/auth/register", json=prohibited_username_data)
        assert response.status_code == 400
        assert "prohibited" in response.json()["detail"].lower()
    
        # Test 3: Try registration with weak password (should fail)
        weak_password_data = {
            "username": "testuser",
            "email": "test@example.com",
            "password": "123456",
            "full_name": "Test User"
        }
    
        response = await client.post("/api/v1/auth/register", json=weak_password_data)
>       assert response.status_code == 400
E       assert 422 == 400
E        +  where 422 = <Response [422 Unprocessable Entity]>.status_code

tests/test_auth_security_integration.py:57: AssertionError
------------------------------ Captured log call -------------------------------
WARNING  chatter.api.auth:auth.py:177 [2m2025-09-05T20:06:37.760846Z[0m [[33m[1mwarning  [0m] [1mRegistration failed           [0m [[34m[1mchatter.api.auth[0m] [36memail[0m=[35mtest@10minutemail.co...[0m [36merror[0m=[35m400: Invalid email format or disposable email domain[0m [36mip_address[0m=[35m127.0.0.1[0m [36musername[0m=[35mtestuser[0m
WARNING  chatter.api.auth:auth.py:177 [2m2025-09-05T20:06:37.762159Z[0m [[33m[1mwarning  [0m] [1mRegistration failed           [0m [[34m[1mchatter.api.auth[0m] [36memail[0m=[35mtest@example.com[0m [36merror[0m=[35m400: Username format is invalid or contains prohibited patterns[0m [36mip_address[0m=[35m127.0.0.1[0m [36musername[0m=[35madmin[0m
______ TestCompleteAuthSecurityIntegration.test_secure_api_key_management ______

self = <tests.test_auth_security_integration.TestCompleteAuthSecurityIntegration object at 0x7f84caa65460>
client = <httpx.AsyncClient object at 0x7f845dd772f0>

    @pytest.mark.integration
    @pytest.mark.security
    async def test_secure_api_key_management(self, client: AsyncClient):
        """Test secure API key management with enhanced security."""
        # Register and login
        user_data = {
            "username": "apiuser",
            "email": "api@example.com",
            "password": "ValidPass123!",
            "full_name": "API User"
        }
    
        register_response = await client.post("/api/v1/auth/register", json=user_data)
        tokens = register_response.json()
        auth_headers = {"Authorization": f"Bearer {tokens['access_token']}"}
    
        # Create API key
        with patch('chatter.api.auth.log_api_key_created') as mock_created:
            api_key_response = await client.post(
                "/api/v1/auth/api-key",
                json={"name": "Test API Key"},
                headers=auth_headers
            )
            assert api_key_response.status_code == 200
            mock_created.assert_called_once()
    
        api_key_data = api_key_response.json()
        api_key = api_key_data["api_key"]
    
        # Verify secure API key format
        assert api_key.startswith("chatter_api_")
        assert len(api_key) > 50
    
        # Test API key authentication
        api_auth_headers = {"Authorization": f"Bearer {api_key}"}
        profile_response = await client.get("/api/v1/auth/me", headers=api_auth_headers)
>       assert profile_response.status_code == 200
E       assert 401 == 200
E        +  where 401 = <Response [401 Unauthorized]>.status_code

tests/test_auth_security_integration.py:163: AssertionError
--------------------------- Captured stdout teardown ---------------------------
Event loop issue during rollback: Task <Task pending name='Task-2028' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer.<locals>.async_finalizer() running at /home/yam/.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:281> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
---------------------------- Captured log teardown -----------------------------
ERROR    sqlalchemy.pool.impl.NullPool:base.py:376 Exception closing connection <AdaptedConnection <asyncpg.connection.Connection object at 0x7f845df109b0>>
Traceback (most recent call last):
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 374, in _close_connection
    self._dialect.do_close(connection)
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 720, in do_close
    dbapi_connection.close()
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 898, in close
    self.await_(self._connection.close())
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/asyncpg/connection.py", line 1504, in close
    await self._protocol.close(timeout)
  File "asyncpg/protocol/protocol.pyx", line 628, in close
RuntimeError: Task <Task pending name='Task-2028' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer.<locals>.async_finalizer() running at /home/yam/.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:281> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181]> got Future <Future pending> attached to a different loop
_____ TestCompleteAuthSecurityIntegration.test_secure_password_change_flow _____

self = <tests.test_auth_security_integration.TestCompleteAuthSecurityIntegration object at 0x7f84caa657f0>
client = <httpx.AsyncClient object at 0x7f845d24d370>

    @pytest.mark.integration
    @pytest.mark.security
    async def test_secure_password_change_flow(self, client: AsyncClient):
        """Test secure password change with enhanced validation."""
        # Register user
        user_data = {
            "username": "passuser",
            "email": "pass@example.com",
            "password": "OldPass123!",
            "full_name": "Password User"
        }
    
        register_response = await client.post("/api/v1/auth/register", json=user_data)
        tokens = register_response.json()
>       auth_headers = {"Authorization": f"Bearer {tokens['access_token']}"}
                                                   ^^^^^^^^^^^^^^^^^^^^^^
E       KeyError: 'access_token'

tests/test_auth_security_integration.py:195: KeyError
------------------------------ Captured log call -------------------------------
WARNING  chatter.api.auth:auth.py:177 [2m2025-09-05T20:06:40.644845Z[0m [[33m[1mwarning  [0m] [1mRegistration failed           [0m [[34m[1mchatter.api.auth[0m] [36memail[0m=[35mpass@example.com[0m [36merror[0m=[35m400: Password should not contain personal information[0m [36mip_address[0m=[35m127.0.0.1[0m [36musername[0m=[35mpassuser[0m
_______ TestCompleteAuthSecurityIntegration.test_token_security_features _______

self = <tests.test_auth_security_integration.TestCompleteAuthSecurityIntegration object at 0x7f84caa65b80>
client = <httpx.AsyncClient object at 0x7f845d0f2450>

    @pytest.mark.integration
    @pytest.mark.security
    async def test_token_security_features(self, client: AsyncClient):
        """Test enhanced token security features."""
        # Register user
        user_data = {
            "username": "tokenuser",
            "email": "token@example.com",
            "password": "ValidPass123!",
            "full_name": "Token User"
        }
    
        register_response = await client.post("/api/v1/auth/register", json=user_data)
        tokens = register_response.json()
    
        # Verify token structure
>       assert "jti" in tokens
E       AssertionError: assert 'jti' in {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFUMEpIS0Y5UDgxSjkyTlM5UjdIVCIsImVtYWlsIjoidG9rZW5AZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRva2VudXNlciIsImp0aSI6IjlkZDI3NmVmLTIzMDItNDVjYS05YzkzLWJhNGZkOWQzZThhMiIsInR5cGUiOiJhY2Nlc3MiLCJpYXQiOjE3NTcxMDI4MDEsInNlc3Npb25faWQiOiIyMDA5YjA1OC0zMDhhLTRmNTMtYmQ1Yy1iMjU3ODI3YzRkNTciLCJwZXJtaXNzaW9ucyI6WyJyZWFkOnByb2ZpbGUiLCJ3cml0ZTpwcm9maWxlIl0sImV4cCI6MTc1NzEwNDYwMX0.ELMe2nVJ3t8ox4EkCeHA7yQ_SAp4YDBw-rEw1tS1QHU', 'expires_in': 1800, 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFUMEpIS0Y5UDgxSjkyTlM5UjdIVCIsImp0aSI6IjlkZDI3NmVmLTIzMDItNDVjYS05YzkzLWJhNGZkOWQzZThhMiIsInR5cGUiOiJyZWZyZXNoIiwiaWF0IjoxNzU3MTAyODAxLCJzZXNzaW9uX2lkIjoiMjAwOWIwNTgtMzA4YS00ZjUzLWJkNWMtYjI1NzgyN2M0ZDU3IiwiZXhwIjoxNzU3NzA3NjAxfQ.x-bIYSYIiw7fS9xgL99vneNKIstmiIolA5O0c2a473w', 'token_type': 'bearer', ...}

tests/test_auth_security_integration.py:274: AssertionError
--------------------------- Captured stdout teardown ---------------------------
Event loop issue during rollback: Task <Task pending name='Task-2056' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer.<locals>.async_finalizer() running at /home/yam/.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:281> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
---------------------------- Captured log teardown -----------------------------
ERROR    sqlalchemy.pool.impl.NullPool:base.py:376 Exception closing connection <AdaptedConnection <asyncpg.connection.Connection object at 0x7f845df11d60>>
Traceback (most recent call last):
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 374, in _close_connection
    self._dialect.do_close(connection)
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 720, in do_close
    dbapi_connection.close()
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 898, in close
    self.await_(self._connection.close())
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/asyncpg/connection.py", line 1504, in close
    await self._protocol.close(timeout)
  File "asyncpg/protocol/protocol.pyx", line 628, in close
RuntimeError: Task <Task pending name='Task-2056' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer.<locals>.async_finalizer() running at /home/yam/.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:281> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181]> got Future <Future pending> attached to a different loop
__ TestCompleteAuthSecurityIntegration.test_comprehensive_security_validation __

self = <tests.test_auth_security_integration.TestCompleteAuthSecurityIntegration object at 0x7f84caa65e50>
client = <httpx.AsyncClient object at 0x7f845c26fbf0>

    @pytest.mark.integration
    @pytest.mark.security
    async def test_comprehensive_security_validation(self, client: AsyncClient):
        """Test comprehensive security validation across all endpoints."""
        # Test various security scenarios
        security_tests = [
            {
                "name": "XSS in full_name",
                "data": {
                    "username": "xssuser",
                    "email": "xss@example.com",
                    "password": "ValidPass123!",
                    "full_name": "<script>alert('xss')</script>"
                },
                "should_succeed": True,  # Should be sanitized, not rejected
            },
            {
                "name": "SQL injection in username",
                "data": {
                    "username": "'; DROP TABLE users; --",
                    "email": "sql@example.com",
                    "password": "ValidPass123!",
                    "full_name": "SQL User"
                },
                "should_succeed": False,  # Should be rejected
            },
            {
                "name": "Extremely long fields",
                "data": {
                    "username": "a" * 1000,
                    "email": "long@example.com",
                    "password": "ValidPass123!",
                    "full_name": "b" * 10000
                },
                "should_succeed": False,  # Should be rejected
            },
            {
                "name": "Unicode and special characters",
                "data": {
                    "username": "unicode_用户",
                    "email": "unicode@example.com",
                    "password": "ValidPass123!",
                    "full_name": "Unicode 用户 👤"
                },
                "should_succeed": False,  # Username should be rejected
            }
        ]
    
        for test in security_tests:
            response = await client.post("/api/v1/auth/register", json=test["data"])
    
            if test["should_succeed"]:
                assert response.status_code in [201, 422], f"Test '{test['name']}' failed"
                if response.status_code == 201:
                    # Verify XSS was sanitized
                    if "script" in test["data"].get("full_name", ""):
                        user_data = response.json()["user"]
>                       assert "<script>" not in user_data.get("full_name", "")
E                       assert '<script>' not in "<script>ale...s')</script>"
E                         
E                         '<script>' is contained here:
E                           <script>alert('xss')</script>
E                         ? ++++++++

tests/test_auth_security_integration.py:433: AssertionError
--------------------------- Captured stdout teardown ---------------------------
Event loop issue during rollback: Task <Task pending name='Task-2086' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer.<locals>.async_finalizer() running at /home/yam/.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:281> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
---------------------------- Captured log teardown -----------------------------
ERROR    sqlalchemy.pool.impl.NullPool:base.py:376 Exception closing connection <AdaptedConnection <asyncpg.connection.Connection object at 0x7f845df132f0>>
Traceback (most recent call last):
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 374, in _close_connection
    self._dialect.do_close(connection)
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 720, in do_close
    dbapi_connection.close()
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 898, in close
    self.await_(self._connection.close())
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/asyncpg/connection.py", line 1504, in close
    await self._protocol.close(timeout)
  File "asyncpg/protocol/protocol.pyx", line 628, in close
RuntimeError: Task <Task pending name='Task-2086' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer.<locals>.async_finalizer() running at /home/yam/.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:281> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181]> got Future <Future pending> attached to a different loop
_____ TestSecurityPerformanceIntegration.test_multiple_concurrent_requests _____

self = <tests.test_auth_security_integration.TestSecurityPerformanceIntegration object at 0x7f84caa66420>
client = <httpx.AsyncClient object at 0x7f844630d610>

    @pytest.mark.integration
    @pytest.mark.performance
    async def test_multiple_concurrent_requests(self, client: AsyncClient):
        """Test system handles multiple concurrent auth requests."""
        # Create multiple registration tasks
        tasks = []
        for i in range(10):
            user_data = {
                "username": f"concurrentuser{i}",
                "email": f"concurrent{i}@example.com",
                "password": "ValidPass123!",
                "full_name": f"Concurrent User {i}"
            }
            task = client.post("/api/v1/auth/register", json=user_data)
            tasks.append(task)
    
        # Execute all tasks concurrently
        import time
        start_time = time.time()
        responses = await asyncio.gather(*tasks, return_exceptions=True)
        total_time = time.time() - start_time
    
        # Check results
        successful_registrations = 0
        for response in responses:
            if hasattr(response, 'status_code') and response.status_code == 201:
                successful_registrations += 1
    
        # Should handle concurrent requests reasonably well
>       assert successful_registrations >= 8  # At least 80% success rate
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       assert 1 >= 8

tests/test_auth_security_integration.py:516: AssertionError
------------------------------ Captured log call -------------------------------
WARNING  chatter.api.auth:auth.py:177 [2m2025-09-05T20:06:44.831819Z[0m [[33m[1mwarning  [0m] [1mRegistration failed           [0m [[34m[1mchatter.api.auth[0m] [36memail[0m=[35mconcurrent1@example....[0m [36merror[0m=[35mThis session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)[0m [36mip_address[0m=[35m127.0.0.1[0m [36musername[0m=[35mconcurrentuser1[0m
WARNING  chatter.api.auth:auth.py:177 [2m2025-09-05T20:06:44.834377Z[0m [[33m[1mwarning  [0m] [1mRegistration failed           [0m [[34m[1mchatter.api.auth[0m] [36memail[0m=[35mconcurrent2@example....[0m [36merror[0m=[35mThis session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)[0m [36mip_address[0m=[35m127.0.0.1[0m [36musername[0m=[35mconcurrentuser2[0m
WARNING  chatter.api.auth:auth.py:177 [2m2025-09-05T20:06:44.835733Z[0m [[33m[1mwarning  [0m] [1mRegistration failed           [0m [[34m[1mchatter.api.auth[0m] [36memail[0m=[35mconcurrent3@example....[0m [36merror[0m=[35mThis session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)[0m [36mip_address[0m=[35m127.0.0.1[0m [36musername[0m=[35mconcurrentuser3[0m
WARNING  chatter.api.auth:auth.py:177 [2m2025-09-05T20:06:44.836963Z[0m [[33m[1mwarning  [0m] [1mRegistration failed           [0m [[34m[1mchatter.api.auth[0m] [36memail[0m=[35mconcurrent4@example....[0m [36merror[0m=[35mThis session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)[0m [36mip_address[0m=[35m127.0.0.1[0m [36musername[0m=[35mconcurrentuser4[0m
WARNING  chatter.api.auth:auth.py:177 [2m2025-09-05T20:06:44.838117Z[0m [[33m[1mwarning  [0m] [1mRegistration failed           [0m [[34m[1mchatter.api.auth[0m] [36memail[0m=[35mconcurrent5@example....[0m [36merror[0m=[35mThis session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)[0m [36mip_address[0m=[35m127.0.0.1[0m [36musername[0m=[35mconcurrentuser5[0m
WARNING  chatter.api.auth:auth.py:177 [2m2025-09-05T20:06:44.839267Z[0m [[33m[1mwarning  [0m] [1mRegistration failed           [0m [[34m[1mchatter.api.auth[0m] [36memail[0m=[35mconcurrent6@example....[0m [36merror[0m=[35mThis session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)[0m [36mip_address[0m=[35m127.0.0.1[0m [36musername[0m=[35mconcurrentuser6[0m
WARNING  chatter.api.auth:auth.py:177 [2m2025-09-05T20:06:44.840722Z[0m [[33m[1mwarning  [0m] [1mRegistration failed           [0m [[34m[1mchatter.api.auth[0m] [36memail[0m=[35mconcurrent7@example....[0m [36merror[0m=[35mThis session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)[0m [36mip_address[0m=[35m127.0.0.1[0m [36musername[0m=[35mconcurrentuser7[0m
WARNING  chatter.api.auth:auth.py:177 [2m2025-09-05T20:06:44.842322Z[0m [[33m[1mwarning  [0m] [1mRegistration failed           [0m [[34m[1mchatter.api.auth[0m] [36memail[0m=[35mconcurrent8@example....[0m [36merror[0m=[35mThis session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)[0m [36mip_address[0m=[35m127.0.0.1[0m [36musername[0m=[35mconcurrentuser8[0m
WARNING  chatter.api.auth:auth.py:177 [2m2025-09-05T20:06:44.843841Z[0m [[33m[1mwarning  [0m] [1mRegistration failed           [0m [[34m[1mchatter.api.auth[0m] [36memail[0m=[35mconcurrent9@example....[0m [36merror[0m=[35mThis session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)[0m [36mip_address[0m=[35m127.0.0.1[0m [36musername[0m=[35mconcurrentuser9[0m
--------------------------- Captured stdout teardown ---------------------------
Event loop issue during rollback: Task <Task pending name='Task-2126' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer.<locals>.async_finalizer() running at /home/yam/.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:281> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
---------------------------- Captured log teardown -----------------------------
ERROR    sqlalchemy.pool.impl.NullPool:base.py:376 Exception closing connection <AdaptedConnection <asyncpg.connection.Connection object at 0x7f844635c050>>
Traceback (most recent call last):
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/pool/base.py", line 374, in _close_connection
    self._dialect.do_close(connection)
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py", line 720, in do_close
    dbapi_connection.close()
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py", line 898, in close
    self.await_(self._connection.close())
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/asyncpg/connection.py", line 1504, in close
    await self._protocol.close(timeout)
  File "asyncpg/protocol/protocol.pyx", line 628, in close
RuntimeError: Task <Task pending name='Task-2126' coro=<_wrap_asyncgen_fixture.<locals>._asyncgen_fixture_wrapper.<locals>.finalizer.<locals>.async_finalizer() running at /home/yam/.local/lib/python3.12/site-packages/pytest_asyncio/plugin.py:281> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181]> got Future <Future pending> attached to a different loop
___________________ TestAuthUnitTests.test_get_current_user ____________________

self = <tests.test_auth_unit.TestAuthUnitTests object at 0x7f84caa8ca70>
client = <httpx.AsyncClient object at 0x7f848838acc0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFUQ0c5MkNOMFlRTUs4Q0NRSzRBUiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjEzfQ.j1b7vnGkGcrdV42W8G3GXPmom9FX9cRYNWttU_9w6go'}

    @pytest.mark.unit
    async def test_get_current_user(self, client: AsyncClient, auth_headers: dict):
        """Test getting current user information."""
>       response = await client.get("/api/v1/auth/me", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_auth_unit.py:144: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-2258' coro=<TestAuthUnitTests.test_get_current_user() running at /home/yam/chatter/tests/test_auth_unit.py:144> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFUQ0c5MkNOMFlRTUs4Q0NRSzRBUiIsImVtYWlsIjoidGVzdHVzZXJiY2JiYmNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmNiYmJjIiwianRpIjoiZWVjZTAwYzEtYzI4OC00MWQ0LThjNzItODU4YzIwNDdhNzlhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjgxMywic2Vzc2lvbl9pZCI6IjlhMTI2NGY5LTAwNjEtNDZiZi1iMzBkLTI5ZDVjZGUxOTlkOCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjEzfQ.j1b7vnGkGcrdV42W8G3GXPmom9FX9cRYNWttU_9w6go
_____________ TestAuthUnitTests.test_get_current_user_without_auth _____________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848d5e3f80>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848d5e3f80>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_auth_unit.TestAuthUnitTests object at 0x7f84caa8ce60>
client = <httpx.AsyncClient object at 0x7f848d5e3320>

    @pytest.mark.unit
    async def test_get_current_user_without_auth(self, client: AsyncClient):
        """Test getting current user without authentication."""
>       response = await client.get("/api/v1/auth/me")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_auth_unit.py:158: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848d5e3f80>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:06:54.873603Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m36dd0247-a8b0-4788-a6af-4dac9755b4a7[0m [36mstatus_code[0m=[35m401[0m
____________________ TestAuthUnitTests.test_update_profile _____________________

self = <tests.test_auth_unit.TestAuthUnitTests object at 0x7f84caa8dd30>
client = <httpx.AsyncClient object at 0x7f848bd77f50>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFUR1dDU1NHNEZTNVhLV1lTR1lTSiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjE4fQ.wE4Y-vTQsbgqP8jZWcAbmcXJ0EmNP-IBNbAnnVf0FcA'}

    @pytest.mark.unit
    async def test_update_profile(self, client: AsyncClient, auth_headers: dict):
        """Test updating user profile."""
        update_data = {
            "full_name": "Updated Full Name",
            "email": "updated@example.com",
        }
    
>       response = await client.put("/api/v1/auth/me", json=update_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_auth_unit.py:212: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1896: in put
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-2326' coro=<TestAuthUnitTests.test_update_profile() running at /home/yam/chatter/tests/test_auth_unit.py:212> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFUR1dDU1NHNEZTNVhLV1lTR1lTSiIsImVtYWlsIjoidGVzdHVzZXJmZmVlZmJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmZlZWZiIiwianRpIjoiN2E1ZDMxZGYtOTg0Yy00MjBmLTkyYmItYTgwMTVhNzdlMTllIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjgxOCwic2Vzc2lvbl9pZCI6ImJhMTA0ZjNmLTkxZDAtNGEwZi1iNjY4LTc1YzE1MzkzMDgzYiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjE4fQ.wE4Y-vTQsbgqP8jZWcAbmcXJ0EmNP-IBNbAnnVf0FcA
______________ TestAuthUnitTests.test_update_profile_without_auth ______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848bea2c60>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848bea2c60>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_auth_unit.TestAuthUnitTests object at 0x7f84caa8e120>
client = <httpx.AsyncClient object at 0x7f848bea1fd0>

    @pytest.mark.unit
    async def test_update_profile_without_auth(self, client: AsyncClient):
        """Test updating profile without authentication."""
        update_data = {
            "full_name": "Updated Full Name",
        }
    
>       response = await client.put("/api/v1/auth/me", json=update_data)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_auth_unit.py:226: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1896: in put
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848bea2c60>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:06:59.325845Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m271fe5e6-f9d0-4d1b-ab65-6f5dc99bfa20[0m [36mstatus_code[0m=[35m401[0m
____________________ TestAuthUnitTests.test_change_password ____________________

self = <tests.test_auth_unit.TestAuthUnitTests object at 0x7f84caa8e4b0>
client = <httpx.AsyncClient object at 0x7f848d0b6de0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFUSllWVk1QVFkwV0RQN1lLMVFYMSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjIwfQ.NygV-2tdOA_EzDwZHDjC6j9Y5QUz7iXVVyV3MGsEhVA'}
test_user_data = {'email': 'alice@example.com', 'full_name': 'Alice User', 'password': 'SecureP@ssw0rd!', 'username': 'alice'}

    @pytest.mark.unit
    async def test_change_password(self, client: AsyncClient, auth_headers: dict, test_user_data: dict):
        """Test changing user password."""
        password_data = {
            "current_password": test_user_data["password"],
            "new_password": "NewSecurePassword123!",
        }
    
>       response = await client.post("/api/v1/auth/change-password", json=password_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_auth_unit.py:237: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-2353' coro=<TestAuthUnitTests.test_change_password() running at /home/yam/chatter/tests/test_auth_unit.py:237> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFUSllWVk1QVFkwV0RQN1lLMVFYMSIsImVtYWlsIjoidGVzdHVzZXJkYmFjZWVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGJhY2VlIiwianRpIjoiM2M0M2NjM2MtNDg5My00MzZhLTllNGQtZWNlNjg5YzFjZjc4IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjgyMCwic2Vzc2lvbl9pZCI6IjhjMzkyYzgyLWQ1MWEtNDY4MC05NzRjLWI3NjRiMTViZThhYyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjIwfQ.NygV-2tdOA_EzDwZHDjC6j9Y5QUz7iXVVyV3MGsEhVA
_____________ TestAuthUnitTests.test_change_password_wrong_current _____________

self = <tests.test_auth_unit.TestAuthUnitTests object at 0x7f84caa8e8d0>
client = <httpx.AsyncClient object at 0x7f84881cd8b0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFUTTdOWlE4SDIxQzJHS1JCM1hEWCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjIxfQ.lQXqyhIBXvbgNvw8A4vQqaNBtxiUrmw-6FgkNHyh8sM'}

    @pytest.mark.unit
    async def test_change_password_wrong_current(self, client: AsyncClient, auth_headers: dict):
        """Test changing password with wrong current password."""
        password_data = {
            "current_password": "wrong_current_password",
            "new_password": "NewSecurePassword123!",
        }
    
>       response = await client.post("/api/v1/auth/change-password", json=password_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_auth_unit.py:252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-2367' coro=<TestAuthUnitTests.test_change_password_wrong_current() running at /home/yam/chatter/tests/test_auth_unit.py:252> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFUTTdOWlE4SDIxQzJHS1JCM1hEWCIsImVtYWlsIjoidGVzdHVzZXJkY2RiZGFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGNkYmRhIiwianRpIjoiMzcxOWRiZTEtNjdlNC00ZjQ5LTkwM2UtMDVmZTZkYjk3M2E1IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjgyMSwic2Vzc2lvbl9pZCI6ImRlNGRiYzFhLWEzMTYtNDBkMC04YTg0LWVhNDNhY2NiODQwOSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjIxfQ.lQXqyhIBXvbgNvw8A4vQqaNBtxiUrmw-6FgkNHyh8sM
________________________ TestAuthUnitTests.test_logout _________________________

self = <tests.test_auth_unit.TestAuthUnitTests object at 0x7f84caa8ec90>
client = <httpx.AsyncClient object at 0x7f848c79c170>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFUUEM0M0dSR0M1NllCMVhDVzdYVCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjIzfQ.HEuoIFOdr9RS-hn_-bj66uHnOXncYgakllTHumZ7-Zw'}

    @pytest.mark.unit
    async def test_logout(self, client: AsyncClient, auth_headers: dict):
        """Test user logout."""
>       response = await client.post("/api/v1/auth/logout", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_auth_unit.py:258: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-2381' coro=<TestAuthUnitTests.test_logout() running at /home/yam/chatter/tests/test_auth_unit.py:258> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFUUEM0M0dSR0M1NllCMVhDVzdYVCIsImVtYWlsIjoidGVzdHVzZXJmYmFkZmFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmJhZGZhIiwianRpIjoiY2E0NThmOTMtMGIyZS00NTNjLTgyODItZjQ2ZjY2MGRlM2U0IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjgyMywic2Vzc2lvbl9pZCI6ImFmNDUyOTBjLTkwZTMtNDYwOC1hNjhhLTE5OTAyNjBiODU5MyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjIzfQ.HEuoIFOdr9RS-hn_-bj66uHnOXncYgakllTHumZ7-Zw
__________________ TestDatabaseCommands.test_db_init_success ___________________

self = <tests.test_cli.TestDatabaseCommands object at 0x7f84ca561190>
mock_check_db = <AsyncMock name='check_database_connection' id='140207268639520'>
mock_init_db = <MagicMock name='db_init' id='140207268634384'>

    @pytest.mark.asyncio
    @patch('chatter.cli.db_init')
    @patch('chatter.cli.check_database_connection')
    async def test_db_init_success(self, mock_check_db, mock_init_db):
        """Test successful database initialization."""
        mock_check_db.return_value = True
        mock_init_db.return_value = None
    
        with patch('chatter.cli.console') as mock_console:
>           await db_init()
                  ^^^^^^^^^

tests/test_cli.py:368: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
chatter/cli.py:677: in db_init
    asyncio.run(_init())
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

main = <coroutine object db_init.<locals>._init at 0x7f845cf006c0>

    def run(main, *, debug=None, loop_factory=None):
        """Execute the coroutine and return the result.
    
        This function runs the passed coroutine, taking care of
        managing the asyncio event loop, finalizing asynchronous
        generators and closing the default executor.
    
        This function cannot be called when another asyncio event loop is
        running in the same thread.
    
        If debug is True, the event loop will be run in debug mode.
        If loop_factory is passed, it is used for new event loop creation.
    
        This function always creates a new event loop and closes it at the end.
        It should be used as a main entry point for asyncio programs, and should
        ideally only be called once.
    
        The executor is given a timeout duration of 5 minutes to shutdown.
        If the executor hasn't finished within that duration, a warning is
        emitted and the executor is closed.
    
        Example:
    
            async def main():
                await asyncio.sleep(1)
                print('hello')
    
            asyncio.run(main())
        """
        if events._get_running_loop() is not None:
            # fail fast with short traceback
>           raise RuntimeError(
                "asyncio.run() cannot be called from a running event loop")
E           RuntimeError: asyncio.run() cannot be called from a running event loop

/usr/lib64/python3.12/asyncio/runners.py:191: RuntimeError
_____________ TestDatabaseCommands.test_db_init_connection_failure _____________

self = <tests.test_cli.TestDatabaseCommands object at 0x7f84ca561340>
mock_check_db = <AsyncMock name='check_database_connection' id='140207268834640'>
mock_init_db = <MagicMock name='db_init' id='140207242173408'>

    @pytest.mark.asyncio
    @patch('chatter.cli.db_init')
    @patch('chatter.cli.check_database_connection')
    async def test_db_init_connection_failure(self, mock_check_db, mock_init_db):
        """Test database initialization with connection failure."""
        mock_check_db.return_value = False
    
        with patch('chatter.cli.console') as mock_console:
>           await db_init()
                  ^^^^^^^^^

tests/test_cli.py:382: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
chatter/cli.py:677: in db_init
    asyncio.run(_init())
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

main = <coroutine object db_init.<locals>._init at 0x7f8480c4f510>

    def run(main, *, debug=None, loop_factory=None):
        """Execute the coroutine and return the result.
    
        This function runs the passed coroutine, taking care of
        managing the asyncio event loop, finalizing asynchronous
        generators and closing the default executor.
    
        This function cannot be called when another asyncio event loop is
        running in the same thread.
    
        If debug is True, the event loop will be run in debug mode.
        If loop_factory is passed, it is used for new event loop creation.
    
        This function always creates a new event loop and closes it at the end.
        It should be used as a main entry point for asyncio programs, and should
        ideally only be called once.
    
        The executor is given a timeout duration of 5 minutes to shutdown.
        If the executor hasn't finished within that duration, a warning is
        emitted and the executor is closed.
    
        Example:
    
            async def main():
                await asyncio.sleep(1)
                print('hello')
    
            asyncio.run(main())
        """
        if events._get_running_loop() is not None:
            # fail fast with short traceback
>           raise RuntimeError(
                "asyncio.run() cannot be called from a running event loop")
E           RuntimeError: asyncio.run() cannot be called from a running event loop

/usr/lib64/python3.12/asyncio/runners.py:191: RuntimeError
________________ TestDatabaseCommands.test_db_init_init_failure ________________

self = <tests.test_cli.TestDatabaseCommands object at 0x7f84ca561580>
mock_check_db = <AsyncMock name='check_database_connection' id='140207269469536'>
mock_init_db = <MagicMock name='db_init' id='140207269468624'>

    @pytest.mark.asyncio
    @patch('chatter.cli.db_init')
    @patch('chatter.cli.check_database_connection')
    async def test_db_init_init_failure(self, mock_check_db, mock_init_db):
        """Test database initialization with init failure."""
        mock_check_db.return_value = True
        mock_init_db.side_effect = Exception("Init failed")
    
        with patch('chatter.cli.console') as mock_console:
>           await db_init()
                  ^^^^^^^^^

tests/test_cli.py:397: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
chatter/cli.py:677: in db_init
    asyncio.run(_init())
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

main = <coroutine object db_init.<locals>._init at 0x7f848c3769b0>

    def run(main, *, debug=None, loop_factory=None):
        """Execute the coroutine and return the result.
    
        This function runs the passed coroutine, taking care of
        managing the asyncio event loop, finalizing asynchronous
        generators and closing the default executor.
    
        This function cannot be called when another asyncio event loop is
        running in the same thread.
    
        If debug is True, the event loop will be run in debug mode.
        If loop_factory is passed, it is used for new event loop creation.
    
        This function always creates a new event loop and closes it at the end.
        It should be used as a main entry point for asyncio programs, and should
        ideally only be called once.
    
        The executor is given a timeout duration of 5 minutes to shutdown.
        If the executor hasn't finished within that duration, a warning is
        emitted and the executor is closed.
    
        Example:
    
            async def main():
                await asyncio.sleep(1)
                print('hello')
    
            asyncio.run(main())
        """
        if events._get_running_loop() is not None:
            # fail fast with short traceback
>           raise RuntimeError(
                "asyncio.run() cannot be called from a running event loop")
E           RuntimeError: asyncio.run() cannot be called from a running event loop

/usr/lib64/python3.12/asyncio/runners.py:191: RuntimeError
________ TestInteractivePromptCreation.test_interactive_prompt_creation ________

self = <tests.test_cli.TestInteractivePromptCreation object at 0x7f84ca561970>
mock_get_client = <MagicMock name='get_api_client' id='140207250285120'>
mock_confirm = <MagicMock name='ask' id='140207250342544'>
mock_prompt = <MagicMock name='ask' id='140207249857696'>

    @pytest.mark.asyncio
    @patch('chatter.cli.Prompt.ask')
    @patch('chatter.cli.Confirm.ask')
    @patch('chatter.cli.get_api_client')
    async def test_interactive_prompt_creation(self, mock_get_client, mock_confirm, mock_prompt):
        """Test interactive prompt creation flow."""
        # Mock interactive input
        mock_prompt.side_effect = [
            "Test Prompt",        # name
            "Hello {name}",       # content
            "Test description",   # description
            "greeting",           # category
            "template",           # prompt_type
            "f-string",          # template_format
            "hello,greeting"      # tags
        ]
        mock_confirm.return_value = True  # public
    
        # Mock API client
        mock_client = MagicMock()
        mock_client.request = AsyncMock(return_value={
            "id": "test_id",
            "name": "Test Prompt",
            "status": "created"
        })
        mock_client.close = AsyncMock()
        mock_get_client.return_value = mock_client
    
        # This would normally be called through the CLI command
        # We're testing the underlying async function logic
        from chatter.cli import create_prompt
    
        runner = CliRunner()
        result = runner.invoke(app, [
            "prompts", "create",
            "--name", "Test Prompt",
            "--content", "Hello {name}",
            "--interactive"
        ])
    
        # Should complete without error
>       assert result.exit_code == 0
E       AssertionError: assert 1 == 0
E        +  where 1 = <Result RuntimeError('asyncio.run() cannot be called from a running event loop')>.exit_code

tests/test_cli.py:448: AssertionError
________________ TestCLIIntegration.test_full_prompt_lifecycle _________________

self = <tests.test_cli.TestCLIIntegration object at 0x7f84ca562270>
mock_get_client = <MagicMock name='get_api_client' id='140207246873696'>

    @patch('chatter.cli.get_api_client')
    def test_full_prompt_lifecycle(self, mock_get_client):
        """Test complete prompt management lifecycle."""
        mock_client = MagicMock()
    
        # Mock different API responses for different commands
        def mock_request(method, endpoint, **kwargs):
            if endpoint == "/prompts" and method == "POST":
                return {"id": "new_prompt_id", "name": "Test Prompt"}
            elif endpoint == "/prompts" and method == "GET":
                return {
                    "prompts": [{
                        "id": "new_prompt_id",
                        "name": "Test Prompt",
                        "prompt_type": "template",
                        "category": "test"
                    }],
                    "total_count": 1
                }
            elif endpoint == "/prompts/new_prompt_id" and method == "DELETE":
                return {"status": "deleted"}
            return {}
    
        mock_client.request = AsyncMock(side_effect=mock_request)
        mock_client.close = AsyncMock()
        mock_get_client.return_value = mock_client
    
        # Create prompt
        result = self.runner.invoke(app, [
            "prompts", "create",
            "--name", "Test Prompt",
            "--content", "Hello {name}",
            "--category", "test"
        ])
>       assert result.exit_code == 0
E       assert 1 == 0
E        +  where 1 = <Result UnboundLocalError("cannot access local variable 'name' where it is not associated with a value")>.exit_code

tests/test_cli.py:552: AssertionError
_____________ TestCLIErrorScenarios.test_api_unavailable_scenarios _____________

self = <tests.test_cli.TestCLIErrorScenarios object at 0x7f84ca5624b0>
mock_get_client = <MagicMock name='get_api_client' id='140207246797632'>

    @patch('chatter.cli.get_api_client')
    def test_api_unavailable_scenarios(self, mock_get_client):
        """Test CLI behavior when API is unavailable."""
        mock_client = MagicMock()
        mock_client.request = AsyncMock(side_effect=httpx.RequestError("Connection failed"))
        mock_client.close = AsyncMock()
        mock_get_client.return_value = mock_client
    
        result = self.runner.invoke(app, ["health"])
        # Should handle error gracefully
>       assert result.exit_code == 0  # Command should complete, even if API is down
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       assert 2 == 0
E        +  where 2 = <Result SystemExit(2)>.exit_code

tests/test_cli.py:621: AssertionError
___________ TestDataManagementIntegration.test_export_data_workflow ____________

self = <tests.test_data_management_integration.TestDataManagementIntegration object at 0x7f84ca58f440>
client = <httpx.AsyncClient object at 0x7f845ea832c0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWMzRYRjdDOTgyS0s4RUs0RDdZRCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjM2fQ.n_HeB7_IPhrpM8J1_OJvf_FOLWTGUQFPoD3sEN0i4yo'}

    @pytest.mark.integration
    async def test_export_data_workflow(self, client: AsyncClient, auth_headers: dict):
        """Test complete data export workflow."""
        # Test export with valid data structure (even if service isn't fully configured)
        export_data = {
            "format": "json",
            "scope": "user",
            "include_documents": True,
            "include_conversations": True,
            "include_analytics": False,
            "date_range": {
                "start_date": "2024-01-01T00:00:00Z",
                "end_date": "2024-12-31T23:59:59Z"
            }
        }
    
        response = await client.post("/api/v1/data-management/export",
                                   headers=auth_headers, json=export_data)
    
        # Should start export successfully or handle gracefully
>       assert response.status_code in [202, 422, 500]  # 202 = Accepted, others = graceful failures
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       assert 404 in [202, 422, 500]
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_data_management_integration.py:30: AssertionError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWMzRYRjdDOTgyS0s4RUs0RDdZRCIsImVtYWlsIjoidGVzdHVzZXJiZWZkY2RAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmVmZGNkIiwianRpIjoiZGRjNTcxMjctOWYwYy00N2UyLWI2OGYtYmQyZWVhYjA2N2Y5IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjgzNiwic2Vzc2lvbl9pZCI6IjlhZjI1NWE1LWI0OTUtNDE5Yy04NTE5LWNlYmJjOTcyYjU1OCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjM2fQ.n_HeB7_IPhrpM8J1_OJvf_FOLWTGUQFPoD3sEN0i4yo
______________ TestDataManagementIntegration.test_backup_workflow ______________

self = <tests.test_data_management_integration.TestDataManagementIntegration object at 0x7f84ca58f770>
client = <httpx.AsyncClient object at 0x7f848b26e7e0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWM1pBN0IxVEg1NEhQTjFBMUpCWCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjM3fQ.3OAiFoUrfU7HkeUg0ToAA5BCTVNVS5aIpS_GOLK3Th8'}

    @pytest.mark.integration
    async def test_backup_workflow(self, client: AsyncClient, auth_headers: dict):
        """Test backup creation and listing workflow."""
        # Test backup creation
        backup_data = {
            "name": "Test Backup",
            "description": "Integration test backup",
            "backup_type": "full",
            "encrypt": False,
            "compress": True
        }
    
        response = await client.post("/api/v1/data-management/backup",
                                   headers=auth_headers, json=backup_data)
    
        # Should start backup or handle gracefully
>       assert response.status_code in [202, 422, 500]
E       assert 404 in [202, 422, 500]
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_data_management_integration.py:55: AssertionError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWM1pBN0IxVEg1NEhQTjFBMUpCWCIsImVtYWlsIjoidGVzdHVzZXJmZGJhYmNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmRiYWJjIiwianRpIjoiMWUyOTgyMTgtM2RmMC00ODQ1LTliMWEtYzZhODRkZjE0ZGZmIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjgzNywic2Vzc2lvbl9pZCI6ImZiZjMyM2EyLTExMjItNDk3OS04NzM3LWFkOTRkZmVjNTE1OCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjM3fQ.3OAiFoUrfU7HkeUg0ToAA5BCTVNVS5aIpS_GOLK3Th8
__________ TestDataManagementIntegration.test_storage_stats_workflow ___________

self = <tests.test_data_management_integration.TestDataManagementIntegration object at 0x7f84ca5b0200>
client = <httpx.AsyncClient object at 0x7f8445fdf200>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWNU02U1BKV0EzUkE1TTFHRFZEMyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjM5fQ.xKAplXcb2lDmIcJibf8f8JPGuyoNK8U6XCYYW4ynbm8'}

    @pytest.mark.integration
    async def test_storage_stats_workflow(self, client: AsyncClient, auth_headers: dict):
        """Test storage statistics workflow."""
        response = await client.get("/api/v1/data-management/stats",
                                  headers=auth_headers)
    
>       assert response.status_code in [200, 500]  # Should work or fail gracefully
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       assert 404 in [200, 500]
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_data_management_integration.py:99: AssertionError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWNU02U1BKV0EzUkE1TTFHRFZEMyIsImVtYWlsIjoidGVzdHVzZXJhZGZkZmZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWRmZGZmIiwianRpIjoiZjQwZDY1NDctMzkyZS00ZDNmLTgyNTItYjU5NGVlZjRhNDk1IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjgzOSwic2Vzc2lvbl9pZCI6IjhmZDM3ZjFjLWQzMDUtNDZiNS1hNzQ1LWM5YjRlOGY1YWNhMCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjM5fQ.xKAplXcb2lDmIcJibf8f8JPGuyoNK8U6XCYYW4ynbm8
______ TestDataManagementIntegration.test_bulk_delete_documents_workflow _______

self = <tests.test_data_management_integration.TestDataManagementIntegration object at 0x7f84ca5b02f0>
client = <httpx.AsyncClient object at 0x7f84266a1340>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWNkZLNFBEN05NR1JGV1daUEU3MCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQwfQ.SgIEfQL9I6YKiLctQK355a4VFaHMQKFcpveL3y0HCmw'}

    @pytest.mark.integration
    async def test_bulk_delete_documents_workflow(self, client: AsyncClient, auth_headers: dict):
        """Test bulk document deletion workflow."""
        # Test with empty list
        delete_data = {"document_ids": []}
    
        response = await client.post("/api/v1/data-management/bulk/delete-documents",
                                   headers=auth_headers, json=delete_data)
    
>       assert response.status_code in [200, 422, 500]
E       assert 404 in [200, 422, 500]
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_data_management_integration.py:118: AssertionError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWNkZLNFBEN05NR1JGV1daUEU3MCIsImVtYWlsIjoidGVzdHVzZXJjZWNhZGJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2VjYWRiIiwianRpIjoiZDhlZWExODctODM3Zi00NjEzLTgyZDAtYTM0MmYzNzJhOWYzIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg0MCwic2Vzc2lvbl9pZCI6IjM0ZWE5NjVlLTZhMTQtNGMzNi05NjJiLWNjYzIyODlkN2ZkNSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQwfQ.SgIEfQL9I6YKiLctQK355a4VFaHMQKFcpveL3y0HCmw
____ TestDataManagementIntegration.test_bulk_delete_conversations_workflow _____

self = <tests.test_data_management_integration.TestDataManagementIntegration object at 0x7f84ca5b06b0>
client = <httpx.AsyncClient object at 0x7f840fdd7d40>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWN0JWQ1FFWkI0TTNIMlhFQjQ1QSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQxfQ.Ki0k5ipgKjpYdKK8HLenh6A2AwgCLKbV5PsFMujx2b0'}

    @pytest.mark.integration
    async def test_bulk_delete_conversations_workflow(self, client: AsyncClient, auth_headers: dict):
        """Test bulk conversation deletion workflow."""
        # Test with empty list
        delete_data = {"conversation_ids": []}
    
        response = await client.post("/api/v1/data-management/bulk/delete-conversations",
                                   headers=auth_headers, json=delete_data)
    
>       assert response.status_code in [200, 422, 500]
E       assert 404 in [200, 422, 500]
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_data_management_integration.py:148: AssertionError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWN0JWQ1FFWkI0TTNIMlhFQjQ1QSIsImVtYWlsIjoidGVzdHVzZXJlZGNlYWJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWRjZWFiIiwianRpIjoiZDUxNWQxMzMtODE5OS00NGFhLTk2ODktNjlkZDY0YTUwZTYzIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg0MSwic2Vzc2lvbl9pZCI6ImEwMWVhYzg1LTE5MzAtNDMyNC04NTQ2LTJkY2ZiNjA1NzA3NCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQxfQ.Ki0k5ipgKjpYdKK8HLenh6A2AwgCLKbV5PsFMujx2b0
_______ TestDataManagementIntegration.test_bulk_delete_prompts_workflow ________

self = <tests.test_data_management_integration.TestDataManagementIntegration object at 0x7f84ca5b0a70>
client = <httpx.AsyncClient object at 0x7f844465df10>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWODUzMkpZVlkxMFExMTBESE5UMiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQyfQ.-IiqLVOYLdsI9yxdOO4xJpg8htAhvkUnqwy-Wbn1ZXY'}

    @pytest.mark.integration
    async def test_bulk_delete_prompts_workflow(self, client: AsyncClient, auth_headers: dict):
        """Test bulk prompt deletion workflow."""
        # Test with empty list
        delete_data = {"prompt_ids": []}
    
        response = await client.post("/api/v1/data-management/bulk/delete-prompts",
                                   headers=auth_headers, json=delete_data)
    
>       assert response.status_code in [200, 422, 500]
E       assert 404 in [200, 422, 500]
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_data_management_integration.py:164: AssertionError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWODUzMkpZVlkxMFExMTBESE5UMiIsImVtYWlsIjoidGVzdHVzZXJmZWJmYWZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmViZmFmIiwianRpIjoiNThkY2NmNWQtYmY5MS00MTBmLWE2ODQtM2NmNDg0ODMyOWY2IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg0Miwic2Vzc2lvbl9pZCI6ImZmOTMxNTkwLTM4ZjUtNDgxMy1iODcxLTJiYWUyZjA1Nzk2NiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQyfQ.-IiqLVOYLdsI9yxdOO4xJpg8htAhvkUnqwy-Wbn1ZXY
____ TestDataManagementIntegration.test_data_management_permission_workflow ____

self = <tests.test_data_management_integration.TestDataManagementIntegration object at 0x7f84ca58fe30>
client = <httpx.AsyncClient object at 0x7f842476be90>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWOTA5RldSRjBYNVZEWTBGRERKUyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQyfQ.kjkFt4CfakpNpTncEbFABg8bWUhb6T7fE4eyUkPR3_8'}

    @pytest.mark.integration
    async def test_data_management_permission_workflow(self, client: AsyncClient, auth_headers: dict):
        """Test data management permission and access control workflow."""
        # Test without authentication - all should return 401
        response = await client.get("/api/v1/data-management/stats")
>       assert response.status_code == 401
E       assert 404 == 401
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_data_management_integration.py:176: AssertionError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWOTA5RldSRjBYNVZEWTBGRERKUyIsImVtYWlsIjoidGVzdHVzZXJiYmFkZmRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmJhZGZkIiwianRpIjoiYzBhYTEzMTYtNDVlOC00NTkxLWI2MmMtNzk0MjE5NTNlYzhjIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg0Miwic2Vzc2lvbl9pZCI6IjlkZTIxZjU2LWUxZWYtNDk3Ni05NTY3LTFmOTQ3N2RhOWQwZCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQyfQ.kjkFt4CfakpNpTncEbFABg8bWUhb6T7fE4eyUkPR3_8
________ TestDataManagementIntegration.test_cross_api_data_consistency _________

self = <tests.test_data_management_integration.TestDataManagementIntegration object at 0x7f84ca58fc80>
client = <httpx.AsyncClient object at 0x7f840ff81be0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWOVRRWFExUjdTWTc5TTFLMkhDUiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQzfQ.Ytyq0ClknzvLThbhb-wDIRTn-bPszdS8FmDkXVIDm5M'}

    @pytest.mark.integration
    async def test_cross_api_data_consistency(self, client: AsyncClient, auth_headers: dict):
        """Test data consistency between documents and data management APIs."""
        # Get document stats
>       doc_response = await client.get("/api/v1/documents/stats/overview",
                                      headers=auth_headers)

tests/test_data_management_integration.py:201: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-2701' coro=<TestDataManagementIntegration.test_cross_api_data_consistency() running at /home/yam/chatter/tests/test_data_management_integration.py:201> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWOVRRWFExUjdTWTc5TTFLMkhDUiIsImVtYWlsIjoidGVzdHVzZXJhY2FlY2VAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWNhZWNlIiwianRpIjoiYzViMjE4NTYtYjk3YS00ZTVmLTk4ZjQtYTYyNWY4YzY5ZWNiIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg0Mywic2Vzc2lvbl9pZCI6IjdlZjYyYTMwLWRjOGQtNDQ2Yy04MTZkLTAyZGRmYjFkNDVmNSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQzfQ.Ytyq0ClknzvLThbhb-wDIRTn-bPszdS8FmDkXVIDm5M
___________ TestDataManagementUnit.test_export_data_endpoint_exists ____________

self = <tests.test_data_management_unit.TestDataManagementUnit object at 0x7f84ca5b0800>
client = <httpx.AsyncClient object at 0x7f842418c470>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWQzhEMktBMDFLOUM2QkJBVEs4TSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQ2fQ.R1Yx-Nm6R90XvqkM7ihjVz6BobGXYr-X2XQuCX0-T6w'}

    @pytest.mark.unit
    async def test_export_data_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that export data endpoint exists and validates authentication."""
        # Test with missing auth header - should get 401
        response = await client.post("/api/v1/data-management/export", json={})
>       assert response.status_code == 401
E       assert 404 == 401
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_data_management_unit.py:15: AssertionError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWQzhEMktBMDFLOUM2QkJBVEs4TSIsImVtYWlsIjoidGVzdHVzZXJlZGJhYWVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWRiYWFlIiwianRpIjoiZWM1MTQzYjgtZDNjOC00MDNhLWFhODItYTEwNmNjZmYyODkyIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg0Niwic2Vzc2lvbl9pZCI6IjM0OTRjOWM5LTAxOTctNDUzMS05YTYyLTAyMTUwMDZlYWZkNiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQ2fQ.R1Yx-Nm6R90XvqkM7ihjVz6BobGXYr-X2XQuCX0-T6w
__________ TestDataManagementUnit.test_create_backup_endpoint_exists ___________

self = <tests.test_data_management_unit.TestDataManagementUnit object at 0x7f84ca5b1280>
client = <httpx.AsyncClient object at 0x7f84243ef110>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWRDNUN0ZLRFpWUkZZQURYU1NCRiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQ3fQ.gQf3j1B8TEnpLF_T531fkhIDSpElURiuMEsBXwFjuUM'}

    @pytest.mark.unit
    async def test_create_backup_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that create backup endpoint exists."""
        # Test without auth - should get 401
        response = await client.post("/api/v1/data-management/backup", json={})
>       assert response.status_code == 401
E       assert 404 == 401
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_data_management_unit.py:27: AssertionError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWRDNUN0ZLRFpWUkZZQURYU1NCRiIsImVtYWlsIjoidGVzdHVzZXJkZmJjYmJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGZiY2JiIiwianRpIjoiYTg5MTQwZDktYTBkNC00Zjc2LTlkZjQtNmYxMmM1Mzg5YjBlIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg0Nywic2Vzc2lvbl9pZCI6IjBlOGI2Nzg3LTIwYjEtNGQ4Mi1iMDg4LTY0Njc4ZWQxMzM2NiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQ3fQ.gQf3j1B8TEnpLF_T531fkhIDSpElURiuMEsBXwFjuUM
___________ TestDataManagementUnit.test_list_backups_endpoint_exists ___________

self = <tests.test_data_management_unit.TestDataManagementUnit object at 0x7f84ca5b1640>
client = <httpx.AsyncClient object at 0x7f840fcf1070>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWRFlUUjJEMTlWNzRKWk5OTTNLRCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQ3fQ.i_0lofcCeH3kTGJR5B8MMMROnNO1b6DlhXnXd9JkEEY'}

    @pytest.mark.unit
    async def test_list_backups_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that list backups endpoint exists."""
        # Test without auth
        response = await client.get("/api/v1/data-management/backups")
>       assert response.status_code == 401
E       assert 404 == 401
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_data_management_unit.py:39: AssertionError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWRFlUUjJEMTlWNzRKWk5OTTNLRCIsImVtYWlsIjoidGVzdHVzZXJjY2FiYmVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2NhYmJlIiwianRpIjoiOTA4NDYyNDAtZDFlOS00Nzc1LTgxNDMtMjQzMTUyNGY2YzQ4IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg0Nywic2Vzc2lvbl9pZCI6Ijg2MTZjMmFiLTE0MDktNDkzNS04ODA5LWE0YjY2NmQ5ZDljNCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQ3fQ.i_0lofcCeH3kTGJR5B8MMMROnNO1b6DlhXnXd9JkEEY
___________ TestDataManagementUnit.test_restore_data_endpoint_exists ___________

self = <tests.test_data_management_unit.TestDataManagementUnit object at 0x7f84ca5b1a00>
client = <httpx.AsyncClient object at 0x7f848be102c0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWRVM1WEtZODYxNTQyWkgzRFNLMyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQ4fQ.FcSU30S9Jd4GOZFhxk0ceSOLdkXlrfaepOnWePApEI8'}

    @pytest.mark.unit
    async def test_restore_data_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that restore data endpoint exists."""
        # Test without auth
        response = await client.post("/api/v1/data-management/restore", json={})
>       assert response.status_code == 401
E       assert 404 == 401
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_data_management_unit.py:52: AssertionError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWRVM1WEtZODYxNTQyWkgzRFNLMyIsImVtYWlsIjoidGVzdHVzZXJhYWRmYmNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWFkZmJjIiwianRpIjoiYTQyY2JhZGItYzY5Ny00M2JiLTljMDYtNmQwOGY4OTNhNDdhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg0OCwic2Vzc2lvbl9pZCI6IjllMjdkYzg3LTQ0YmUtNDQwMS1iZGM5LWE1NWQ4YjZlODYzYSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQ4fQ.FcSU30S9Jd4GOZFhxk0ceSOLdkXlrfaepOnWePApEI8
________ TestDataManagementUnit.test_get_storage_stats_endpoint_exists _________

self = <tests.test_data_management_unit.TestDataManagementUnit object at 0x7f84ca5b1dc0>
client = <httpx.AsyncClient object at 0x7f848b7b1340>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWRktQQjVDUU5BRkRaNjVKNkZSTiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQ5fQ.qLhzlY9yHrpfXVEMHddHY_Gklq9VeiKyFYiaobFnYEQ'}

    @pytest.mark.unit
    async def test_get_storage_stats_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that get storage stats endpoint exists."""
        # Test without auth
        response = await client.get("/api/v1/data-management/stats")
>       assert response.status_code == 401
E       assert 404 == 401
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_data_management_unit.py:64: AssertionError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWRktQQjVDUU5BRkRaNjVKNkZSTiIsImVtYWlsIjoidGVzdHVzZXJjZWNlYWVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2VjZWFlIiwianRpIjoiMGM5ZjE2NDYtOGFhOS00ZTRmLTlmNWQtMDgxOTVkOWFlN2Q4IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg0OSwic2Vzc2lvbl9pZCI6ImRiYTc5YmJkLTA1NjQtNGFjOS1hM2E4LThmZWE5ZGZhYTk0YiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjQ5fQ.qLhzlY9yHrpfXVEMHddHY_Gklq9VeiKyFYiaobFnYEQ
______ TestDataManagementUnit.test_bulk_delete_documents_endpoint_exists _______

self = <tests.test_data_management_unit.TestDataManagementUnit object at 0x7f84ca5b2180>
client = <httpx.AsyncClient object at 0x7f845c10e150>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWR0VNREdBN1c3OUtZRjlZNUZZSCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjUwfQ.BuTV7IAOrc70yYebi1-091fqlU-fz-LNdTxcMrkHtv8'}

    @pytest.mark.unit
    async def test_bulk_delete_documents_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that bulk delete documents endpoint exists."""
        # Test without auth
        response = await client.post("/api/v1/data-management/bulk/delete-documents", json={})
>       assert response.status_code == 401
E       assert 404 == 401
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_data_management_unit.py:77: AssertionError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWR0VNREdBN1c3OUtZRjlZNUZZSCIsImVtYWlsIjoidGVzdHVzZXJlZGFiZmZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWRhYmZmIiwianRpIjoiOWNkMWU4YTgtZjkyNy00ZDc4LWJkMzgtZjc0M2NhN2U0ZWQzIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg1MCwic2Vzc2lvbl9pZCI6IjZiNzdiZmJiLWFmYzYtNDA2ZS05ZTU3LWIzZjdlYjM1YjMzYiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjUwfQ.BuTV7IAOrc70yYebi1-091fqlU-fz-LNdTxcMrkHtv8
____ TestDataManagementUnit.test_bulk_delete_conversations_endpoint_exists _____

self = <tests.test_data_management_unit.TestDataManagementUnit object at 0x7f84ca5b2540>
client = <httpx.AsyncClient object at 0x7f84460d5d00>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWSDlNNzFHVzQyTU1NOVpOQlQzWSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjUxfQ.H6xuHy_jNVzltgMEBW1S_EJ5AwBgRXjJKHdG5mF1Jxo'}

    @pytest.mark.unit
    async def test_bulk_delete_conversations_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that bulk delete conversations endpoint exists."""
        # Test without auth
        response = await client.post("/api/v1/data-management/bulk/delete-conversations", json={})
>       assert response.status_code == 401
E       assert 404 == 401
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_data_management_unit.py:89: AssertionError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWSDlNNzFHVzQyTU1NOVpOQlQzWSIsImVtYWlsIjoidGVzdHVzZXJiZmJhZWNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmZiYWVjIiwianRpIjoiOTU5NGQ1ZjktNDVkNi00ZDRlLThmNmItZGMxYmY3NzI4ZjBlIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg1MSwic2Vzc2lvbl9pZCI6IjQyYzc2ZGNiLTBhMzgtNGUxNi04ZDQxLWQ4MjBhMDc0ZGY0MiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjUxfQ.H6xuHy_jNVzltgMEBW1S_EJ5AwBgRXjJKHdG5mF1Jxo
_______ TestDataManagementUnit.test_bulk_delete_prompts_endpoint_exists ________

self = <tests.test_data_management_unit.TestDataManagementUnit object at 0x7f84ca5b2900>
client = <httpx.AsyncClient object at 0x7f845e97f9b0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWSjRQSkZFSkFEMjRIODdZRTVUWSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjUyfQ.8nL--jR6dN3axB1KMB29_VX6Wd94MszZWQj_JothxK0'}

    @pytest.mark.unit
    async def test_bulk_delete_prompts_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that bulk delete prompts endpoint exists."""
        # Test without auth
        response = await client.post("/api/v1/data-management/bulk/delete-prompts", json={})
>       assert response.status_code == 401
E       assert 404 == 401
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_data_management_unit.py:101: AssertionError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWSjRQSkZFSkFEMjRIODdZRTVUWSIsImVtYWlsIjoidGVzdHVzZXJlZWFhY2JAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWVhYWNiIiwianRpIjoiNTY5MDAyNjMtNTQ0ZC00ZTJlLWI2Y2UtODM1ZjllOTg3Yzc1IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg1Miwic2Vzc2lvbl9pZCI6IjUxYmI4NjgwLTMzYmYtNGJjZC1iNWFhLTVjMGYzZjE5M2FkZCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjUyfQ.8nL--jR6dN3axB1KMB29_VX6Wd94MszZWQj_JothxK0
____________ TestDocumentsIntegration.test_document_upload_workflow ____________

self = <tests.test_documents_integration.TestDocumentsIntegration object at 0x7f84ca5d77d0>
client = <httpx.AsyncClient object at 0x7f848829f470>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWUzhZNVo2SjIxNEtNNktaTTRGMyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjU5fQ.aq8P3WUMjfDN5H9Jhn6Nd76kXw9nLuj7xkyToVuwZP0'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f845e840650>

    @pytest.mark.integration
    async def test_document_upload_workflow(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test complete document upload workflow."""
        # Create a test file
        test_content = b"This is a test document for testing purposes. It contains some text that can be chunked and processed."
        test_file = io.BytesIO(test_content)
    
        # Upload document
        files = {"file": ("test.txt", test_file, "text/plain")}
        data = {
            "title": "Test Document",
            "description": "A test document for integration testing",
            "tags": '["test", "integration"]',
            "chunk_size": 100,
            "chunk_overlap": 20,
            "is_public": False
        }
    
>       response = await client.post("/api/v1/documents/upload",
                                   headers=auth_headers, files=files, data=data)

tests/test_documents_integration.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-2961' coro=<TestDocumentsIntegration.test_document_upload_workflow() running at /home/yam/chatter/tests/test_documents_integration.py:34> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWUzhZNVo2SjIxNEtNNktaTTRGMyIsImVtYWlsIjoidGVzdHVzZXJjY2ZkZWNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2NmZGVjIiwianRpIjoiYTNkZjVhY2QtNjQ4Yy00NzE0LWJkNzAtNTBmNzIyMDBhYjYzIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg1OSwic2Vzc2lvbl9pZCI6IjQ1NzE3NTU1LTMwMzMtNGJkZC04MTY5LWI2NWYzY2Q2MWJjOCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjU5fQ.aq8P3WUMjfDN5H9Jhn6Nd76kXw9nLuj7xkyToVuwZP0
_______ TestDocumentsIntegration.test_document_list_and_search_workflow ________

self = <tests.test_documents_integration.TestDocumentsIntegration object at 0x7f84ca5d6d20>
client = <httpx.AsyncClient object at 0x7f845ea5a330>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWVEhOREE4TUZLUzJUN0NUUUgxUiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjYwfQ.Ib7JY4fZRAuC5P0Td2Mi8KnZUheWYKPgav_7mdRv3Hk'}

    @pytest.mark.integration
    async def test_document_list_and_search_workflow(self, client: AsyncClient, auth_headers: dict):
        """Test document listing and search workflow."""
        # Get initial document list
>       response = await client.get("/api/v1/documents", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_documents_integration.py:63: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-2975' coro=<TestDocumentsIntegration.test_document_list_and_search_workflow() running at /home/yam/chatter/tests/test_documents_integration.py:63> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWVEhOREE4TUZLUzJUN0NUUUgxUiIsImVtYWlsIjoidGVzdHVzZXJlYWVhZmJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWFlYWZiIiwianRpIjoiZDU5NmMxYTItODE3Zi00NTc0LWJhNTItMzg0ZWQyZjEwOGYxIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg2MCwic2Vzc2lvbl9pZCI6ImJhZWEyM2RmLTYyYmYtNGM3NC05MTNiLWJmZDYzOWNkNmEyMCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjYwfQ.Ib7JY4fZRAuC5P0Td2Mi8KnZUheWYKPgav_7mdRv3Hk
_____________ TestDocumentsIntegration.test_document_crud_workflow _____________

self = <tests.test_documents_integration.TestDocumentsIntegration object at 0x7f84ca5d60f0>
client = <httpx.AsyncClient object at 0x7f84460bd490>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWVlQ4VzYwQVYzSlRFVFM0S1FNSiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjYyfQ.sWKNLSRvMGU9xK_QrQZAhMN6gt1L9TaeFnppVGajo1w'}

    @pytest.mark.integration
    async def test_document_crud_workflow(self, client: AsyncClient, auth_headers: dict):
        """Test document CRUD operations workflow."""
        # Since we might not have actual documents, test the endpoints respond appropriately
        test_document_id = "nonexistent-document-id"
    
        # Test GET document
>       response = await client.get(f"/api/v1/documents/{test_document_id}",
                                  headers=auth_headers)

tests/test_documents_integration.py:88: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-2989' coro=<TestDocumentsIntegration.test_document_crud_workflow() running at /home/yam/chatter/tests/test_documents_integration.py:88> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWVlQ4VzYwQVYzSlRFVFM0S1FNSiIsImVtYWlsIjoidGVzdHVzZXJkYWViYmFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGFlYmJhIiwianRpIjoiOWFhYTUzMTYtZWRhNy00ZDQ3LWI2OWEtNDI3ZGYzZDNhYTYxIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg2Miwic2Vzc2lvbl9pZCI6IjEyM2NmZTdmLTg0MGEtNGFiOS04NjNjLTgwMmU3YTAwM2ZlMCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjYyfQ.sWKNLSRvMGU9xK_QrQZAhMN6gt1L9TaeFnppVGajo1w
____________ TestDocumentsIntegration.test_document_chunks_workflow ____________

self = <tests.test_documents_integration.TestDocumentsIntegration object at 0x7f84ca5d5760>
client = <httpx.AsyncClient object at 0x7f848b756510>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWWDNQNEFFMlBRMzdTRVBEV1NZNyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjYzfQ.2vSRC9wKjIFO_xPz0LaBd1XfJbD5o37suVFUjwkupKY'}

    @pytest.mark.integration
    async def test_document_chunks_workflow(self, client: AsyncClient, auth_headers: dict):
        """Test document chunks retrieval workflow."""
        test_document_id = "nonexistent-document-id"
    
        # Test get document chunks
>       response = await client.get(f"/api/v1/documents/{test_document_id}/chunks",
                                  headers=auth_headers)

tests/test_documents_integration.py:109: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3003' coro=<TestDocumentsIntegration.test_document_chunks_workflow() running at /home/yam/chatter/tests/test_documents_integration.py:109> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWWDNQNEFFMlBRMzdTRVBEV1NZNyIsImVtYWlsIjoidGVzdHVzZXJmYmJhZWFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmJiYWVhIiwianRpIjoiYTZjNGQ4YzktOWQxYS00YWI2LTk4NzQtNDc0YThhMjRkNTA0IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg2Mywic2Vzc2lvbl9pZCI6IjMwYmFlMDgyLTc5NzItNDBlMS04ZTA4LTNjZTlhYjgxYzg4NCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjYzfQ.2vSRC9wKjIFO_xPz0LaBd1XfJbD5o37suVFUjwkupKY
__________ TestDocumentsIntegration.test_document_processing_workflow __________

self = <tests.test_documents_integration.TestDocumentsIntegration object at 0x7f84ca5d79e0>
client = <httpx.AsyncClient object at 0x7f845c650560>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWWjg2WEVLVFFIUDhNRjVBTTJHWiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjY1fQ.lkf-uQa_rFHG321hl5V1a0yxTshDGvM6c_Rk0HKxZS4'}

    @pytest.mark.integration
    async def test_document_processing_workflow(self, client: AsyncClient, auth_headers: dict):
        """Test document processing workflow."""
        test_document_id = "nonexistent-document-id"
    
        # Test process document
        process_data = {"force_reprocess": False}
>       response = await client.post(f"/api/v1/documents/{test_document_id}/process",
                                   headers=auth_headers, json=process_data)

tests/test_documents_integration.py:125: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3017' coro=<TestDocumentsIntegration.test_document_processing_workflow() running at /home/yam/chatter/tests/test_documents_integration.py:125> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFWWjg2WEVLVFFIUDhNRjVBTTJHWiIsImVtYWlsIjoidGVzdHVzZXJmYmFjYWFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmJhY2FhIiwianRpIjoiMWU2MmQ5MDEtMjg4My00NGRlLTgzMjAtODRmYTE2NzhiY2IwIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg2NSwic2Vzc2lvbl9pZCI6ImU5YmU4Y2YyLWMxZTctNDIxMC1hYmZkLWI2MjhhODM0ODlkOCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjY1fQ.lkf-uQa_rFHG321hl5V1a0yxTshDGvM6c_Rk0HKxZS4
____________ TestDocumentsIntegration.test_document_stats_workflow _____________

self = <tests.test_documents_integration.TestDocumentsIntegration object at 0x7f84ca5f00b0>
client = <httpx.AsyncClient object at 0x7f8446248c80>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXMEtHOUQzR05ZTlFCRFRIRlY0MCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjY3fQ.k89TUwDb62pmuJtyAcaOGRCIE9R5HUsnj3VA2k9DCiU'}

    @pytest.mark.integration
    async def test_document_stats_workflow(self, client: AsyncClient, auth_headers: dict):
        """Test document statistics workflow."""
        # Test get document stats
>       response = await client.get("/api/v1/documents/stats/overview",
                                  headers=auth_headers)

tests/test_documents_integration.py:138: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3031' coro=<TestDocumentsIntegration.test_document_stats_workflow() running at /home/yam/chatter/tests/test_documents_integration.py:138> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXMEtHOUQzR05ZTlFCRFRIRlY0MCIsImVtYWlsIjoidGVzdHVzZXJkY2RkYmFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGNkZGJhIiwianRpIjoiNDZjZDczMzctZWNlZS00ZDRhLTg5Y2ItN2MyZjJjYzJlNDE5IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg2Nywic2Vzc2lvbl9pZCI6IjAyZTRjZjBlLWVlZmItNGE5NC1iMzczLTM0NmVjYTU2NmU4ZSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjY3fQ.k89TUwDb62pmuJtyAcaOGRCIE9R5HUsnj3VA2k9DCiU
___________ TestDocumentsIntegration.test_document_download_workflow ___________

self = <tests.test_documents_integration.TestDocumentsIntegration object at 0x7f84ca5f01a0>
client = <httpx.AsyncClient object at 0x7f84462bc710>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXMVhCTkgwRTNHUEY1NEI5TkRLNCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjY4fQ.2ZahhDWz_KftkkyBCRkA62LuMIdPLeL_7BdaReq0bLw'}

    @pytest.mark.integration
    async def test_document_download_workflow(self, client: AsyncClient, auth_headers: dict):
        """Test document download workflow."""
        test_document_id = "nonexistent-document-id"
    
        # Test download document
>       response = await client.get(f"/api/v1/documents/{test_document_id}/download",
                                  headers=auth_headers)

tests/test_documents_integration.py:156: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3045' coro=<TestDocumentsIntegration.test_document_download_workflow() running at /home/yam/chatter/tests/test_documents_integration.py:156> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXMVhCTkgwRTNHUEY1NEI5TkRLNCIsImVtYWlsIjoidGVzdHVzZXJjZmNlZmFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2ZjZWZhIiwianRpIjoiYzA2NzhlMTctNTZiOS00MjYwLWEwZjYtZjIxZDcwMzg4Zjc2IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg2OCwic2Vzc2lvbl9pZCI6IjQ4ZjcxYjZhLWY1M2YtNGYyNy04NzYwLTRlMjkxZWU0ZDI1NSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjY4fQ.2ZahhDWz_KftkkyBCRkA62LuMIdPLeL_7BdaReq0bLw
__________ TestDocumentsIntegration.test_document_permission_workflow __________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f842653f1d0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f842653f1d0>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_documents_integration.TestDocumentsIntegration object at 0x7f84ca5f0560>
client = <httpx.AsyncClient object at 0x7f842653eab0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXMzZYSFJKMVE0MUNZWDgzWUpUUiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjY5fQ.M33ZRiiiMKF2jA7y7baAxmcDkx3tW1ybUuZL5Yg7CGs'}

    @pytest.mark.integration
    async def test_document_permission_workflow(self, client: AsyncClient, auth_headers: dict):
        """Test document permission and access control workflow."""
        # This test verifies that authenticated requests work and unauthenticated don't
    
        # Test without authentication
>       response = await client.get("/api/v1/documents")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_documents_integration.py:166: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f842653f1d0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXMzZYSFJKMVE0MUNZWDgzWUpUUiIsImVtYWlsIjoidGVzdHVzZXJmYmJhYWNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmJiYWFjIiwianRpIjoiMTVmNDhjMzUtMzA2My00MmRjLTg5MDctYWM2NWYyYmZlYjFhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg2OSwic2Vzc2lvbl9pZCI6IjhkOThmYWViLTljMDMtNDA4MS1iZGFjLWMyNjg4NDUxMmQ2YyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjY5fQ.M33ZRiiiMKF2jA7y7baAxmcDkx3tW1ybUuZL5Yg7CGs
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:07:49.741651Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35mf396c829-1791-4837-b2ed-0248ef7df9f1[0m [36mstatus_code[0m=[35m401[0m
____________ TestDocumentsUnit.test_upload_document_endpoint_exists ____________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840fd73020>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840fd73020>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_documents_unit.TestDocumentsUnit object at 0x7f84ca5f0f50>
client = <httpx.AsyncClient object at 0x7f840fd32ff0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXNDdOV0Q2SzZRUEVWWFdFU0hLMCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjcwfQ.p9_hQX7MzQvSoMtvncYEsrn1Otnqj-eFFTfRDtIQFoI'}

    @pytest.mark.unit
    async def test_upload_document_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that upload document endpoint exists and validates authentication."""
        # Test with missing auth header - should get 401
>       response = await client.post("/api/v1/documents/upload")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_documents_unit.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840fd73020>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXNDdOV0Q2SzZRUEVWWFdFU0hLMCIsImVtYWlsIjoidGVzdHVzZXJiZGViYWRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmRlYmFkIiwianRpIjoiZjhlZmFkNDgtZWU4NS00NTk4LTkyN2YtZTdmYTE5YWRjMDMyIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg3MCwic2Vzc2lvbl9pZCI6IjI2OWU0ZjAyLWFkOTAtNDNlYy1iMDUyLTJkYmJmM2JlNjc5NyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjcwfQ.p9_hQX7MzQvSoMtvncYEsrn1Otnqj-eFFTfRDtIQFoI
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:07:50.792382Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m95aea777-ed78-4344-99f9-ddc83e588e5f[0m [36mstatus_code[0m=[35m401[0m
____________ TestDocumentsUnit.test_list_documents_endpoint_exists _____________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f842469a720>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f842469a720>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_documents_unit.TestDocumentsUnit object at 0x7f84ca5f1280>
client = <httpx.AsyncClient object at 0x7f842469a1b0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXNTg3OUMwTjM1RVA2SEIxVERBSiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjcxfQ.90-dmSAzLOG-ECZhcx12pygsn1zg7S3tfvAaEh4Dg1Q'}

    @pytest.mark.unit
    async def test_list_documents_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that list documents endpoint exists."""
        # Test without auth - should get 401
>       response = await client.get("/api/v1/documents")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_documents_unit.py:26: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f842469a720>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXNTg3OUMwTjM1RVA2SEIxVERBSiIsImVtYWlsIjoidGVzdHVzZXJjYWNhZmNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2FjYWZjIiwianRpIjoiY2I3MmNkYjEtNzdlYi00YzU4LTk2OGYtMTM2M2Y1MGYyZDFjIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg3MSwic2Vzc2lvbl9pZCI6ImZiZTE1ODdlLTdjNTgtNDFlNS1hMTNmLTAyY2MzNGQ4OTJhNSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjcxfQ.90-dmSAzLOG-ECZhcx12pygsn1zg7S3tfvAaEh4Dg1Q
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:07:51.832404Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m13f12bad-9d8e-435d-85ff-f963ddf1b0be[0m [36mstatus_code[0m=[35m401[0m
___________ TestDocumentsUnit.test_search_documents_endpoint_exists ____________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f8426754b60>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f8426754b60>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_documents_unit.TestDocumentsUnit object at 0x7f84ca5f16a0>
client = <httpx.AsyncClient object at 0x7f8426755f40>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXNjkxM1RTMzczMEZORDRUMzVTUiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjcyfQ.C8oWWlroWpzEBgaQwPio3fE5g-uXZ5872Mpifkye9uQ'}

    @pytest.mark.unit
    async def test_search_documents_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that search documents endpoint exists."""
        # Test without auth
>       response = await client.post("/api/v1/documents/search", json={})
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_documents_unit.py:38: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f8426754b60>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXNjkxM1RTMzczMEZORDRUMzVTUiIsImVtYWlsIjoidGVzdHVzZXJmYmFkZmFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmJhZGZhIiwianRpIjoiYTYyYTdiZmQtOWQ0OS00NjY4LThlYTktMTgxYWE5MDdjZGQ3IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg3Miwic2Vzc2lvbl9pZCI6IjAzNTAwMjA2LTA5ZjctNGM5OS1hNDhlLWRkNDY2NmJlZWQ3ZCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjcyfQ.C8oWWlroWpzEBgaQwPio3fE5g-uXZ5872Mpifkye9uQ
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:07:52.885559Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m5352ef02-eac7-4ec4-853f-a9c7598fced4[0m [36mstatus_code[0m=[35m401[0m
_____________ TestDocumentsUnit.test_get_document_endpoint_exists ______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f845c511a00>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f845c511a00>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_documents_unit.TestDocumentsUnit object at 0x7f84ca5f1a60>
client = <httpx.AsyncClient object at 0x7f845c513590>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXN0o2MVEwR1I2Q1RQODBDWUZEUCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njc0fQ.j9Tj9hzqqaodHmWqj5N62ZPUV2FlJSrt9hyvzLwX04w'}

    @pytest.mark.unit
    async def test_get_document_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that get document endpoint exists."""
        # Test without auth
>       response = await client.get("/api/v1/documents/nonexistent-id")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_documents_unit.py:50: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f845c511a00>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXN0o2MVEwR1I2Q1RQODBDWUZEUCIsImVtYWlsIjoidGVzdHVzZXJkZmViZWJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGZlYmViIiwianRpIjoiMTc1ZWY3MjItNWE5OC00NTJhLTgyOWItMWEzYmE3NzdjZGFhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg3NCwic2Vzc2lvbl9pZCI6ImU4ZDdmMDBiLTQzNWEtNDE2MS05ODE4LWZkOTZiZWFiN2NiYiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njc0fQ.j9Tj9hzqqaodHmWqj5N62ZPUV2FlJSrt9hyvzLwX04w
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:07:54.202589Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m379e7d4d-33d5-44f4-a7ab-b016a75bd362[0m [36mstatus_code[0m=[35m401[0m
____________ TestDocumentsUnit.test_delete_document_endpoint_exists ____________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f842467d430>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f842467d430>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_documents_unit.TestDocumentsUnit object at 0x7f84ca5d7e90>
client = <httpx.AsyncClient object at 0x7f842467c710>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXOFRNMkVEMlE2WDZDMEY2MUdOUyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njc1fQ.av3nCAJN9_n59FvlL_EC_-JuAhy0T3GlLHGlysgODPQ'}

    @pytest.mark.unit
    async def test_delete_document_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that delete document endpoint exists."""
        # Test without auth
>       response = await client.delete("/api/v1/documents/nonexistent-id")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_documents_unit.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1966: in delete
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f842467d430>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXOFRNMkVEMlE2WDZDMEY2MUdOUyIsImVtYWlsIjoidGVzdHVzZXJmYmNhZWVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmJjYWVlIiwianRpIjoiMGMyYWRiZjItNTExYy00YWMyLTg2NzItNWQ1OTVhOWQ2Y2JkIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg3NSwic2Vzc2lvbl9pZCI6IjgxZTE2MjZlLTZmMzMtNGVkZS1hYzEzLTA2NDhiM2Q4OWI0YSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njc1fQ.av3nCAJN9_n59FvlL_EC_-JuAhy0T3GlLHGlysgODPQ
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:07:55.497630Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m047f4978-349d-4979-8301-663fcad02a0e[0m [36mstatus_code[0m=[35m401[0m
____________ TestDocumentsUnit.test_update_document_endpoint_exists ____________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f8426396210>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f8426396210>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_documents_unit.TestDocumentsUnit object at 0x7f84ca5d4170>
client = <httpx.AsyncClient object at 0x7f8426395280>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXQTM0RjE2SlBaWjlTMlQ2REJLMCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njc2fQ.kFWpVmvr-IltPDQUA6QF6VOck9lHv1-cuMchEGOIFJk'}

    @pytest.mark.unit
    async def test_update_document_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that update document endpoint exists."""
        # Test without auth
>       response = await client.put("/api/v1/documents/nonexistent-id", json={})
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_documents_unit.py:74: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1896: in put
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f8426396210>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXQTM0RjE2SlBaWjlTMlQ2REJLMCIsImVtYWlsIjoidGVzdHVzZXJjZmZkYWNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2ZmZGFjIiwianRpIjoiNTBhMTA5ODItYTMwYi00NmM1LWEzOTItOTJlNDAwMGE3NTE1IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg3Niwic2Vzc2lvbl9pZCI6IjJmMTRlOTY3LTljNGEtNDA0OS04NDc5LTE3YzlkMDQ5NGFhOSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njc2fQ.kFWpVmvr-IltPDQUA6QF6VOck9lHv1-cuMchEGOIFJk
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:07:56.790229Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35ma03489b9-209f-44ae-b5e3-4372baf3de44[0m [36mstatus_code[0m=[35m401[0m
__________ TestDocumentsUnit.test_get_document_chunks_endpoint_exists __________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840f7fec30>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840f7fec30>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_documents_unit.TestDocumentsUnit object at 0x7f84ca5f1a30>
client = <httpx.AsyncClient object at 0x7f840f7fdd90>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXQkI1WTlHTTk0MVNIRVBYVjg1RyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njc4fQ.1PX6qi0DoX7hNjBKYcP7rZQNOl2k4u8BmAgSLLvZp7c'}

    @pytest.mark.unit
    async def test_get_document_chunks_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that get document chunks endpoint exists."""
        # Test without auth
>       response = await client.get("/api/v1/documents/nonexistent-id/chunks")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_documents_unit.py:86: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840f7fec30>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXQkI1WTlHTTk0MVNIRVBYVjg1RyIsImVtYWlsIjoidGVzdHVzZXJlZGRiZWVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWRkYmVlIiwianRpIjoiMjRmMTZmYzctNjhhYy00NmMyLTk0YzctY2Q0NmU0NGQ1MjJmIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg3OCwic2Vzc2lvbl9pZCI6IjFlZTk3YTVhLWQyZmItNGRiZS04ZWU3LWFkNjFhMjNjZTcyMiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njc4fQ.1PX6qi0DoX7hNjBKYcP7rZQNOl2k4u8BmAgSLLvZp7c
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:07:58.070961Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m68649b71-6802-4d9d-b7ac-2a6263fdec27[0m [36mstatus_code[0m=[35m401[0m
___________ TestDocumentsUnit.test_process_document_endpoint_exists ____________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84883dbef0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84883dbef0>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_documents_unit.TestDocumentsUnit object at 0x7f84ca5f15e0>
client = <httpx.AsyncClient object at 0x7f84242af350>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXREc1WldXWEZNVDdSRTRKUFhWTiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjgwfQ.DeFDarAkzBsrOs_HsMQwMW-_lkiq7vI3Q4LXDBfY2Vk'}

    @pytest.mark.unit
    async def test_process_document_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that process document endpoint exists."""
        # Test without auth
>       response = await client.post("/api/v1/documents/nonexistent-id/process", json={})
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_documents_unit.py:98: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84883dbef0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXREc1WldXWEZNVDdSRTRKUFhWTiIsImVtYWlsIjoidGVzdHVzZXJhZGZmZGJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWRmZmRiIiwianRpIjoiOThmMzdhMDktNmEyYS00NDRiLTk1OTItM2FlMTYyYWI5NTgyIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg4MCwic2Vzc2lvbl9pZCI6IjY2ZjEzYmYwLWUxNDctNDdmMS04OGUyLTAyOWQyNzI4MmRiNCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjgwfQ.DeFDarAkzBsrOs_HsMQwMW-_lkiq7vI3Q4LXDBfY2Vk
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:08:00.284791Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35md4cebc9a-3688-4dc2-91ed-d1e57bfe9994[0m [36mstatus_code[0m=[35m401[0m
__________ TestDocumentsUnit.test_get_document_stats_endpoint_exists ___________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840fec3380>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840fec3380>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_documents_unit.TestDocumentsUnit object at 0x7f84ca5f04d0>
client = <httpx.AsyncClient object at 0x7f84247a4260>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXRVQwMjRKRDVQMzkxSEVGMTBGMCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjgxfQ.MLAv5PFRoFlg_f2jlACo2r8w-uCubvCgqjSgIQoJCAM'}

    @pytest.mark.unit
    async def test_get_document_stats_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that get document stats endpoint exists."""
        # Test without auth
>       response = await client.get("/api/v1/documents/stats/overview")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_documents_unit.py:110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840fec3380>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXRVQwMjRKRDVQMzkxSEVGMTBGMCIsImVtYWlsIjoidGVzdHVzZXJmZmZhZmNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmZmYWZjIiwianRpIjoiODFmMTg0MzktN2UxYy00YzE0LTk5N2EtMTZlNjQ3MjhhNWY3IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg4MSwic2Vzc2lvbl9pZCI6ImIyMmQ5NzcyLWZjMjgtNGQyOS1hZDFjLTU2ZjEyMGEzNTM2NyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjgxfQ.MLAv5PFRoFlg_f2jlACo2r8w-uCubvCgqjSgIQoJCAM
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:08:01.621453Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m2dc89b12-2f2a-490c-925d-bb3127d90427[0m [36mstatus_code[0m=[35m401[0m
___________ TestDocumentsUnit.test_download_document_endpoint_exists ___________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84241cea20>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84241cea20>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_documents_unit.TestDocumentsUnit object at 0x7f84ca5f23f0>
client = <httpx.AsyncClient object at 0x7f84241ccd70>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXRzJCNjhWUU4zQ05YQURYOTQ3WiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjgyfQ.E3fEPC98cBpA1hb61GsAC5gZNN4umbTRMFagV9rcCMc'}

    @pytest.mark.unit
    async def test_download_document_endpoint_exists(self, client: AsyncClient, auth_headers: dict):
        """Test that download document endpoint exists."""
        # Test without auth
>       response = await client.get("/api/v1/documents/nonexistent-id/download")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_documents_unit.py:123: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84241cea20>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXRzJCNjhWUU4zQ05YQURYOTQ3WiIsImVtYWlsIjoidGVzdHVzZXJlZGFjZmFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWRhY2ZhIiwianRpIjoiNjA1MWY3ZGYtNTliMy00NTI2LTg2YjgtMzA1OTViYzM0OTQzIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg4Miwic2Vzc2lvbl9pZCI6IjFhOWZmN2JkLWUwM2QtNGM1ZS1hM2I2LWIxYzIxZThkMGMzMyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjgyfQ.E3fEPC98cBpA1hb61GsAC5gZNN4umbTRMFagV9rcCMc
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:08:02.912914Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35me65045bb-7a8e-4312-8858-daa1551d3c2c[0m [36mstatus_code[0m=[35m401[0m
______________ TestEventsIntegration.test_events_stream_workflow _______________

self = <tests.test_events_integration.TestEventsIntegration object at 0x7f84ca5f2f00>
client = <httpx.AsyncClient object at 0x7f840fce2420>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXSDVKMUVOSjU0VFQwWlc5TTkxNSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njg0fQ.sQL1M7N4QYSVN3zijuxCZlOxtfEYqI-JBWVF94RqJYU'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84241ce480>

    @pytest.mark.integration
    async def test_events_stream_workflow(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test complete events stream workflow."""
        # Test SSE stream connection
>       response = await client.get("/api/v1/events/stream", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_events_integration.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3213' coro=<TestEventsIntegration.test_events_stream_workflow() running at /home/yam/chatter/tests/test_events_integration.py:18> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXSDVKMUVOSjU0VFQwWlc5TTkxNSIsImVtYWlsIjoidGVzdHVzZXJhZGViYmNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWRlYmJjIiwianRpIjoiYzlhYjMzNzItOWNmOS00YzYyLTlkYTQtMjA4ZDU2MzA3YWNhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg4NCwic2Vzc2lvbl9pZCI6ImQ1MWVhMjZmLWJjMDItNGI5Ni04NDE4LWU0OThiYmYwNmY2YyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njg0fQ.sQL1M7N4QYSVN3zijuxCZlOxtfEYqI-JBWVF94RqJYU
_____________ TestEventsIntegration.test_events_stats_real_service _____________

self = <tests.test_events_integration.TestEventsIntegration object at 0x7f84ca5f3230>
client = <httpx.AsyncClient object at 0x7f845c10e2d0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXSkVZQjFYUkJRSE1WWjZOREhQNyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njg1fQ.nhoFireFT6iPb_LR28xUB0P5H9cxZriV-7_2ODFkiPA'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f8426653980>

    @pytest.mark.integration
    async def test_events_stats_real_service(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test events stats with real SSE service."""
>       response = await client.get("/api/v1/events/stats", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_events_integration.py:29: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3227' coro=<TestEventsIntegration.test_events_stats_real_service() running at /home/yam/chatter/tests/test_events_integration.py:29> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXSkVZQjFYUkJRSE1WWjZOREhQNyIsImVtYWlsIjoidGVzdHVzZXJjZmZmYmFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2ZmZmJhIiwianRpIjoiMGYyMzQyMDMtODdjMi00YzMwLTk4ZGQtZDQ2MDliM2Q5ZGZiIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg4NSwic2Vzc2lvbl9pZCI6IjU3MjI0ODFkLTRhYWMtNGU1MS1hOTk5LWI3ZTgyODEyMDQzMCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njg1fQ.nhoFireFT6iPb_LR28xUB0P5H9cxZriV-7_2ODFkiPA
_______________ TestEventsIntegration.test_test_event_end_to_end _______________

self = <tests.test_events_integration.TestEventsIntegration object at 0x7f84ca5f35f0>
client = <httpx.AsyncClient object at 0x7f84242a1ac0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXS1MwN0dKRUtCMTc5WkU3RFZIMCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njg2fQ.81TuviePL0bX2ZexpG9uMhXzoCephkJk4IeQ2ExIOro'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f845c10ea80>

    @pytest.mark.integration
    async def test_test_event_end_to_end(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test sending test event end-to-end."""
        test_data = {
            "event_type": "integration.test",
            "data": {
                "message": "Integration test message",
                "test_id": "test-123",
                "timestamp": "2024-01-01T12:00:00Z"
            },
            "user_id": "integration-test-user"
        }
    
>       response = await client.post(
            "/api/v1/events/test-event",
            json=test_data,
            headers=auth_headers
        )

tests/test_events_integration.py:54: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3241' coro=<TestEventsIntegration.test_test_event_end_to_end() running at /home/yam/chatter/tests/test_events_integration.py:54> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXS1MwN0dKRUtCMTc5WkU3RFZIMCIsImVtYWlsIjoidGVzdHVzZXJhZGJmZWJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWRiZmViIiwianRpIjoiMWZjODIxYzAtZDc0OC00NmY1LWE5NmUtYzM0YjNhNmZjZjU3IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg4Niwic2Vzc2lvbl9pZCI6IjY0Y2FkYWE2LTNmN2EtNDMzMS1hZTg4LTVhZDczOWI5MWU4NyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njg2fQ.81TuviePL0bX2ZexpG9uMhXzoCephkJk4IeQ2ExIOro
_____________ TestEventsIntegration.test_broadcast_test_end_to_end _____________

self = <tests.test_events_integration.TestEventsIntegration object at 0x7f84ca5f39b0>
client = <httpx.AsyncClient object at 0x7f842642fbf0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXTjBXQVI1UVBKM1NWSEpSQ1FZNiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njg3fQ.7TFzPerUSbTmJ0_r9jTl-rx-I8nzyVcjqyd1iwnp0W4'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f840fe63380>

    @pytest.mark.integration
    async def test_broadcast_test_end_to_end(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test broadcast test event end-to-end."""
        test_data = {
            "event_type": "integration.broadcast",
            "data": {
                "message": "Integration broadcast message",
                "test_id": "broadcast-123"
            }
        }
    
>       response = await client.post(
            "/api/v1/events/broadcast-test",
            json=test_data,
            headers=auth_headers
        )

tests/test_events_integration.py:78: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3255' coro=<TestEventsIntegration.test_broadcast_test_end_to_end() running at /home/yam/chatter/tests/test_events_integration.py:78> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXTjBXQVI1UVBKM1NWSEpSQ1FZNiIsImVtYWlsIjoidGVzdHVzZXJhZGRkYWFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWRkZGFhIiwianRpIjoiM2M3M2VmZjQtYjZlNy00MTA1LWI5MDgtNTBhODM3NTFkZWJhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg4Nywic2Vzc2lvbl9pZCI6IjVmZjRlOGQ3LWQ1NzUtNGZhZi1iMDMyLWJiYjA2Y2I4NDg2YyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njg3fQ.7TFzPerUSbTmJ0_r9jTl-rx-I8nzyVcjqyd1iwnp0W4
_____________ TestEventsIntegration.test_multiple_sse_connections ______________

self = <tests.test_events_integration.TestEventsIntegration object at 0x7f84ca408080>
client = <httpx.AsyncClient object at 0x7f840e622060>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXUEE5UDRQOEVRWDBNS0gzUkQ1ViIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njg5fQ.oMo1ffZnmg8e26_a6O_B-QyfbFHGlgE8keyAmXrdmtc'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84264a6810>

    @pytest.mark.integration
    async def test_multiple_sse_connections(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test multiple SSE connections from same user."""
        # Create multiple concurrent SSE connection attempts
        tasks = []
        for i in range(3):
            task = asyncio.create_task(
                client.get("/api/v1/events/stream", headers=auth_headers)
            )
            tasks.append(task)
    
        # Wait for all connections with timeout
        try:
>           responses = await asyncio.wait_for(asyncio.gather(*tasks), timeout=10.0)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_events_integration.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib64/python3.12/asyncio/tasks.py:520: in wait_for
    return await fut
           ^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3270' coro=<AsyncClient.get() running at /home/yam/.local/lib/python3.12/site-packages/httpx/_client.py:1768> cb=[gather.<locals>._done_callback() at /usr/lib64/python3.12/asyncio/tasks.py:767]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXUEE5UDRQOEVRWDBNS0gzUkQ1ViIsImVtYWlsIjoidGVzdHVzZXJiY2VhZGVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmNlYWRlIiwianRpIjoiMDQxOWZmM2YtMmJjZi00Y2I0LWIwNDEtZTZmOTZjNzczOTQ4IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg4OSwic2Vzc2lvbl9pZCI6ImUzNGY3NmNhLTk2Y2YtNGE1Mi1hZmJiLWE3Nzc3YTE1MWI3YSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njg5fQ.oMo1ffZnmg8e26_a6O_B-QyfbFHGlgE8keyAmXrdmtc
___________ TestEventsIntegration.test_events_workflow_with_database ___________

self = <tests.test_events_integration.TestEventsIntegration object at 0x7f84ca408170>
client = <httpx.AsyncClient object at 0x7f845c2bc8c0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXUkhNWVBHQURNVFJWTU5USjBBNCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjkxfQ.TLAZmF2hLdrOd4KlMDbGHyVVA_lZXGG0YGyPpPnLros'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f840f0f1d30>

    @pytest.mark.integration
    async def test_events_workflow_with_database(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test events workflow with database persistence."""
        # First, get initial stats
>       stats_response = await client.get("/api/v1/events/stats", headers=auth_headers)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_events_integration.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3286' coro=<TestEventsIntegration.test_events_workflow_with_database() running at /home/yam/chatter/tests/test_events_integration.py:120> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXUkhNWVBHQURNVFJWTU5USjBBNCIsImVtYWlsIjoidGVzdHVzZXJjYWFlZGJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2FhZWRiIiwianRpIjoiZDM1ZjYyMTctZDlmNC00ZTgyLTkzMDMtODdjZmIxZTk1YWM1IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg5MSwic2Vzc2lvbl9pZCI6IjQ1MmU0NTAyLTkxNGQtNDZhOS04YjViLTJhNGQ2N2U5ODBiYyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjkxfQ.TLAZmF2hLdrOd4KlMDbGHyVVA_lZXGG0YGyPpPnLros
___________ TestEventsIntegration.test_event_validation_integration ____________

self = <tests.test_events_integration.TestEventsIntegration object at 0x7f84ca5f3e60>
client = <httpx.AsyncClient object at 0x7f84246c6060>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXU1ZGSk4wV0NINEI3Nlo5SFNUUCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjkyfQ.y2OlKFqXjNZQirZ0o0jPUJlpkEvAZrFLiXsmfLwDlzQ'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f840fcd59d0>

    @pytest.mark.integration
    async def test_event_validation_integration(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test event data validation in integration environment."""
        # Test valid event types
        valid_event_types = [
            "user.login",
            "user.logout",
            "message.sent",
            "system.alert",
            "custom.event"
        ]
    
        for event_type in valid_event_types:
            test_data = {
                "event_type": event_type,
                "data": {"valid": True, "type": event_type},
                "user_id": "validation-test-user"
            }
    
>           response = await client.post(
                "/api/v1/events/test-event",
                json=test_data,
                headers=auth_headers
            )

tests/test_events_integration.py:169: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3300' coro=<TestEventsIntegration.test_event_validation_integration() running at /home/yam/chatter/tests/test_events_integration.py:169> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXU1ZGSk4wV0NINEI3Nlo5SFNUUCIsImVtYWlsIjoidGVzdHVzZXJiZWVjZGNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmVlY2RjIiwianRpIjoiMjYxYjg5NzQtYzQ0YS00MTQ2LWIzMWItOTU5NmJmMTk1NDJhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg5Miwic2Vzc2lvbl9pZCI6IjBlMzA3M2FmLWRlYWMtNDJhOS1iN2EwLTMxYjdmOTJlNzI0ZCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NjkyfQ.y2OlKFqXjNZQirZ0o0jPUJlpkEvAZrFLiXsmfLwDlzQ
_____________ TestEventsIntegration.test_event_data_serialization ______________

self = <tests.test_events_integration.TestEventsIntegration object at 0x7f84ca5f3350>
client = <httpx.AsyncClient object at 0x7f840f765d30>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXVjNXNDZSSDNGVDlIMlM1N0hIMSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njk0fQ.sORxVgHmoaMbbfuSo_tG1EnA5lYLz98O6O1lFcwO6_c'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f8424396d80>

    @pytest.mark.integration
    async def test_event_data_serialization(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test complex event data serialization."""
        complex_data = {
            "event_type": "complex.data.test",
            "data": {
                "nested_object": {
                    "level1": {
                        "level2": {"value": 42}
                    }
                },
                "array_data": [1, 2, 3, "string", {"nested": True}],
                "unicode_text": "Hello 世界 🌍",
                "numbers": {
                    "integer": 123,
                    "float": 45.67,
                    "negative": -89
                },
                "boolean_values": {
                    "true_val": True,
                    "false_val": False
                },
                "null_value": None
            },
            "user_id": "serialization-test-user"
        }
    
>       response = await client.post(
            "/api/v1/events/test-event",
            json=complex_data,
            headers=auth_headers
        )

tests/test_events_integration.py:203: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3314' coro=<TestEventsIntegration.test_event_data_serialization() running at /home/yam/chatter/tests/test_events_integration.py:203> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXVjNXNDZSSDNGVDlIMlM1N0hIMSIsImVtYWlsIjoidGVzdHVzZXJlYWJlYmVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWFiZWJlIiwianRpIjoiMjBiYmU0NDgtYzYwZC00MDY5LTg2MjMtZTNhNDQwOTk5NGQ2IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg5NCwic2Vzc2lvbl9pZCI6IjU0MGM1MDcwLTE2YzYtNGFiZS1hOWE2LTQ4ZjM0MzRkNTQ2OSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njk0fQ.sORxVgHmoaMbbfuSo_tG1EnA5lYLz98O6O1lFcwO6_c
____________ TestEventsIntegration.test_concurrent_event_operations ____________

self = <tests.test_events_integration.TestEventsIntegration object at 0x7f84ca5d4710>
client = <httpx.AsyncClient object at 0x7f840f01b1a0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXV0NTUjNKQkozV0M1UTMxUjI3RCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njk1fQ.SVRqQWjhYybVKY0ejjsLmaq2zpmiEPEI1AiSomW6leA'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f8488301220>

    @pytest.mark.integration
    async def test_concurrent_event_operations(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test concurrent event operations."""
        # Create concurrent tasks for different operations
        tasks = []
    
        # Add stats requests
        for i in range(2):
            task = asyncio.create_task(
                client.get("/api/v1/events/stats", headers=auth_headers)
            )
            tasks.append(task)
    
        # Add test events
        for i in range(3):
            test_data = {
                "event_type": f"concurrent.test.{i}",
                "data": {"concurrent_id": i, "test": "concurrent"},
                "user_id": f"concurrent-user-{i}"
            }
            task = asyncio.create_task(
                client.post("/api/v1/events/test-event", json=test_data, headers=auth_headers)
            )
            tasks.append(task)
    
        # Add broadcast tests
        for i in range(2):
            broadcast_data = {
                "event_type": f"concurrent.broadcast.{i}",
                "data": {"broadcast_id": i, "test": "concurrent"}
            }
            task = asyncio.create_task(
                client.post("/api/v1/events/broadcast-test", json=broadcast_data, headers=auth_headers)
            )
            tasks.append(task)
    
        # Wait for all operations to complete
>       responses = await asyncio.gather(*tasks)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_events_integration.py:251: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3329' coro=<AsyncClient.get() running at /home/yam/.local/lib/python3.12/site-packages/httpx/_client.py:1768> cb=[gather.<locals>._done_callback() at /usr/lib64/python3.12/asyncio/tasks.py:767]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXV0NTUjNKQkozV0M1UTMxUjI3RCIsImVtYWlsIjoidGVzdHVzZXJkY2ZmZGFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGNmZmRhIiwianRpIjoiMTY0MjQ0NWMtMjlkMy00YmI2LTg3MzEtNjZhYzNlOWI4M2RhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg5NSwic2Vzc2lvbl9pZCI6ImQxYjcxYjZhLWRiMGYtNDdlYi1iNjUyLTgyMjg1ZTFjNmExZSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njk1fQ.SVRqQWjhYybVKY0ejjsLmaq2zpmiEPEI1AiSomW6leA
______________ TestEventsIntegration.test_sse_connection_cleanup _______________

self = <tests.test_events_integration.TestEventsIntegration object at 0x7f84ca4086e0>
client = <httpx.AsyncClient object at 0x7f840e571e50>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXWFA5MFAyVkJXMzFXQ0s5OTA1NiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njk2fQ.4KI9fyP7QINQZ0nYTScg7Tj4sL0C7d3Z6ZAMFLmtsjE'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f840eede660>

    @pytest.mark.integration
    async def test_sse_connection_cleanup(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test SSE connection cleanup behavior."""
        # Get initial connection count
>       stats_response = await client.get("/api/v1/events/stats", headers=auth_headers)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_events_integration.py:261: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3349' coro=<TestEventsIntegration.test_sse_connection_cleanup() running at /home/yam/chatter/tests/test_events_integration.py:261> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFXWFA5MFAyVkJXMzFXQ0s5OTA1NiIsImVtYWlsIjoidGVzdHVzZXJkZmRkYWRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGZkZGFkIiwianRpIjoiMWRmZDFlMTktNzczOS00ZDgwLWE2ZTEtMTBkYTMzMTUwZWE4IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjg5Niwic2Vzc2lvbl9pZCI6IjJhZGJjZTIwLWI5NGUtNDQ2YS04NmEwLTU5OWEzZDhjMWJkZSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Njk2fQ.4KI9fyP7QINQZ0nYTScg7Tj4sL0C7d3Z6ZAMFLmtsjE
_______________ TestEventsUnit.test_events_stream_requires_auth ________________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840ea99790>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840ea99790>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_events_unit.TestEventsUnit object at 0x7f84ca409ac0>
client = <httpx.AsyncClient object at 0x7f840ea98c80>

    @pytest.mark.unit
    async def test_events_stream_requires_auth(self, client: AsyncClient):
        """Test that events stream requires authentication."""
>       response = await client.get("/api/v1/events/stream")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_events_unit.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840ea99790>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:08:18.008061Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35me8217ed2-fb78-4130-8320-d1d40e7bda97[0m [36mstatus_code[0m=[35m401[0m
________________ TestEventsUnit.test_admin_stream_requires_auth ________________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840ec843e0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840ec843e0>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_events_unit.TestEventsUnit object at 0x7f84ca409dc0>
client = <httpx.AsyncClient object at 0x7f840ece3950>

    @pytest.mark.unit
    async def test_admin_stream_requires_auth(self, client: AsyncClient):
        """Test that admin events stream requires authentication."""
>       response = await client.get("/api/v1/events/admin/stream")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_events_unit.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840ec843e0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:08:18.839002Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35mf4839051-31ac-40b8-84fe-dd10eb15a01a[0m [36mstatus_code[0m=[35m401[0m
________________ TestEventsUnit.test_events_stats_requires_auth ________________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840f6fc140>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840f6fc140>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_events_unit.TestEventsUnit object at 0x7f84ca40a1b0>
client = <httpx.AsyncClient object at 0x7f840f6ff5f0>

    @pytest.mark.unit
    async def test_events_stats_requires_auth(self, client: AsyncClient):
        """Test that events stats endpoint requires authentication."""
>       response = await client.get("/api/v1/events/stats")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_events_unit.py:30: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840f6fc140>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:08:20.680786Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m1e5c9683-3982-40a4-bbc6-0141a635462c[0m [36mstatus_code[0m=[35m401[0m
_________________ TestEventsUnit.test_test_event_requires_auth _________________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840e1e8590>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840e1e8590>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_events_unit.TestEventsUnit object at 0x7f84ca40a570>
client = <httpx.AsyncClient object at 0x7f840e133a70>

    @pytest.mark.unit
    async def test_test_event_requires_auth(self, client: AsyncClient):
        """Test that test event endpoint requires authentication."""
>       response = await client.post("/api/v1/events/test-event")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_events_unit.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840e1e8590>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:08:21.566016Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m38841792-ed21-43a3-9787-b487593431f8[0m [36mstatus_code[0m=[35m401[0m
_______________ TestEventsUnit.test_broadcast_test_requires_auth _______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84245c72c0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84245c72c0>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_events_unit.TestEventsUnit object at 0x7f84ca5f32f0>
client = <httpx.AsyncClient object at 0x7f84245c67b0>

    @pytest.mark.unit
    async def test_broadcast_test_requires_auth(self, client: AsyncClient):
        """Test that broadcast test endpoint requires authentication."""
>       response = await client.post("/api/v1/events/broadcast-test")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_events_unit.py:42: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84245c72c0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:08:22.409596Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35mc4480f72-b049-4192-96dd-d73ebea43ffe[0m [36mstatus_code[0m=[35m401[0m
___________________ TestEventsUnit.test_events_stats_success ___________________

self = <tests.test_events_unit.TestEventsUnit object at 0x7f84ca5b2600>
mock_sse_service = <MagicMock name='sse_service' id='140205168612784'>
client = <httpx.AsyncClient object at 0x7f840e411850>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYNDQ0NURFWkdDNTlNSllWU1daNCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzAzfQ.TEIrtFFKfua0lFFlb1hwasIdgs-u-71UEsveJnTv_aw'}

    @pytest.mark.unit
    @patch('chatter.api.events.sse_service')
    async def test_events_stats_success(self, mock_sse_service, client: AsyncClient, auth_headers: dict):
        """Test events stats endpoint with mocked SSE service."""
        # Mock SSE service stats
        mock_sse_service.get_stats.return_value = {
            "active_connections": 5,
            "total_events_sent": 100,
            "events_per_second": 2.5,
            "connections_by_user": {
                "user1": 2,
                "user2": 3
            }
        }
    
>       response = await client.get("/api/v1/events/stats", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_events_unit.py:60: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3428' coro=<TestEventsUnit.test_events_stats_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYNDQ0NURFWkdDNTlNSllWU1daNCIsImVtYWlsIjoidGVzdHVzZXJhYWNlYmJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWFjZWJiIiwianRpIjoiYjMzMGZkNGYtYzVhZS00OGExLWE3MDMtMDBhNjI1ZWIwYTQxIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjkwMywic2Vzc2lvbl9pZCI6Ijg3ZTE1YmFjLTE1MzgtNDg3NS1iOTZlLWQ4OGM3MmZjMTQyOCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzAzfQ.TEIrtFFKfua0lFFlb1hwasIdgs-u-71UEsveJnTv_aw
____________________ TestEventsUnit.test_test_event_success ____________________

self = <tests.test_events_unit.TestEventsUnit object at 0x7f84ca40a930>
mock_sse_service = <MagicMock name='sse_service' id='140205145436048'>
client = <httpx.AsyncClient object at 0x7f840de39cd0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYNURNWDRURkdCNkdYVFZQVjgzNiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzA0fQ.ZxomCUOgQHKAbDxJIM5H__KzojIcwrZKVODWoIT0S1c'}

    @pytest.mark.unit
    @patch('chatter.api.events.sse_service')
    async def test_test_event_success(self, mock_sse_service, client: AsyncClient, auth_headers: dict):
        """Test test event endpoint success."""
        mock_sse_service.broadcast_to_user.return_value = True
    
        test_data = {
            "event_type": "test.message",
            "data": {"message": "Hello World"},
            "user_id": "test-user-123"
        }
    
>       response = await client.post(
            "/api/v1/events/test-event",
            json=test_data,
            headers=auth_headers
        )

tests/test_events_unit.py:81: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3442' coro=<TestEventsUnit.test_test_event_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYNURNWDRURkdCNkdYVFZQVjgzNiIsImVtYWlsIjoidGVzdHVzZXJhYmZkYWRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWJmZGFkIiwianRpIjoiN2JkNjRjYzAtYTdjZC00OGE2LTgyZjctNDI0YTBkYTc1ZmU1IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjkwNCwic2Vzc2lvbl9pZCI6ImU2NTBhZmNlLTI0MmEtNGI3OC1hNGMzLWExYTM4OGVlYzJjMyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzA0fQ.ZxomCUOgQHKAbDxJIM5H__KzojIcwrZKVODWoIT0S1c
__________________ TestEventsUnit.test_broadcast_test_success __________________

self = <tests.test_events_unit.TestEventsUnit object at 0x7f84ca409f10>
mock_sse_service = <MagicMock name='sse_service' id='140205145193312'>
client = <httpx.AsyncClient object at 0x7f840ddfe6c0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYNlE1ODdGWDZQQ0M3VzBZRUUxUyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzA2fQ.NU6BcQbtR8PJvRtLDpxAxwHgL_ndIcFeC_QbqLzZsHs'}

    @pytest.mark.unit
    @patch('chatter.api.events.sse_service')
    async def test_broadcast_test_success(self, mock_sse_service, client: AsyncClient, auth_headers: dict):
        """Test broadcast test endpoint success."""
        mock_sse_service.broadcast.return_value = True
    
        test_data = {
            "event_type": "broadcast.test",
            "data": {"message": "Broadcast message"}
        }
    
>       response = await client.post(
            "/api/v1/events/broadcast-test",
            json=test_data,
            headers=auth_headers
        )

tests/test_events_unit.py:104: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3456' coro=<TestEventsUnit.test_broadcast_test_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYNlE1ODdGWDZQQ0M3VzBZRUUxUyIsImVtYWlsIjoidGVzdHVzZXJkYmJmZmRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGJiZmZkIiwianRpIjoiNWVjZTRhMzMtYTg3ZC00YmU0LTg1YjctY2Q0MDA0NTlkNzViIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjkwNiwic2Vzc2lvbl9pZCI6IjIzZjRjMThkLWYwMzAtNDU5Ni1iM2QwLWNkOTRjY2VmMWFhMyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzA2fQ.NU6BcQbtR8PJvRtLDpxAxwHgL_ndIcFeC_QbqLzZsHs
_________________ TestEventsUnit.test_test_event_invalid_data __________________

self = <tests.test_events_unit.TestEventsUnit object at 0x7f84ca40ab70>
client = <httpx.AsyncClient object at 0x7f840d893500>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYODExQTY4SkJINTM5UzgxWU0wUiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzA3fQ.CCiSrQ_3cyW3fBLFlwAgRmzVVy-daJYEPSnxj5OHZ00'}

    @pytest.mark.unit
    async def test_test_event_invalid_data(self, client: AsyncClient, auth_headers: dict):
        """Test test event endpoint with invalid data."""
        # Missing required fields
        test_data = {
            "data": {"message": "Hello World"}
            # Missing event_type
        }
    
>       response = await client.post(
            "/api/v1/events/test-event",
            json=test_data,
            headers=auth_headers
        )

tests/test_events_unit.py:125: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3470' coro=<TestEventsUnit.test_test_event_invalid_data() running at /home/yam/chatter/tests/test_events_unit.py:125> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYODExQTY4SkJINTM5UzgxWU0wUiIsImVtYWlsIjoidGVzdHVzZXJhZmFkZGRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWZhZGRkIiwianRpIjoiZjhhNWIxMDUtNTNiNi00YmM1LTgxZjAtODQxODEyY2MzNzljIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjkwNywic2Vzc2lvbl9pZCI6IjQzMzQxNzhkLTE1NmYtNGZkOS1iNWIwLTU1N2M2YTlkYzYxYyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzA3fQ.CCiSrQ_3cyW3fBLFlwAgRmzVVy-daJYEPSnxj5OHZ00
_______________ TestEventsUnit.test_broadcast_test_invalid_data ________________

self = <tests.test_events_unit.TestEventsUnit object at 0x7f84ca40af30>
client = <httpx.AsyncClient object at 0x7f8403fcdf10>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYOUFFOVYyOE5UV044NlpEWFJZQiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzA4fQ.b7exUTmEjX13RMX3B-Wz6itxmNWGijhQvBF_C2ru1Ow'}

    @pytest.mark.unit
    async def test_broadcast_test_invalid_data(self, client: AsyncClient, auth_headers: dict):
        """Test broadcast test endpoint with invalid data."""
        # Missing required fields
        test_data = {
            "data": {"message": "Broadcast message"}
            # Missing event_type
        }
    
>       response = await client.post(
            "/api/v1/events/broadcast-test",
            json=test_data,
            headers=auth_headers
        )

tests/test_events_unit.py:141: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3484' coro=<TestEventsUnit.test_broadcast_test_invalid_data() running at /home/yam/chatter/tests/test_events_unit.py:141> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYOUFFOVYyOE5UV044NlpEWFJZQiIsImVtYWlsIjoidGVzdHVzZXJmY2RlZWVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmNkZWVlIiwianRpIjoiMTY0Y2RjODAtODJjZS00MTI1LTk5NWEtYmZhNTc5NjA3NWFhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjkwOCwic2Vzc2lvbl9pZCI6IjE4YmU2NWNlLTViYTQtNGY0ZS05MDkxLWU1MTY2YmZlYzdhZCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzA4fQ.b7exUTmEjX13RMX3B-Wz6itxmNWGijhQvBF_C2ru1Ow
_________________ TestEventsUnit.test_events_stream_rate_limit _________________

self = <tests.test_events_unit.TestEventsUnit object at 0x7f84ca40b2f0>
mock_get_rate_limiter = <MagicMock name='get_unified_rate_limiter' id='140205146347408'>
client = <httpx.AsyncClient object at 0x7f840df182f0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYQUtHTkhZRkRKNTlOSFJKQldTUiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzEwfQ.YyqAGSgrjciJZFtFN-ovjIdA5-vdZ3asT5Gda0yTSw0'}

    @pytest.mark.unit
    @patch('chatter.api.events.get_unified_rate_limiter')
    async def test_events_stream_rate_limit(self, mock_get_rate_limiter, client: AsyncClient, auth_headers: dict):
        """Test events stream rate limiting."""
        from chatter.utils.unified_rate_limiter import RateLimitExceeded
    
        # Mock rate limiter to raise exception
        mock_rate_limiter = AsyncMock()
        mock_rate_limiter.check_rate_limit.side_effect = RateLimitExceeded(
            message="Rate limit exceeded",
            limit=50,
            window=3600,
            remaining=0
        )
        mock_get_rate_limiter.return_value = mock_rate_limiter
    
>       response = await client.get("/api/v1/events/stream", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_events_unit.py:164: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3498' coro=<TestEventsUnit.test_events_stream_rate_limit() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYQUtHTkhZRkRKNTlOSFJKQldTUiIsImVtYWlsIjoidGVzdHVzZXJmY2VjYmZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmNlY2JmIiwianRpIjoiNjQ0ZGJmNjYtN2YzYS00NmRlLWJhNmYtZmY3MzBiOWM1ZTBiIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjkxMCwic2Vzc2lvbl9pZCI6IjZmMDRlOWFlLTMyOWYtNDhlMy1iOWZhLTljMzg2MTUzOGU1NSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzEwfQ.YyqAGSgrjciJZFtFN-ovjIdA5-vdZ3asT5Gda0yTSw0
______________ TestEventsUnit.test_events_stream_connection_limit ______________

self = <tests.test_events_unit.TestEventsUnit object at 0x7f84ca40b6b0>
mock_sse_service = <MagicMock name='sse_service' id='140205552610976'>
client = <httpx.AsyncClient object at 0x7f842628aae0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYQ1dSODZUVkhCNzI0NlkxR1BCUCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzEyfQ.eJtg0INspiHNwObT9JFW2CQISJf_a_HC5cAjO0SUngU'}

    @pytest.mark.unit
    @patch('chatter.api.events.sse_service')
    async def test_events_stream_connection_limit(self, mock_sse_service, client: AsyncClient, auth_headers: dict):
        """Test events stream connection limit."""
        # Mock SSE service to raise connection limit error
        mock_sse_service.create_connection.side_effect = ValueError("Too many connections")
    
>       response = await client.get("/api/v1/events/stream", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_events_unit.py:174: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3512' coro=<TestEventsUnit.test_events_stream_connection_limit() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYQ1dSODZUVkhCNzI0NlkxR1BCUCIsImVtYWlsIjoidGVzdHVzZXJhYmVlYmFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWJlZWJhIiwianRpIjoiYWU1NzhjN2EtMWMzMi00MmQ5LWE1ZDYtODE3NzhiNGUzMGE1IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjkxMiwic2Vzc2lvbl9pZCI6IjUxNmJhMWQ4LWIyNjgtNDhiYy1hYjg0LWZmNjkwNGU2ZDI4YyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzEyfQ.eJtg0INspiHNwObT9JFW2CQISJf_a_HC5cAjO0SUngU
____________ TestEventsUnit.test_events_stream_connection_not_found ____________

self = <tests.test_events_unit.TestEventsUnit object at 0x7f84ca40ba70>
mock_sse_service = <MagicMock name='sse_service' id='140205158595232'>
client = <httpx.AsyncClient object at 0x7f840eac66c0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYRTY0Q1lSWUZNRUI0WUdUNkdNMyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzEzfQ.YeMvxpzpaTfBfs897FJghRUrFKepL6mp75mZBKeYu6E'}

    @pytest.mark.unit
    @patch('chatter.api.events.sse_service')
    async def test_events_stream_connection_not_found(self, mock_sse_service, client: AsyncClient, auth_headers: dict):
        """Test events stream when connection cannot be retrieved."""
        # Mock SSE service to return connection ID but fail on get_connection
        mock_sse_service.create_connection.return_value = "connection-123"
        mock_sse_service.get_connection.return_value = None
    
>       response = await client.get("/api/v1/events/stream", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_events_unit.py:185: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3526' coro=<TestEventsUnit.test_events_stream_connection_not_found() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYRTY0Q1lSWUZNRUI0WUdUNkdNMyIsImVtYWlsIjoidGVzdHVzZXJkZGRiYmJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGRkYmJiIiwianRpIjoiZjFlMTM0MzYtZTFkMi00NGI4LWI0MjktMThlYTIyZGU5NGJlIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjkxMywic2Vzc2lvbl9pZCI6ImIwOTQ0NGE1LTY0M2MtNDgzZi05MDg2LTExODM2NWY5MjVjMyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzEzfQ.YeMvxpzpaTfBfs897FJghRUrFKepL6mp75mZBKeYu6E
_______________ TestEventsUnit.test_admin_stream_requires_admin ________________

self = <tests.test_events_unit.TestEventsUnit object at 0x7f84ca428140>
mock_sse_service = <MagicMock name='sse_service' id='140205147553376'>
client = <httpx.AsyncClient object at 0x7f840e03fa70>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYRkVZWE4wWkc0WTdIQVlLQkdGNiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzE1fQ.3dPyaL5sfb2JzwUbQD3PjXnkvMOWpwXyuB59kdOrDf8'}

    @pytest.mark.unit
    @patch('chatter.api.events.sse_service')
    async def test_admin_stream_requires_admin(self, mock_sse_service, client: AsyncClient, auth_headers: dict):
        """Test that admin stream requires admin privileges."""
        # Regular user should get forbidden
>       response = await client.get("/api/v1/events/admin/stream", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_events_unit.py:196: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3540' coro=<TestEventsUnit.test_admin_stream_requires_admin() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYRkVZWE4wWkc0WTdIQVlLQkdGNiIsImVtYWlsIjoidGVzdHVzZXJkY2FiYmZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGNhYmJmIiwianRpIjoiOTkxMWI3ZDgtYzI1MS00MDdiLTgwNWEtZTUwZWM1M2M5YjkwIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjkxNSwic2Vzc2lvbl9pZCI6IjkyMmU3NjAwLWQ2MjAtNDJmMS1iM2YyLWM2YWQ1YmYwZjIxZCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzE1fQ.3dPyaL5sfb2JzwUbQD3PjXnkvMOWpwXyuB59kdOrDf8
______________ TestEventsUnit.test_events_stats_sse_service_error ______________

self = <tests.test_events_unit.TestEventsUnit object at 0x7f84ca428230>
mock_sse_service = <MagicMock name='sse_service' id='140205146910752'>
client = <httpx.AsyncClient object at 0x7f840dfa2ff0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYR1IwNkUwVEVGVkhERDhSNzk1NyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzE2fQ.83JQtxek1dF_raNJEbJgVbVRLwZ7vlH5kMq6JChtLGw'}

    @pytest.mark.unit
    @patch('chatter.api.events.sse_service')
    async def test_events_stats_sse_service_error(self, mock_sse_service, client: AsyncClient, auth_headers: dict):
        """Test events stats when SSE service has an error."""
        mock_sse_service.get_stats.side_effect = Exception("SSE service error")
    
>       response = await client.get("/api/v1/events/stats", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_events_unit.py:205: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3554' coro=<TestEventsUnit.test_events_stats_sse_service_error() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYR1IwNkUwVEVGVkhERDhSNzk1NyIsImVtYWlsIjoidGVzdHVzZXJjYmZhYmRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2JmYWJkIiwianRpIjoiNzUxMjc3MmMtNmEwMC00OTg0LWI1MzktZTYzNTJmZjNjMzNkIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjkxNiwic2Vzc2lvbl9pZCI6IjAzMTUxODU5LWYzOTItNDE3NS04NWUyLTlmZTc0NTVjZmNhMiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzE2fQ.83JQtxek1dF_raNJEbJgVbVRLwZ7vlH5kMq6JChtLGw
_______________ TestEventsUnit.test_test_event_sse_service_error _______________

self = <tests.test_events_unit.TestEventsUnit object at 0x7f84ca4285f0>
mock_sse_service = <MagicMock name='sse_service' id='140204975928288'>
client = <httpx.AsyncClient object at 0x7f8403c93110>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYSjFLNjlIUDJIWEpRVjNKUTc2USIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzE3fQ.e_8RZdPlsWjDNuwtgDV9j5_uOPuvw6djKXOwkxFt_xs'}

    @pytest.mark.unit
    @patch('chatter.api.events.sse_service')
    async def test_test_event_sse_service_error(self, mock_sse_service, client: AsyncClient, auth_headers: dict):
        """Test test event when SSE service has an error."""
        mock_sse_service.broadcast_to_user.side_effect = Exception("SSE service error")
    
        test_data = {
            "event_type": "test.message",
            "data": {"message": "Hello World"},
            "user_id": "test-user-123"
        }
    
>       response = await client.post(
            "/api/v1/events/test-event",
            json=test_data,
            headers=auth_headers
        )

tests/test_events_unit.py:220: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3568' coro=<TestEventsUnit.test_test_event_sse_service_error() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYSjFLNjlIUDJIWEpRVjNKUTc2USIsImVtYWlsIjoidGVzdHVzZXJmYWZjZmRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmFmY2ZkIiwianRpIjoiZDMzNzY5N2UtMzZkMy00ZDg4LWJkZGUtNTAxNzY2Yzc4MDQzIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjkxNywic2Vzc2lvbl9pZCI6ImU0NTQ4YzZiLWM3MTYtNGIyMS1iYjRiLThkMWM3NmNiZmU1ZSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzE3fQ.e_8RZdPlsWjDNuwtgDV9j5_uOPuvw6djKXOwkxFt_xs
_____________ TestEventsUnit.test_broadcast_test_sse_service_error _____________

self = <tests.test_events_unit.TestEventsUnit object at 0x7f84ca4289b0>
mock_sse_service = <MagicMock name='sse_service' id='140204977074016'>
client = <httpx.AsyncClient object at 0x7f8403daafc0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYS0FIMU1NQ0U5RzgxQ1RDVEQ3WSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzE5fQ.5J9s7Z_zCHCrfWRKROZuzdhS_7Spe3JUcdetstvBS28'}

    @pytest.mark.unit
    @patch('chatter.api.events.sse_service')
    async def test_broadcast_test_sse_service_error(self, mock_sse_service, client: AsyncClient, auth_headers: dict):
        """Test broadcast test when SSE service has an error."""
        mock_sse_service.broadcast.side_effect = Exception("SSE service error")
    
        test_data = {
            "event_type": "broadcast.test",
            "data": {"message": "Broadcast message"}
        }
    
>       response = await client.post(
            "/api/v1/events/broadcast-test",
            json=test_data,
            headers=auth_headers
        )

tests/test_events_unit.py:238: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3582' coro=<TestEventsUnit.test_broadcast_test_sse_service_error() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFYS0FIMU1NQ0U5RzgxQ1RDVEQ3WSIsImVtYWlsIjoidGVzdHVzZXJhZWJiYWVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWViYmFlIiwianRpIjoiNjc5YTM2N2MtODEyOS00Nzk5LWFkNjktNzdmNjQ2ZTBkNWEzIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjkxOSwic2Vzc2lvbl9pZCI6ImYzMzQzMTM5LThkYWMtNDg1Ni1hNmNlLTkzMzQzM2M2ZmFkNSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzE5fQ.5J9s7Z_zCHCrfWRKROZuzdhS_7Spe3JUcdetstvBS28
_________ TestHealthUnit.test_metrics_endpoint_with_monitoring_success _________

self = <tests.test_health_unit.TestHealthUnit object at 0x7f84ca42bb90>
mock_get_monitoring = <AsyncMock name='get_monitoring_service' id='140208289510224'>
client = <httpx.AsyncClient object at 0x7f8401a1d8e0>

    @pytest.mark.unit
    @patch('chatter.core.monitoring.get_monitoring_service')
    async def test_metrics_endpoint_with_monitoring_success(self, mock_get_monitoring, client: AsyncClient):
        """Test metrics endpoint when monitoring service is available."""
        # Mock the monitoring service
        mock_service = AsyncMock()
        mock_service.get_system_health.return_value = {
            "status": "healthy",
            "checks_available": True,
            "cpu_usage": 15.2,
            "memory_usage": 45.8
        }
        mock_service.stats_by_endpoint = {
            "/healthz": {"requests": 100, "avg_response_time": 10.5},
            "/readyz": {"requests": 50, "avg_response_time": 25.3}
        }
        # Make get_monitoring_service async and return the mock service
        async def return_mock_service(*args, **kwargs):
            return mock_service
        mock_get_monitoring.side_effect = return_mock_service
    
        response = await client.get("/metrics")
        assert response.status_code == 200
    
        data = response.json()
>       assert data["health"]["status"] == "healthy"
E       AssertionError: assert 'unknown' == 'healthy'
E         
E         - healthy
E         + unknown

tests/test_health_unit.py:110: AssertionError
------------------------------ Captured log call -------------------------------
WARNING  chatter.api.health:health.py:157 [2m2025-09-05T20:08:50.787111Z[0m [[33m[1mwarning  [0m] [1mFailed to get endpoint stats: 'coroutine' object is not iterable[0m [[34m[1mchatter.api.health[0m]
________ TestHealthUnit.test_correlation_trace_with_monitoring_success _________

self = <tests.test_health_unit.TestHealthUnit object at 0x7f84ca43c350>
mock_get_monitoring = <AsyncMock name='get_monitoring_service' id='140204937156208'>
client = <httpx.AsyncClient object at 0x7f8401577f50>

    @pytest.mark.unit
    @patch('chatter.core.monitoring.get_monitoring_service')
    async def test_correlation_trace_with_monitoring_success(self, mock_get_monitoring, client: AsyncClient):
        """Test correlation trace endpoint when monitoring service is available."""
        correlation_id = "test-correlation-123"
        mock_requests = [
            {"timestamp": "2024-01-01T12:00:00Z", "method": "GET", "path": "/healthz"},
            {"timestamp": "2024-01-01T12:00:01Z", "method": "GET", "path": "/readyz"}
        ]
    
        mock_service = AsyncMock()
        mock_service.get_correlation_trace.return_value = mock_requests
        mock_get_monitoring.return_value = mock_service
    
        response = await client.get(f"/trace/{correlation_id}")
>       assert response.status_code == 200
E       assert 500 == 200
E        +  where 500 = <Response [500 Internal Server Error]>.status_code

tests/test_health_unit.py:146: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    chatter.api.health:health.py:223 [2m2025-09-05T20:08:52.122400Z[0m [[31m[1merror    [0m] [1mFailed to get correlation trace for test-correlation-123: object of type 'coroutine' has no len()[0m [[34m[1mchatter.api.health[0m]
_________ TestHealthUnit.test_correlation_trace_with_monitoring_error __________

self = <tests.test_health_unit.TestHealthUnit object at 0x7f84ca43c710>
mock_get_monitoring = <AsyncMock name='get_monitoring_service' id='140204931443856'>
client = <httpx.AsyncClient object at 0x7f8401226cf0>

    @pytest.mark.unit
    @patch('chatter.core.monitoring.get_monitoring_service')
    async def test_correlation_trace_with_monitoring_error(self, mock_get_monitoring, client: AsyncClient):
        """Test correlation trace endpoint when monitoring service raises an exception."""
        correlation_id = "test-correlation-123"
        mock_get_monitoring.side_effect = Exception("Monitoring service error")
    
        response = await client.get(f"/trace/{correlation_id}")
        assert response.status_code == 500  # Internal server error
    
        data = response.json()
        # InternalServerProblem sets type_suffix="internal-server-error"
>       assert "internal-server-error" in data["type"]
                                          ^^^^^^^^^^^^
E       KeyError: 'type'

tests/test_health_unit.py:165: KeyError
------------------------------ Captured log call -------------------------------
ERROR    chatter.api.health:health.py:223 [2m2025-09-05T20:08:52.787481Z[0m [[31m[1merror    [0m] [1mFailed to get correlation trace for test-correlation-123: Monitoring service error[0m [[34m[1mchatter.api.health[0m]
_______________ TestJobsIntegration.test_job_complete_lifecycle ________________

self = <tests.test_jobs_integration.TestJobsIntegration object at 0x7f84ca460200>
client = <httpx.AsyncClient object at 0x7f83ee380b90>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZQjVYRVM0MUpDMjNWNjYxRzdONyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzQzfQ.l-8NHkfMo-NKwcYPydrkJ9oaubsOoRM43Wr5wDP-xIE'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f83ee6c83b0>

    @pytest.mark.integration
    async def test_job_complete_lifecycle(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test complete job lifecycle from creation to completion."""
        # Create a job
        job_data = {
            "name": "Integration Test Job",
            "function_name": "test_function",
            "args": ["test_arg"],
            "kwargs": {"test_key": "test_value"},
            "priority": "normal"
        }
    
>       create_response = await client.post("/api/v1/jobs/", json=job_data, headers=auth_headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_integration.py:24: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-3999' coro=<TestJobsIntegration.test_job_complete_lifecycle() running at /home/yam/chatter/tests/test_jobs_integration.py:24> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZQjVYRVM0MUpDMjNWNjYxRzdONyIsImVtYWlsIjoidGVzdHVzZXJhYmZhYmZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWJmYWJmIiwianRpIjoiZjU5MDU2MDEtZDZjNS00Nzc5LTljNjktMWQ1MTA0ZGNmZmY1IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk0Mywic2Vzc2lvbl9pZCI6IjA1YWUzMzEwLTI5MjQtNDA0NC1iMGYyLTA3OWNhYjJmMjQwMyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzQzfQ.l-8NHkfMo-NKwcYPydrkJ9oaubsOoRM43Wr5wDP-xIE
______________ TestJobsIntegration.test_job_listing_and_filtering ______________

self = <tests.test_jobs_integration.TestJobsIntegration object at 0x7f84ca460530>
client = <httpx.AsyncClient object at 0x7f83ed67aa50>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZQ0hEMDc4NlRHN0dNSkZLUFJOViIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzQ0fQ.E0VQiJpscb4_bR1jsA9pSJSecStN28oQVWbz7-WCw6k'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f83ee822360>

    @pytest.mark.integration
    async def test_job_listing_and_filtering(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test job listing and filtering functionality."""
        # Create multiple jobs with different statuses
        job_names = ["Job 1", "Job 2", "Job 3"]
        created_jobs = []
    
        for name in job_names:
            job_data = {
                "name": name,
                "function_name": "test_function",
                "args": [],
                "kwargs": {},
                "priority": "normal"
            }
    
>           response = await client.post("/api/v1/jobs/", json=job_data, headers=auth_headers)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_integration.py:64: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4013' coro=<TestJobsIntegration.test_job_listing_and_filtering() running at /home/yam/chatter/tests/test_jobs_integration.py:64> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZQ0hEMDc4NlRHN0dNSkZLUFJOViIsImVtYWlsIjoidGVzdHVzZXJiZWRmYmJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmVkZmJiIiwianRpIjoiOWY5MWYyMjEtZWIzNS00MDlkLThjMjgtMWI4ZTU2MWFlYWM5IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk0NCwic2Vzc2lvbl9pZCI6ImFiMWFiZTUwLTM3NDQtNGFlZS05ZDViLTk0MzdlZDA2ZDdmNSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzQ0fQ.E0VQiJpscb4_bR1jsA9pSJSecStN28oQVWbz7-WCw6k
______________ TestJobsIntegration.test_job_cancellation_workflow ______________

self = <tests.test_jobs_integration.TestJobsIntegration object at 0x7f84ca460920>
client = <httpx.AsyncClient object at 0x7f83edda8e00>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZRFRGVjROODdQTVM3UU5TSzNYQSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzQ2fQ.iaqw_Vpoqu52e9zMgbb54wvPM7kvx8OFgTPXzZTIVk0'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f83ed67b0b0>

    @pytest.mark.integration
    async def test_job_cancellation_workflow(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test job cancellation workflow."""
        # Create a job
        job_data = {
            "name": "Cancellation Test Job",
            "function_name": "slow_test_function",  # Hypothetical slow function
            "args": [],
            "kwargs": {},
            "priority": "low"
        }
    
>       create_response = await client.post("/api/v1/jobs/", json=job_data, headers=auth_headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_integration.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4027' coro=<TestJobsIntegration.test_job_cancellation_workflow() running at /home/yam/chatter/tests/test_jobs_integration.py:103> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZRFRGVjROODdQTVM3UU5TSzNYQSIsImVtYWlsIjoidGVzdHVzZXJiYmRkZGNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmJkZGRjIiwianRpIjoiMmI3MWJkOGItODhhYy00YzAyLWEzYjgtZWMwOThlOWZiN2I3IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk0Niwic2Vzc2lvbl9pZCI6IjQxMTM3MzQxLTFmYWItNDNiZS04NjZlLTY2M2E1ZGIyODZkZCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzQ2fQ.iaqw_Vpoqu52e9zMgbb54wvPM7kvx8OFgTPXzZTIVk0
_________________ TestJobsIntegration.test_job_error_scenarios _________________

self = <tests.test_jobs_integration.TestJobsIntegration object at 0x7f84ca460ce0>
client = <httpx.AsyncClient object at 0x7f840016a5a0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZRzdUV0I3TUpCRTFLWVM4MUpTViIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzQ4fQ.RE_FK3QakHFTgbz3lWX4Pbm47rSgx7CSGMBWiwCPEIY'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f83ee006d80>

    @pytest.mark.integration
    async def test_job_error_scenarios(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test job error handling scenarios."""
        # Test non-existent job operations
        nonexistent_id = "550e8400-e29b-41d4-a716-446655440000"
    
        # Get non-existent job
>       get_response = await client.get(f"/api/v1/jobs/{nonexistent_id}", headers=auth_headers)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_integration.py:127: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4041' coro=<TestJobsIntegration.test_job_error_scenarios() running at /home/yam/chatter/tests/test_jobs_integration.py:127> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZRzdUV0I3TUpCRTFLWVM4MUpTViIsImVtYWlsIjoidGVzdHVzZXJiYWZhYmVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmFmYWJlIiwianRpIjoiZGIyZjM3MmEtNGYwYS00YzJjLTg1OGItZGRiYWMxMWQyODMzIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk0OCwic2Vzc2lvbl9pZCI6IjVmOWJhN2MzLTA3OTItNGM2OC1hZjQ4LThlYjQ4ZTViY2NjMyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzQ4fQ.RE_FK3QakHFTgbz3lWX4Pbm47rSgx7CSGMBWiwCPEIY
______________ TestJobsIntegration.test_job_validation_scenarios _______________

self = <tests.test_jobs_integration.TestJobsIntegration object at 0x7f84ca4610a0>
client = <httpx.AsyncClient object at 0x7f8400dc7cb0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZSEhROEJZMVg1N0VaRkNaQVc3UCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzQ5fQ.ptt58dR9NqqgUH7I-A-EeCLE6dT2WpM8d-2xjsgbYm4'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84001fb320>

    @pytest.mark.integration
    async def test_job_validation_scenarios(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test job creation validation scenarios."""
        # Test invalid function name
        invalid_function_data = {
            "name": "Invalid Function Job",
            "function_name": "nonexistent_function_12345",
            "args": [],
            "kwargs": {}
        }
    
>       response = await client.post("/api/v1/jobs/", json=invalid_function_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_integration.py:156: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4055' coro=<TestJobsIntegration.test_job_validation_scenarios() running at /home/yam/chatter/tests/test_jobs_integration.py:156> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZSEhROEJZMVg1N0VaRkNaQVc3UCIsImVtYWlsIjoidGVzdHVzZXJmYWNmYmZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmFjZmJmIiwianRpIjoiNWQxY2MyOTgtYjgxNS00MjNlLTg2MGQtNWRmNTY5Y2ZiODBhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk0OSwic2Vzc2lvbl9pZCI6ImI0Yzc2YjU1LWQ5MzAtNDQzZi1hNjU2LTQ2YWQ1ZTFiN2IyYyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzQ5fQ.ptt58dR9NqqgUH7I-A-EeCLE6dT2WpM8d-2xjsgbYm4
_________________ TestJobsIntegration.test_job_stats_accuracy __________________

self = <tests.test_jobs_integration.TestJobsIntegration object at 0x7f84ca461460>
client = <httpx.AsyncClient object at 0x7f8400f36900>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZSlRUOTBCNjAwWkhBQ1lZSktRRiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzUxfQ.Aoor5j_SQIPZ1We-G7hyOJRypmNeGlhY35pwU245RCY'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f8400b37ce0>

    @pytest.mark.integration
    async def test_job_stats_accuracy(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test job statistics accuracy."""
        # Get initial stats
>       initial_response = await client.get("/api/v1/jobs/stats/overview", headers=auth_headers)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_integration.py:184: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4069' coro=<TestJobsIntegration.test_job_stats_accuracy() running at /home/yam/chatter/tests/test_jobs_integration.py:184> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZSlRUOTBCNjAwWkhBQ1lZSktRRiIsImVtYWlsIjoidGVzdHVzZXJiYWJiYmVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmFiYmJlIiwianRpIjoiODJhOTYzOGMtNTAzMS00YjBkLThhNjgtNDUxMDQ2MjVlNTRjIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk1MSwic2Vzc2lvbl9pZCI6IjU3NzFlZjRhLTdkZmItNDA1Yi04NzkzLTAyZDNhNDg4ODZiMSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzUxfQ.Aoor5j_SQIPZ1We-G7hyOJRypmNeGlhY35pwU245RCY
______________ TestJobsIntegration.test_job_cleanup_functionality ______________

self = <tests.test_jobs_integration.TestJobsIntegration object at 0x7f84ca461820>
client = <httpx.AsyncClient object at 0x7f84011c7890>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZTTREWlJCQjJYNjhCWVpWSDhEMCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzUyfQ.yE-4zOVui0D4BTXmNOUmaOLyfZ1z_yTlaXTMcUKoAC0'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f8400b36e40>

    @pytest.mark.integration
    async def test_job_cleanup_functionality(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test job cleanup functionality."""
        # Get initial stats
>       initial_response = await client.get("/api/v1/jobs/stats/overview", headers=auth_headers)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_integration.py:226: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4083' coro=<TestJobsIntegration.test_job_cleanup_functionality() running at /home/yam/chatter/tests/test_jobs_integration.py:226> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZTTREWlJCQjJYNjhCWVpWSDhEMCIsImVtYWlsIjoidGVzdHVzZXJhZmRlZmJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWZkZWZiIiwianRpIjoiZmZiYzc4MzItMmJhMS00MDM5LTlhOWEtNDFiNTU4NWIzMjZkIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk1Miwic2Vzc2lvbl9pZCI6IjNjYzYwY2M0LWI2OWEtNDVhYy05ZDY3LWQwMzkxYzZmMjJkMSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzUyfQ.yE-4zOVui0D4BTXmNOUmaOLyfZ1z_yTlaXTMcUKoAC0
______________ TestJobsIntegration.test_concurrent_job_operations ______________

self = <tests.test_jobs_integration.TestJobsIntegration object at 0x7f84ca461be0>
client = <httpx.AsyncClient object at 0x7f840139d160>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZTkRLQ05OVzVNQzg4NkdBVEZUSCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzUzfQ.2m9iXvicnU3ohebEV52YcCfxKjtCQ7UI1afLn-fW17Q'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f8400d1f170>

    @pytest.mark.integration
    async def test_concurrent_job_operations(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test concurrent job operations."""
        # Create multiple jobs concurrently
        job_data_list = [
            {
                "name": f"Concurrent Job {i}",
                "function_name": "test_function",
                "args": [i],
                "kwargs": {"concurrent": True}
            }
            for i in range(5)
        ]
    
        # Create tasks for concurrent job creation
        create_tasks = [
            asyncio.create_task(client.post("/api/v1/jobs/", json=job_data, headers=auth_headers))
            for job_data in job_data_list
        ]
    
        # Wait for all creations
>       create_responses = await asyncio.gather(*create_tasks)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_integration.py:276: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4098' coro=<AsyncClient.post() running at /home/yam/.local/lib/python3.12/site-packages/httpx/_client.py:1859> cb=[gather.<locals>._done_callback() at /usr/lib64/python3.12/asyncio/tasks.py:767]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZTkRLQ05OVzVNQzg4NkdBVEZUSCIsImVtYWlsIjoidGVzdHVzZXJmZmJhZGRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmZiYWRkIiwianRpIjoiZmQ5MjQ2YWEtODdkZS00ODQ5LTg0YmMtNWU2NTlhNTc4NTY0IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk1Mywic2Vzc2lvbl9pZCI6IjU0MmM5OGRlLTNiMjMtNDQ4NS1iZjkzLWQxYTU2OTdmOTUxYiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzUzfQ.2m9iXvicnU3ohebEV52YcCfxKjtCQ7UI1afLn-fW17Q
________________ TestJobsIntegration.test_job_data_persistence _________________

self = <tests.test_jobs_integration.TestJobsIntegration object at 0x7f84ca461fa0>
client = <httpx.AsyncClient object at 0x7f840151d220>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZUFEyNTFQNTU3NzRXR1hLNERENiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzU1fQ.anyQZnFcaSZl-ah27CaLEqm7NXwPK2Z0LKaYoBC12XA'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f84ab5abc20>

    @pytest.mark.integration
    async def test_job_data_persistence(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test job data persistence and retrieval accuracy."""
        # Create job with complex data
        complex_job_data = {
            "name": "Complex Data Job",
            "function_name": "test_function",
            "args": [
                "string_arg",
                42,
                3.14,
                True,
                ["nested", "array"],
                {"nested": "object", "number": 123}
            ],
            "kwargs": {
                "string_param": "test_string",
                "number_param": 456,
                "float_param": 78.9,
                "boolean_param": False,
                "array_param": [1, 2, 3],
                "object_param": {
                    "nested_string": "nested_value",
                    "nested_number": 789
                }
            },
            "priority": "high"
        }
    
        # Create job
>       create_response = await client.post("/api/v1/jobs/", json=complex_job_data, headers=auth_headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_integration.py:336: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4116' coro=<TestJobsIntegration.test_job_data_persistence() running at /home/yam/chatter/tests/test_jobs_integration.py:336> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZUFEyNTFQNTU3NzRXR1hLNERENiIsImVtYWlsIjoidGVzdHVzZXJlYmNiYmZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWJjYmJmIiwianRpIjoiNmI0NjgxZTEtODNkYy00ZTljLWE2ODctZGI0MTQxZDc4YTg3IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk1NSwic2Vzc2lvbl9pZCI6IjQ0M2Q1Y2JiLTMyOWMtNDRmZC1hY2UwLTE5NTlhNTBkYjUwNyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzU1fQ.anyQZnFcaSZl-ah27CaLEqm7NXwPK2Z0LKaYoBC12XA
__________________ TestJobsUnit.test_create_job_requires_auth __________________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84018b3620>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84018b3620>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca462e40>
client = <httpx.AsyncClient object at 0x7f84018b20c0>

    @pytest.mark.unit
    async def test_create_job_requires_auth(self, client: AsyncClient):
        """Test that creating job requires authentication."""
        job_data = {
            "name": "Test Job",
            "function_name": "test_function",
            "args": [],
            "kwargs": {}
        }
    
>       response = await client.post("/api/v1/jobs/", json=job_data)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84018b3620>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:09:16.372758Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m7e5b9441-2062-4f42-a524-afb2be465bb1[0m [36mstatus_code[0m=[35m401[0m
__________________ TestJobsUnit.test_list_jobs_requires_auth ___________________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f8403085850>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f8403085850>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca463140>
client = <httpx.AsyncClient object at 0x7f84030859a0>

    @pytest.mark.unit
    async def test_list_jobs_requires_auth(self, client: AsyncClient):
        """Test that listing jobs requires authentication."""
>       response = await client.get("/api/v1/jobs/")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:29: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f8403085850>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:09:17.211017Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35mf666215f-0594-46a6-a88f-fdb6046d94d9[0m [36mstatus_code[0m=[35m401[0m
___________________ TestJobsUnit.test_get_job_requires_auth ____________________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840364b0b0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840364b0b0>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca463560>
client = <httpx.AsyncClient object at 0x7f840364a330>

    @pytest.mark.unit
    async def test_get_job_requires_auth(self, client: AsyncClient):
        """Test that getting specific job requires authentication."""
        job_id = "550e8400-e29b-41d4-a716-446655440000"
>       response = await client.get(f"/api/v1/jobs/{job_id}")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:36: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840364b0b0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:09:18.068082Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m39c2a0f2-02d9-423a-92de-272cdd5f9c42[0m [36mstatus_code[0m=[35m401[0m
__________________ TestJobsUnit.test_cancel_job_requires_auth __________________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84c8e83200>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84c8e83200>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca463920>
client = <httpx.AsyncClient object at 0x7f84c8e82ae0>

    @pytest.mark.unit
    async def test_cancel_job_requires_auth(self, client: AsyncClient):
        """Test that canceling job requires authentication."""
        job_id = "550e8400-e29b-41d4-a716-446655440000"
>       response = await client.post(f"/api/v1/jobs/{job_id}/cancel")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:43: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84c8e83200>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:09:18.925241Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m7846ccac-221d-413b-a5d8-b54d6a898758[0m [36mstatus_code[0m=[35m401[0m
________________ TestJobsUnit.test_get_job_stats_requires_auth _________________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840158ac00>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840158ac00>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca463ce0>
client = <httpx.AsyncClient object at 0x7f8401589d30>

    @pytest.mark.unit
    async def test_get_job_stats_requires_auth(self, client: AsyncClient):
        """Test that getting job stats requires authentication."""
>       response = await client.get("/api/v1/jobs/stats/overview")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:49: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f840158ac00>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:09:20.808134Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m02ef1704-86ba-4cd2-b457-499894442735[0m [36mstatus_code[0m=[35m401[0m
_________________ TestJobsUnit.test_cleanup_jobs_requires_auth _________________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84018b1460>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84018b1460>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca4800e0>
client = <httpx.AsyncClient object at 0x7f84018b00b0>

    @pytest.mark.unit
    async def test_cleanup_jobs_requires_auth(self, client: AsyncClient):
        """Test that cleanup jobs requires authentication."""
>       response = await client.post("/api/v1/jobs/cleanup")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f84018b1460>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:09:21.674900Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m01d1924b-d04e-4f0d-bd8a-fe776d09aee0[0m [36mstatus_code[0m=[35m401[0m
_____________________ TestJobsUnit.test_create_job_success _____________________

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca463e00>
mock_job_queue = <MagicMock name='job_queue' id='140204961074592'>
client = <httpx.AsyncClient object at 0x7f84c921b350>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZWTBGQ0QxUDdTN0g0MTFQS0pEMCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzYyfQ.ccyGaD4X5XyWg7zTlO6ZTENre8uDLj3RVz7IAj8isCE'}

    @pytest.mark.unit
    @patch('chatter.api.jobs.job_queue')
    async def test_create_job_success(self, mock_job_queue, client: AsyncClient, auth_headers: dict):
        """Test successful job creation."""
        # Mock job queue
        mock_job = MagicMock()
        mock_job.id = "job-123"
        mock_job.name = "Test Job"
        mock_job.function_name = "test_function"
        mock_job.status = JobStatus.PENDING
        mock_job.priority = JobPriority.NORMAL
        mock_job.created_at = "2024-01-01T12:00:00Z"
        mock_job.created_by = "testuser"
    
        mock_job_queue.has_handler.return_value = True
        mock_job_queue.submit.return_value = mock_job
    
        job_data = {
            "name": "Test Job",
            "function_name": "test_function",
            "args": ["arg1", "arg2"],
            "kwargs": {"key1": "value1"},
            "priority": "normal"
        }
    
>       response = await client.post("/api/v1/jobs/", json=job_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:83: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4208' coro=<TestJobsUnit.test_create_job_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZWTBGQ0QxUDdTN0g0MTFQS0pEMCIsImVtYWlsIjoidGVzdHVzZXJlYWZkZmNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWFmZGZjIiwianRpIjoiODRkNjgwMzQtMTdkNy00ZGFhLWFlMDAtZGI5NjBkMWVmOGI1IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk2Miwic2Vzc2lvbl9pZCI6Ijc4NDczM2E5LWQ3MTMtNDYwNi1iNzExLTg2YTI1NjM2MDhkZSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzYyfQ.ccyGaD4X5XyWg7zTlO6ZTENre8uDLj3RVz7IAj8isCE
________________ TestJobsUnit.test_create_job_invalid_function _________________

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca463a10>
mock_job_queue = <MagicMock name='job_queue' id='140207283394880'>
client = <httpx.AsyncClient object at 0x7f840320c080>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZWkEyWVZNRkZBMFlWMEI3UkRDUyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzY0fQ.O4a8PxNMcLqXODnTFeyR13_lMbnBY4ay_Oe1Y7h0Khw'}

    @pytest.mark.unit
    @patch('chatter.api.jobs.job_queue')
    async def test_create_job_invalid_function(self, mock_job_queue, client: AsyncClient, auth_headers: dict):
        """Test job creation with invalid function name."""
        mock_job_queue.has_handler.return_value = False
    
        job_data = {
            "name": "Test Job",
            "function_name": "nonexistent_function",
            "args": [],
            "kwargs": {}
        }
    
>       response = await client.post("/api/v1/jobs/", json=job_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:104: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4222' coro=<TestJobsUnit.test_create_job_invalid_function() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFZWkEyWVZNRkZBMFlWMEI3UkRDUyIsImVtYWlsIjoidGVzdHVzZXJiZGFhY2NAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmRhYWNjIiwianRpIjoiYTRhNjc1YTEtOGM3Yi00YWNjLTliOWUtOWExYTBhZTIyYmMwIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk2NCwic2Vzc2lvbl9pZCI6IjVmMWEwMjkxLTcyYmMtNDljOC1hZTU2LTQ0NTAzODMwMzMxYSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzY0fQ.O4a8PxNMcLqXODnTFeyR13_lMbnBY4ay_Oe1Y7h0Khw
__________________ TestJobsUnit.test_create_job_invalid_data ___________________

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca480860>
client = <httpx.AsyncClient object at 0x7f84c9560140>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaMEszRFEwOFc3UkRZVDk5UVQ0UyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzY1fQ.xTTFNMn8gkoYXhxw-0CIl0dsVp1pElfzl3sBDy4720U'}

    @pytest.mark.unit
    async def test_create_job_invalid_data(self, client: AsyncClient, auth_headers: dict):
        """Test job creation with invalid data."""
        # Missing required fields
        job_data = {
            "name": "Test Job"
            # Missing function_name
        }
    
>       response = await client.post("/api/v1/jobs/", json=job_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:116: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4236' coro=<TestJobsUnit.test_create_job_invalid_data() running at /home/yam/chatter/tests/test_jobs_unit.py:116> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaMEszRFEwOFc3UkRZVDk5UVQ0UyIsImVtYWlsIjoidGVzdHVzZXJmY2JiYWZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmNiYmFmIiwianRpIjoiNWM4ZDY1M2MtYjQ2OC00NTk2LWE5ZTctNDQ1MWMwMzVmYTJmIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk2NSwic2Vzc2lvbl9pZCI6IjE4MDU3Y2QyLTc5OGYtNDJiMC1hMTBiLTc3N2IwZTk5OTBiZCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzY1fQ.xTTFNMn8gkoYXhxw-0CIl0dsVp1pElfzl3sBDy4720U
_____________________ TestJobsUnit.test_list_jobs_success ______________________

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca480950>
mock_job_queue = <MagicMock name='job_queue' id='140204938430128'>
client = <httpx.AsyncClient object at 0x7f84c9010680>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaMVZDODJHRzVTRTlZN05SN0RNViIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzY2fQ.HUGqL1Oqtd50MKXrJ2gjmf9DYBWD_HvA3bEcIbYnjBA'}

    @pytest.mark.unit
    @patch('chatter.api.jobs.job_queue')
    async def test_list_jobs_success(self, mock_job_queue, client: AsyncClient, auth_headers: dict):
        """Test successful job listing."""
        mock_jobs = [
            {
                "id": "job-1",
                "name": "Job 1",
                "status": "completed",
                "created_at": "2024-01-01T12:00:00Z"
            },
            {
                "id": "job-2",
                "name": "Job 2",
                "status": "pending",
                "created_at": "2024-01-01T13:00:00Z"
            }
        ]
    
        mock_job_queue.list_jobs.return_value = {
            "jobs": mock_jobs,
            "total": 2,
            "page": 1,
            "per_page": 10
        }
    
>       response = await client.get("/api/v1/jobs/", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:145: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4250' coro=<TestJobsUnit.test_list_jobs_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaMVZDODJHRzVTRTlZN05SN0RNViIsImVtYWlsIjoidGVzdHVzZXJkYWNhYmFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGFjYWJhIiwianRpIjoiYWZlMjBjZDYtZmQ1NS00MDdmLTg5ZmYtOWFmYTU3Yjc4OWJkIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk2Niwic2Vzc2lvbl9pZCI6IjYwNzZhNTFkLTZiMDAtNGFiYy05MjZlLWU3NGIzNDc3ZTBlNCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzY2fQ.HUGqL1Oqtd50MKXrJ2gjmf9DYBWD_HvA3bEcIbYnjBA
___________________ TestJobsUnit.test_list_jobs_with_filters ___________________

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca480d10>
mock_job_queue = <MagicMock name='job_queue' id='140207073454528'>
client = <httpx.AsyncClient object at 0x7f8480cee180>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaMzRCWU41QUI2R0pHRlFWMUtBUSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzY3fQ.4MmZvWMbyyG_zewrGn-BAkiYyDyAbY4gvznj2qWiskA'}

    @pytest.mark.unit
    @patch('chatter.api.jobs.job_queue')
    async def test_list_jobs_with_filters(self, mock_job_queue, client: AsyncClient, auth_headers: dict):
        """Test job listing with filters."""
        mock_job_queue.list_jobs.return_value = {
            "jobs": [],
            "total": 0,
            "page": 1,
            "per_page": 10
        }
    
        # Test with status filter
>       response = await client.get("/api/v1/jobs/?status=completed", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:164: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4264' coro=<TestJobsUnit.test_list_jobs_with_filters() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaMzRCWU41QUI2R0pHRlFWMUtBUSIsImVtYWlsIjoidGVzdHVzZXJjZWZiZmFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2VmYmZhIiwianRpIjoiYjE3NzA4M2QtNGIyNi00NmIxLWFhYTUtNjgwMjYzZTU3NGQwIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk2Nywic2Vzc2lvbl9pZCI6ImE1YTliODMwLTRiY2UtNGIyZS05NTA0LTRjN2ZhODUyMTFhMSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzY3fQ.4MmZvWMbyyG_zewrGn-BAkiYyDyAbY4gvznj2qWiskA
______________________ TestJobsUnit.test_get_job_success _______________________

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca4810d0>
mock_job_queue = <MagicMock name='job_queue' id='140204964817056'>
client = <httpx.AsyncClient object at 0x7f84031f9550>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaNEU5WkFWOTBOMktYNU5WQ0pCRSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzY5fQ.k4_aaGh31WwA2DXWVkLT9RuggGlZZqRgwCAicxcS2t4'}

    @pytest.mark.unit
    @patch('chatter.api.jobs.job_queue')
    async def test_get_job_success(self, mock_job_queue, client: AsyncClient, auth_headers: dict):
        """Test successful job retrieval."""
        job_id = "550e8400-e29b-41d4-a716-446655440000"
    
        mock_job = {
            "id": job_id,
            "name": "Test Job",
            "status": "completed",
            "result": "Job completed successfully",
            "created_at": "2024-01-01T12:00:00Z",
            "completed_at": "2024-01-01T12:05:00Z"
        }
    
        mock_job_queue.get_job.return_value = mock_job
    
>       response = await client.get(f"/api/v1/jobs/{job_id}", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:189: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4278' coro=<TestJobsUnit.test_get_job_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaNEU5WkFWOTBOMktYNU5WQ0pCRSIsImVtYWlsIjoidGVzdHVzZXJlZmRhZGNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWZkYWRjIiwianRpIjoiZjk3ZmJkZmYtYzMwOS00ZWIyLTg4MDctNjVjYjg4ZTIwNDk5IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk2OSwic2Vzc2lvbl9pZCI6IjE4MDA0NTMwLWVlYmMtNDBlYy1iYzcxLTBiYTBlN2UyMmE2ZSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzY5fQ.k4_aaGh31WwA2DXWVkLT9RuggGlZZqRgwCAicxcS2t4
_____________________ TestJobsUnit.test_get_job_not_found ______________________

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca481490>
mock_job_queue = <MagicMock name='job_queue' id='140208282773376'>
client = <httpx.AsyncClient object at 0x7f84c8e39460>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaNVBQWFc4OUYxVDdWVzZHUEZCNCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzcwfQ.ldEuHgLzMDNPdbb8QsCeLpRMLhEWagVmsH9UO0aLx24'}

    @pytest.mark.unit
    @patch('chatter.api.jobs.job_queue')
    async def test_get_job_not_found(self, mock_job_queue, client: AsyncClient, auth_headers: dict):
        """Test job retrieval for non-existent job."""
        job_id = "550e8400-e29b-41d4-a716-446655440000"
        mock_job_queue.get_job.return_value = None
    
>       response = await client.get(f"/api/v1/jobs/{job_id}", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:204: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4292' coro=<TestJobsUnit.test_get_job_not_found() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaNVBQWFc4OUYxVDdWVzZHUEZCNCIsImVtYWlsIjoidGVzdHVzZXJlZGNjZmJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWRjY2ZiIiwianRpIjoiNzA2MzBlODUtZTljYi00NTQ5LThkMjAtZWI4NGIwZjM3ZWVhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk3MCwic2Vzc2lvbl9pZCI6ImYzY2M3YzM0LTc2NzEtNDIzZC04ZDFmLTc3ZmJhNzQ3ZjgxYiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzcwfQ.ldEuHgLzMDNPdbb8QsCeLpRMLhEWagVmsH9UO0aLx24
_________________ TestJobsUnit.test_get_job_invalid_id_format __________________

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca481850>
client = <httpx.AsyncClient object at 0x7f83ecec1040>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaODRYOUFaSlJBWENISEVTVEJEOCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzczfQ.JbAP2M9Stih22k5oVe2ZBDtsmmx_rNMU5jiHen3VTVA'}

    @pytest.mark.unit
    async def test_get_job_invalid_id_format(self, client: AsyncClient, auth_headers: dict):
        """Test job retrieval with invalid job ID format."""
        invalid_job_id = "not-a-uuid"
    
>       response = await client.get(f"/api/v1/jobs/{invalid_job_id}", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:212: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4306' coro=<TestJobsUnit.test_get_job_invalid_id_format() running at /home/yam/chatter/tests/test_jobs_unit.py:212> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaODRYOUFaSlJBWENISEVTVEJEOCIsImVtYWlsIjoidGVzdHVzZXJjZWViZWFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2VlYmVhIiwianRpIjoiMmJjNjUyNmEtMDJhYi00ZmNkLTg4ZGMtMjg4OTZiM2E1NDI4IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk3Mywic2Vzc2lvbl9pZCI6IjBkZTdmMjNlLTk4NDQtNGI3YS04OGZlLWVkMmJhMTZhMjA5MyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzczfQ.JbAP2M9Stih22k5oVe2ZBDtsmmx_rNMU5jiHen3VTVA
_____________________ TestJobsUnit.test_cancel_job_success _____________________

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca481c10>
mock_job_queue = <MagicMock name='job_queue' id='140204939541296'>
client = <httpx.AsyncClient object at 0x7f84019dde80>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaOUVFOFMwQ0ZCTjMyQzRGOVlHQSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Nzc0fQ.cWZeUu9wERZdYjKfNDlgxKQY8VJG1srgGMRnGUR8mmc'}

    @pytest.mark.unit
    @patch('chatter.api.jobs.job_queue')
    async def test_cancel_job_success(self, mock_job_queue, client: AsyncClient, auth_headers: dict):
        """Test successful job cancellation."""
        job_id = "550e8400-e29b-41d4-a716-446655440000"
    
        mock_job_queue.cancel_job.return_value = True
    
>       response = await client.post(f"/api/v1/jobs/{job_id}/cancel", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:223: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4320' coro=<TestJobsUnit.test_cancel_job_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaOUVFOFMwQ0ZCTjMyQzRGOVlHQSIsImVtYWlsIjoidGVzdHVzZXJmYWRkZGFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmFkZGRhIiwianRpIjoiNDhjNjE4ZTQtYmEzYS00NDRiLWE4NTYtNzY2YTVkN2VmMTViIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk3NCwic2Vzc2lvbl9pZCI6IjAzZWNiNThiLTc2OWEtNDYzOS1iNTk4LTg5MDQwODI4NTIyZiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Nzc0fQ.cWZeUu9wERZdYjKfNDlgxKQY8VJG1srgGMRnGUR8mmc
____________________ TestJobsUnit.test_cancel_job_not_found ____________________

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca481fd0>
mock_job_queue = <MagicMock name='job_queue' id='140208282562496'>
client = <httpx.AsyncClient object at 0x7f84c8e06cc0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaQVFCUk5CUUIzODBNRVBIVjdZVyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Nzc1fQ.Y3hp4553KANErNjwYbD7O295GuqUiiPYfqGTvyHIj6k'}

    @pytest.mark.unit
    @patch('chatter.api.jobs.job_queue')
    async def test_cancel_job_not_found(self, mock_job_queue, client: AsyncClient, auth_headers: dict):
        """Test cancellation of non-existent job."""
        job_id = "550e8400-e29b-41d4-a716-446655440000"
        mock_job_queue.cancel_job.return_value = False
    
>       response = await client.post(f"/api/v1/jobs/{job_id}/cancel", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:238: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4334' coro=<TestJobsUnit.test_cancel_job_not_found() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaQVFCUk5CUUIzODBNRVBIVjdZVyIsImVtYWlsIjoidGVzdHVzZXJhYWVmZGNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWFlZmRjIiwianRpIjoiZjdjMDU2ZjQtYmVlMy00NTU1LWEzODAtMzlmZTY0MWNhNGI0IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk3NSwic2Vzc2lvbl9pZCI6ImFhMjcxYzk3LTc3MGMtNDVjOC1hNWJlLTk1YTljNjAwOTU4ZiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Nzc1fQ.Y3hp4553KANErNjwYbD7O295GuqUiiPYfqGTvyHIj6k
________________ TestJobsUnit.test_cancel_job_invalid_id_format ________________

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca482390>
client = <httpx.AsyncClient object at 0x7f840f3c86e0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaQlpUMlozQUQzUUY5VkMwTjY5MiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Nzc3fQ.i07TFJBrMCiAiBAjoTcbhdquUMMh-ZMOmi7rC1LEarM'}

    @pytest.mark.unit
    async def test_cancel_job_invalid_id_format(self, client: AsyncClient, auth_headers: dict):
        """Test job cancellation with invalid job ID format."""
        invalid_job_id = "not-a-uuid"
    
>       response = await client.post(f"/api/v1/jobs/{invalid_job_id}/cancel", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:246: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4348' coro=<TestJobsUnit.test_cancel_job_invalid_id_format() running at /home/yam/chatter/tests/test_jobs_unit.py:246> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaQlpUMlozQUQzUUY5VkMwTjY5MiIsImVtYWlsIjoidGVzdHVzZXJmZmViYmFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmZlYmJhIiwianRpIjoiMTE3NTdjOTAtZWJkZi00MjNmLWExNjctOWI2ZmI5MmJjMzgxIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk3Nywic2Vzc2lvbl9pZCI6IjExMGQ3NGU5LWZkNDgtNGYzMC05MTU5LTg5MjA3MTMzMTAxNCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Nzc3fQ.i07TFJBrMCiAiBAjoTcbhdquUMMh-ZMOmi7rC1LEarM
___________________ TestJobsUnit.test_get_job_stats_success ____________________

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca482750>
mock_job_queue = <MagicMock name='job_queue' id='140204579946224'>
client = <httpx.AsyncClient object at 0x7f83ec2eec00>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaRDdDMTFGNktYRVQ3MDNOUkMyVyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Nzc4fQ.vvkkbZ-Ypla0638jaZm21KM4VlrBn8N4Y8q3NIkb_gE'}

    @pytest.mark.unit
    @patch('chatter.api.jobs.job_queue')
    async def test_get_job_stats_success(self, mock_job_queue, client: AsyncClient, auth_headers: dict):
        """Test successful job stats retrieval."""
        mock_stats = {
            "total_jobs": 100,
            "pending_jobs": 5,
            "running_jobs": 3,
            "completed_jobs": 85,
            "failed_jobs": 7,
            "cancelled_jobs": 0,
            "queue_size": 8,
            "worker_count": 4,
            "average_processing_time": 45.5
        }
    
        mock_job_queue.get_stats.return_value = mock_stats
    
>       response = await client.get("/api/v1/jobs/stats/overview", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:267: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4362' coro=<TestJobsUnit.test_get_job_stats_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaRDdDMTFGNktYRVQ3MDNOUkMyVyIsImVtYWlsIjoidGVzdHVzZXJlYmFmZmJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWJhZmZiIiwianRpIjoiZWRmODEyNTgtZTIwZi00ZTZiLWE3NGYtNGNmZTU0OGRjZGU1IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk3OCwic2Vzc2lvbl9pZCI6ImNhMmI1ODBmLTY0ZDEtNGYzNS04ZDZiLTBjOWM1MDViNzk3YiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Nzc4fQ.vvkkbZ-Ypla0638jaZm21KM4VlrBn8N4Y8q3NIkb_gE
____________________ TestJobsUnit.test_cleanup_jobs_success ____________________

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca482b10>
mock_job_queue = <MagicMock name='job_queue' id='140204593774032'>
client = <httpx.AsyncClient object at 0x7f83ed01e8d0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaRUdKNUVNRTJSVzlNMlBDUDZBOSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Nzc5fQ.KyY_rHLB6QPaP7HbPnHE2uWpc814zb733zGgZvblO1s'}

    @pytest.mark.unit
    @patch('chatter.api.jobs.job_queue')
    async def test_cleanup_jobs_success(self, mock_job_queue, client: AsyncClient, auth_headers: dict):
        """Test successful job cleanup."""
        mock_job_queue.cleanup_completed_jobs.return_value = {
            "cleaned_count": 25,
            "remaining_count": 75
        }
    
>       response = await client.post("/api/v1/jobs/cleanup", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:285: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4376' coro=<TestJobsUnit.test_cleanup_jobs_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaRUdKNUVNRTJSVzlNMlBDUDZBOSIsImVtYWlsIjoidGVzdHVzZXJjZGNkYmFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2RjZGJhIiwianRpIjoiZWVmZjIzYzMtMmU3ZC00MmNkLWJiYzUtYTVlYzM1NTlkZmY3IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk3OSwic2Vzc2lvbl9pZCI6IjA1MGQ5ZThiLTgzMzItNDE0NC05ZjhmLTU4ZjkzZWUzOGI5NSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0Nzc5fQ.KyY_rHLB6QPaP7HbPnHE2uWpc814zb733zGgZvblO1s
__________________ TestJobsUnit.test_job_queue_error_handling __________________

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca482ed0>
mock_job_queue = <MagicMock name='job_queue' id='140205122304384'>
client = <httpx.AsyncClient object at 0x7f840c82a5a0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaRlc4N1QyMllNSzA5N1gzN0YzNCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzgxfQ.4y3yQTCoOX1zEOu1vaclNgJUdTmWyeNuzQ54UgyVV3k'}

    @pytest.mark.unit
    @patch('chatter.api.jobs.job_queue')
    async def test_job_queue_error_handling(self, mock_job_queue, client: AsyncClient, auth_headers: dict):
        """Test job queue error handling."""
        mock_job_queue.submit.side_effect = Exception("Job queue error")
    
        job_data = {
            "name": "Test Job",
            "function_name": "test_function",
            "args": [],
            "kwargs": {}
        }
    
>       response = await client.post("/api/v1/jobs/", json=job_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:305: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4390' coro=<TestJobsUnit.test_job_queue_error_handling() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaRlc4N1QyMllNSzA5N1gzN0YzNCIsImVtYWlsIjoidGVzdHVzZXJiZGVlY2ZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmRlZWNmIiwianRpIjoiZTQ0NjNhMzgtYzk4Zi00OTM3LTk5NjEtZWExOWRmZTUwZTFkIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk4MSwic2Vzc2lvbl9pZCI6IjQ2ZTU2YTMxLWRmMjMtNDI3My1hNWRmLWJjZTZiOTJiMjRjYiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzgxfQ.4y3yQTCoOX1zEOu1vaclNgJUdTmWyeNuzQ54UgyVV3k
____________________ TestJobsUnit.test_list_jobs_pagination ____________________

self = <tests.test_jobs_unit.TestJobsUnit object at 0x7f84ca4630b0>
mock_job_queue = <MagicMock name='job_queue' id='140204609386736'>
client = <httpx.AsyncClient object at 0x7f83edf025a0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaSEE2U0JGQzVNOEZHMEQ5V0pITSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzgyfQ.EtVHaQ47k1zN8BTNWCR_mw7iRiUKTaLhXkGkRFqFeHI'}

    @pytest.mark.unit
    @patch('chatter.api.jobs.job_queue')
    async def test_list_jobs_pagination(self, mock_job_queue, client: AsyncClient, auth_headers: dict):
        """Test job listing pagination."""
        mock_job_queue.list_jobs.return_value = {
            "jobs": [],
            "total": 50,
            "page": 2,
            "per_page": 20
        }
    
>       response = await client.get("/api/v1/jobs/?page=2&per_page=20", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_jobs_unit.py:319: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-4404' coro=<TestJobsUnit.test_list_jobs_pagination() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFaSEE2U0JGQzVNOEZHMEQ5V0pITSIsImVtYWlsIjoidGVzdHVzZXJhZGNkYWRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWRjZGFkIiwianRpIjoiNDc5MjRkZDQtZTNmMC00MDlmLWIyYmYtMDgxODc2MjhlN2U2IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjk4Miwic2Vzc2lvbl9pZCI6IjEwOWU1NmZjLTMwNjQtNGZhZi1iMWNiLTA0ZWRiNWQ1MWI5NSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NzgyfQ.EtVHaQ47k1zN8BTNWCR_mw7iRiUKTaLhXkGkRFqFeHI
__________________ TestMCPToolService.test_add_server_success __________________

self = <tests.test_mcp_service.TestMCPToolService object at 0x7f84ca4a1f40>

    @pytest.mark.asyncio
    async def test_add_server_success(self):
        """Test successfully adding a server."""
        server_config = RemoteMCPServer(
            name="test_server",
            base_url=HttpUrl("https://mcp.example.com"),
            transport_type="http"
        )
    
        with patch.object(self.service, '_convert_server_to_connection') as mock_convert:
            with patch.object(self.service, '_update_client') as mock_update:
                mock_convert.return_value = MagicMock(spec=Connection)
    
>               result = await self.service.add_server(server_config)
                               ^^^^^^^^^^^^^^^^^^^^^^^
E               AttributeError: 'MCPToolService' object has no attribute 'add_server'

tests/test_mcp_service.py:255: AttributeError
_____________ TestMCPToolService.test_add_server_disabled_service ______________

self = <tests.test_mcp_service.TestMCPToolService object at 0x7f84ca4a21e0>

    @pytest.mark.asyncio
    async def test_add_server_disabled_service(self):
        """Test adding server when service is disabled."""
        self.service.enabled = False
    
        server_config = RemoteMCPServer(
            name="test_server",
            base_url=HttpUrl("https://mcp.example.com"),
            transport_type="http"
        )
    
>       result = await self.service.add_server(server_config)
                       ^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'MCPToolService' object has no attribute 'add_server'

tests/test_mcp_service.py:275: AttributeError
_____________ TestMCPToolService.test_add_server_validation_error ______________

self = <tests.test_mcp_service.TestMCPToolService object at 0x7f84ca4a2480>

    @pytest.mark.asyncio
    async def test_add_server_validation_error(self):
        """Test adding server with invalid configuration."""
        server_config = RemoteMCPServer(
            name="",  # Invalid: empty name
            base_url=HttpUrl("https://mcp.example.com"),
            transport_type="http"
        )
    
>       result = await self.service.add_server(server_config)
                       ^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'MCPToolService' object has no attribute 'add_server'

tests/test_mcp_service.py:289: AttributeError
__________________ TestMCPToolService.test_call_tool_success ___________________

self = <tests.test_mcp_service.TestMCPToolService object at 0x7f84ca4a2630>

    @pytest.mark.asyncio
    async def test_call_tool_success(self):
        """Test successfully calling a tool."""
        # Add server and cached tools
        self.service.servers["test_server"] = MagicMock()
        mock_tool = MagicMock(spec=BaseTool)
        mock_tool.name = "test_tool"
        self.service.tools_cache["test_server"] = [mock_tool]
    
        mock_client = MagicMock()
        mock_client.call_tool = AsyncMock(return_value={"result": "success"})
    
        with patch.object(self.service, '_get_client', return_value=mock_client):
            result = await self.service.call_tool(
                "test_tool",
                {"param": "value"}
            )
    
>       assert result == {"result": "success"}
E       AssertionError: assert {'error': 'To...': False, ...} == {'result': 'success'}
E         
E         Left contains 5 more items:
E         {'error': 'Tool not found: test_tool',
E          'response_time_ms': 0.4012584686279297,
E          'server': 'unknown',
E          'success': False,
E          'tool': 'test_tool'}...
E         
E         ...Full output truncated (12 lines hidden), use '-vv' to show

tests/test_mcp_service.py:451: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    chatter.services.mcp:mcp.py:356 [2m2025-09-05T20:09:43.049119Z[0m [[31m[1merror    [0m] [1mFailed to get tools from MCP servers[0m [[34m[1mchatter.services.mcp[0m] [36merror[0m=[35mobject MagicMock can't be used in 'await' expression[0m
ERROR    chatter.services.mcp:mcp.py:492 [2m2025-09-05T20:09:43.049228Z[0m [[31m[1merror    [0m] [1mMCP tool call failed          [0m [[34m[1mchatter.services.mcp[0m] [36merror[0m=[35mTool not found: test_tool[0m [36mserver[0m=[35mNone[0m [36mtool[0m=[35mtest_tool[0m
______________ TestMCPToolService.test_call_tool_disabled_service ______________

self = <tests.test_mcp_service.TestMCPToolService object at 0x7f84ca4a1f70>

    @pytest.mark.asyncio
    async def test_call_tool_disabled_service(self):
        """Test calling tool when service is disabled."""
        self.service.enabled = False
    
        result = await self.service.call_tool("test_tool", {})
    
>       assert result is None
E       AssertionError: assert {'error': 'Tool not found: test_tool', 'response_time_ms': 0.0171661376953125, 'server': 'unknown', 'success': False, ...} is None

tests/test_mcp_service.py:464: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    chatter.services.mcp:mcp.py:492 [2m2025-09-05T20:09:43.062656Z[0m [[31m[1merror    [0m] [1mMCP tool call failed          [0m [[34m[1mchatter.services.mcp[0m] [36merror[0m=[35mTool not found: test_tool[0m [36mserver[0m=[35mNone[0m [36mtool[0m=[35mtest_tool[0m
_____________________ TestMCPToolService.test_list_servers _____________________

self = <tests.test_mcp_service.TestMCPToolService object at 0x7f84ca4a1a60>

    @pytest.mark.asyncio
    async def test_list_servers(self):
        """Test listing servers."""
        server1 = RemoteMCPServer(
            name="server1",
            base_url=HttpUrl("https://mcp1.example.com"),
            transport_type="http"
        )
        server2 = RemoteMCPServer(
            name="server2",
            base_url=HttpUrl("https://mcp2.example.com"),
            transport_type="sse",
            enabled=False
        )
    
        self.service.servers["server1"] = server1
        self.service.servers["server2"] = server2
    
>       servers = self.service.list_servers()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'MCPToolService' object has no attribute 'list_servers'

tests/test_mcp_service.py:484: AttributeError
___________________ TestMCPToolService.test_get_server_info ____________________

self = <tests.test_mcp_service.TestMCPToolService object at 0x7f84ca4a0950>

    @pytest.mark.asyncio
    async def test_get_server_info(self):
        """Test getting server information."""
        server_config = RemoteMCPServer(
            name="test_server",
            base_url=HttpUrl("https://mcp.example.com"),
            transport_type="http",
            timeout=60
        )
        self.service.servers["test_server"] = server_config
        self.service.tools_cache["test_server"] = [MagicMock(), MagicMock()]
    
>       info = await self.service.get_server_info("test_server")
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'MCPToolService' object has no attribute 'get_server_info'

tests/test_mcp_service.py:504: AttributeError
_____________ TestMCPToolService.test_get_server_info_nonexistent ______________

self = <tests.test_mcp_service.TestMCPToolService object at 0x7f84ca4a39e0>

    @pytest.mark.asyncio
    async def test_get_server_info_nonexistent(self):
        """Test getting info for nonexistent server."""
>       info = await self.service.get_server_info("nonexistent")
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'MCPToolService' object has no attribute 'get_server_info'

tests/test_mcp_service.py:520: AttributeError
_______________ TestMCPServiceIntegration.test_server_lifecycle ________________

self = <tests.test_mcp_service.TestMCPServiceIntegration object at 0x7f84ca4c4410>

    @pytest.mark.asyncio
    async def test_server_lifecycle(self):
        """Test complete server lifecycle: add, discover, call, remove."""
        server_config = RemoteMCPServer(
            name="test_server",
            base_url=HttpUrl("https://mcp.example.com"),
            transport_type="http"
        )
    
        # Mock the MCP client interactions
        mock_tool = StructuredTool.from_function(
            func=lambda x: f"Result: {x}",
            name="test_tool",
            description="Test tool"
        )
    
        mock_client = MagicMock()
        mock_client.get_tools = AsyncMock(return_value=[mock_tool])
        mock_client.call_tool = AsyncMock(return_value={"result": "success"})
    
        with patch.object(self.service, '_get_client', return_value=mock_client):
            with patch.object(self.service, '_convert_server_to_connection') as mock_convert:
                with patch.object(self.service, '_update_client'):
                    mock_convert.return_value = MagicMock(spec=Connection)
    
                    # Add server
>                   assert await self.service.add_server(server_config) is True
                                 ^^^^^^^^^^^^^^^^^^^^^^^
E                   AttributeError: 'MCPToolService' object has no attribute 'add_server'

tests/test_mcp_service.py:585: AttributeError
__________ TestMCPServiceIntegration.test_multiple_servers_management __________

self = <tests.test_mcp_service.TestMCPServiceIntegration object at 0x7f84ca4c4590>

    @pytest.mark.asyncio
    async def test_multiple_servers_management(self):
        """Test managing multiple MCP servers."""
        server1 = RemoteMCPServer(
            name="server1",
            base_url=HttpUrl("https://mcp1.example.com"),
            transport_type="http"
        )
        server2 = RemoteMCPServer(
            name="server2",
            base_url=HttpUrl("https://mcp2.example.com"),
            transport_type="sse"
        )
    
        with patch.object(self.service, '_convert_server_to_connection') as mock_convert:
            with patch.object(self.service, '_update_client'):
                mock_convert.return_value = MagicMock(spec=Connection)
    
                # Add both servers
>               assert await self.service.add_server(server1) is True
                             ^^^^^^^^^^^^^^^^^^^^^^^
E               AttributeError: 'MCPToolService' object has no attribute 'add_server'

tests/test_mcp_service.py:625: AttributeError
___________ TestMCPServiceIntegration.test_error_recovery_scenarios ____________

self = <tests.test_mcp_service.TestMCPServiceIntegration object at 0x7f84ca4c4830>

    @pytest.mark.asyncio
    async def test_error_recovery_scenarios(self):
        """Test error recovery and circuit breaker functionality."""
        server_config = RemoteMCPServer(
            name="unreliable_server",
            base_url=HttpUrl("https://unreliable.example.com"),
            transport_type="http"
        )
    
        with patch.object(self.service, '_convert_server_to_connection'):
            with patch.object(self.service, '_update_client'):
                # Add server successfully
>               assert await self.service.add_server(server_config) is True
                             ^^^^^^^^^^^^^^^^^^^^^^^
E               AttributeError: 'MCPToolService' object has no attribute 'add_server'

tests/test_mcp_service.py:654: AttributeError
_____ TestSecurityHeadersMiddleware.test_strict_transport_security_enabled _____

self = <tests.test_middleware.TestSecurityHeadersMiddleware object at 0x7f84ca4f48f0>

    def test_strict_transport_security_enabled(self):
        """Test HSTS header when enabled."""
        app = FastAPI()
    
        @app.get("/test")
        async def test_endpoint():
            return {"message": "test"}
    
        app.add_middleware(SecurityHeadersMiddleware, strict_transport_security=True)
        client = TestClient(app)
    
        response = client.get("/test")
    
>       assert "Strict-Transport-Security" in response.headers
E       assert 'Strict-Transport-Security' in Headers({'content-length': '18', 'content-type': 'application/json', 'content-security-policy': "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:; frame-ancestors 'none'", 'x-frame-options': 'DENY', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'referrer-policy': 'strict-origin-when-cross-origin', 'permissions-policy': 'camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=(), ambient-light-sensor=()', 'x-permitted-cross-domain-policies': 'none', 'cross-origin-embedder-policy': 'require-corp', 'cross-origin-opener-policy': 'same-origin', 'cross-origin-resource-policy': 'same-origin'})
E        +  where Headers({'content-length': '18', 'content-type': 'application/json', 'content-security-policy': "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:; frame-ancestors 'none'", 'x-frame-options': 'DENY', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'referrer-policy': 'strict-origin-when-cross-origin', 'permissions-policy': 'camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=(), ambient-light-sensor=()', 'x-permitted-cross-domain-policies': 'none', 'cross-origin-embedder-policy': 'require-corp', 'cross-origin-opener-policy': 'same-origin', 'cross-origin-resource-policy': 'same-origin'}) = <Response [200 OK]>.headers

tests/test_middleware.py:112: AssertionError
__ TestSecurityHeadersMiddleware.test_security_headers_dont_override_existing __

self = <tests.test_middleware.TestSecurityHeadersMiddleware object at 0x7f84ca4f4f20>

    def test_security_headers_dont_override_existing(self):
        """Test that security headers don't override existing ones."""
        app = FastAPI()
    
        @app.get("/test")
        async def test_endpoint():
            response = JSONResponse(content={"message": "test"})
            response.headers["X-Frame-Options"] = "SAMEORIGIN"
            return response
    
        app.add_middleware(SecurityHeadersMiddleware)
        client = TestClient(app)
    
        response = client.get("/test")
    
        # Should preserve the original header value
>       assert response.headers["X-Frame-Options"] == "SAMEORIGIN"
E       AssertionError: assert 'DENY' == 'SAMEORIGIN'
E         
E         - SAMEORIGIN
E         + DENY

tests/test_middleware.py:179: AssertionError
________ TestAuthRateLimitMiddleware.test_login_endpoint_rate_limiting _________

self = <tests.test_middleware.TestAuthRateLimitMiddleware object at 0x7f84ca4f5430>
mock_get_limiter = <MagicMock name='get_unified_rate_limiter' id='140204609436656'>

    @patch('chatter.middleware.auth_security.get_unified_rate_limiter')
    async def test_login_endpoint_rate_limiting(self, mock_get_limiter):
        """Test rate limiting on login endpoint."""
        mock_limiter = MagicMock()
        mock_limiter.is_allowed = AsyncMock(return_value=(False, {"retry_after": 60}))
        mock_get_limiter.return_value = mock_limiter
    
        self.app.add_middleware(AuthRateLimitMiddleware)
        client = TestClient(self.app)
    
        response = client.post("/auth/login")
    
>       assert response.status_code == status.HTTP_429_TOO_MANY_REQUESTS
E       assert 200 == 429
E        +  where 200 = <Response [200 OK]>.status_code
E        +  and   429 = status.HTTP_429_TOO_MANY_REQUESTS

tests/test_middleware.py:261: AssertionError
_______ TestAuthRateLimitMiddleware.test_register_endpoint_rate_limiting _______

self = <tests.test_middleware.TestAuthRateLimitMiddleware object at 0x7f84ca4f5700>
mock_get_limiter = <MagicMock name='get_unified_rate_limiter' id='140205116335616'>

    @patch('chatter.middleware.auth_security.get_unified_rate_limiter')
    async def test_register_endpoint_rate_limiting(self, mock_get_limiter):
        """Test rate limiting on register endpoint."""
        mock_limiter = MagicMock()
        mock_limiter.is_allowed = AsyncMock(return_value=(False, {"retry_after": 120}))
        mock_get_limiter.return_value = mock_limiter
    
        self.app.add_middleware(AuthRateLimitMiddleware)
        client = TestClient(self.app)
    
        response = client.post("/auth/register")
    
>       assert response.status_code == status.HTTP_429_TOO_MANY_REQUESTS
E       assert 200 == 429
E        +  where 200 = <Response [200 OK]>.status_code
E        +  and   429 = status.HTTP_429_TOO_MANY_REQUESTS

tests/test_middleware.py:276: AssertionError
____ TestAuthRateLimitMiddleware.test_password_reset_endpoint_rate_limiting ____

self = <tests.test_middleware.TestAuthRateLimitMiddleware object at 0x7f84ca4f59d0>
mock_get_limiter = <MagicMock name='get_unified_rate_limiter' id='140205116153472'>

    @patch('chatter.middleware.auth_security.get_unified_rate_limiter')
    async def test_password_reset_endpoint_rate_limiting(self, mock_get_limiter):
        """Test rate limiting on password reset endpoint."""
        mock_limiter = MagicMock()
        mock_limiter.is_allowed = AsyncMock(return_value=(False, {"retry_after": 300}))
        mock_get_limiter.return_value = mock_limiter
    
        self.app.add_middleware(AuthRateLimitMiddleware)
        client = TestClient(self.app)
    
        response = client.post("/auth/password-reset")
    
>       assert response.status_code == status.HTTP_429_TOO_MANY_REQUESTS
E       assert 200 == 429
E        +  where 200 = <Response [200 OK]>.status_code
E        +  and   429 = status.HTTP_429_TOO_MANY_REQUESTS

tests/test_middleware.py:292: AssertionError
__________ TestAuthRateLimitMiddleware.test_client_ip_identification ___________

self = <AsyncMock name='get_unified_rate_limiter().is_allowed' id='140205116576432'>

    def assert_called_once(self):
        """assert that the mock was called only once.
        """
        if not self.call_count == 1:
            msg = ("Expected '%s' to have been called once. Called %s times.%s"
                   % (self._mock_name or 'mock',
                      self.call_count,
                      self._calls_repr()))
>           raise AssertionError(msg)
E           AssertionError: Expected 'is_allowed' to have been called once. Called 0 times.

/usr/lib64/python3.12/unittest/mock.py:928: AssertionError

During handling of the above exception, another exception occurred:

self = <tests.test_middleware.TestAuthRateLimitMiddleware object at 0x7f84ca4f6090>
mock_get_limiter = <MagicMock name='get_unified_rate_limiter' id='140205116432144'>

    @patch('chatter.middleware.auth_security.get_unified_rate_limiter')
    async def test_client_ip_identification(self, mock_get_limiter):
        """Test client IP identification for rate limiting."""
        mock_limiter = MagicMock()
        mock_limiter.is_allowed = AsyncMock(return_value=(True, {}))
        mock_get_limiter.return_value = mock_limiter
    
        self.app.add_middleware(AuthRateLimitMiddleware)
        client = TestClient(self.app)
    
        # Test with X-Forwarded-For header
        response = client.post(
            "/auth/login",
            headers={"X-Forwarded-For": "192.168.1.100, 10.0.0.1"}
        )
    
        assert response.status_code == 200
        # Verify that rate limiter was called with client IP
>       mock_limiter.is_allowed.assert_called_once()
E       AssertionError: Expected 'is_allowed' to have been called once. Called 0 times.

tests/test_middleware.py:342: AssertionError
_____ TestAuthRateLimitMiddleware.test_rate_limit_with_user_agent_tracking _____

self = <AsyncMock name='get_unified_rate_limiter().is_allowed' id='140205116319088'>

    def assert_called_once(self):
        """assert that the mock was called only once.
        """
        if not self.call_count == 1:
            msg = ("Expected '%s' to have been called once. Called %s times.%s"
                   % (self._mock_name or 'mock',
                      self.call_count,
                      self._calls_repr()))
>           raise AssertionError(msg)
E           AssertionError: Expected 'is_allowed' to have been called once. Called 0 times.

/usr/lib64/python3.12/unittest/mock.py:928: AssertionError

During handling of the above exception, another exception occurred:

self = <tests.test_middleware.TestAuthRateLimitMiddleware object at 0x7f84ca4f5940>
mock_get_limiter = <MagicMock name='get_unified_rate_limiter' id='140205116585216'>

    @patch('chatter.middleware.auth_security.get_unified_rate_limiter')
    async def test_rate_limit_with_user_agent_tracking(self, mock_get_limiter):
        """Test rate limiting considers user agent."""
        mock_limiter = MagicMock()
        mock_limiter.is_allowed = AsyncMock(return_value=(True, {}))
        mock_get_limiter.return_value = mock_limiter
    
        self.app.add_middleware(AuthRateLimitMiddleware)
        client = TestClient(self.app)
    
        response = client.post(
            "/auth/login",
            headers={"User-Agent": "TestBot/1.0"}
        )
    
        assert response.status_code == 200
        # Verify rate limiter was called
>       mock_limiter.is_allowed.assert_called_once()
E       AssertionError: Expected 'is_allowed' to have been called once. Called 0 times.

tests/test_middleware.py:361: AssertionError
____________ TestMiddlewareIntegration.test_both_middleware_applied ____________

self = <AsyncMock name='get_unified_rate_limiter().is_allowed' id='140205116807296'>

    def assert_called_once(self):
        """assert that the mock was called only once.
        """
        if not self.call_count == 1:
            msg = ("Expected '%s' to have been called once. Called %s times.%s"
                   % (self._mock_name or 'mock',
                      self.call_count,
                      self._calls_repr()))
>           raise AssertionError(msg)
E           AssertionError: Expected 'is_allowed' to have been called once. Called 0 times.

/usr/lib64/python3.12/unittest/mock.py:928: AssertionError

During handling of the above exception, another exception occurred:

self = <tests.test_middleware.TestMiddlewareIntegration object at 0x7f84ca4f6a80>
mock_get_limiter = <MagicMock name='get_unified_rate_limiter' id='140204609484128'>

    @patch('chatter.middleware.auth_security.get_unified_rate_limiter')
    def test_both_middleware_applied(self, mock_get_limiter):
        """Test that both security and rate limiting middleware are applied."""
        mock_limiter = MagicMock()
        mock_limiter.is_allowed = AsyncMock(return_value=(True, {}))
        mock_get_limiter.return_value = mock_limiter
    
        response = self.client.post("/auth/login")
    
        assert response.status_code == 200
    
        # Check security headers are present
        assert "X-Frame-Options" in response.headers
        assert "Content-Security-Policy" in response.headers
    
        # Check rate limiting was applied (method called)
>       mock_limiter.is_allowed.assert_called_once()
E       AssertionError: Expected 'is_allowed' to have been called once. Called 0 times.

tests/test_middleware.py:479: AssertionError
___ TestMiddlewareIntegration.test_security_headers_on_rate_limited_response ___

self = <tests.test_middleware.TestMiddlewareIntegration object at 0x7f84ca4f6bd0>
mock_get_limiter = <MagicMock name='get_unified_rate_limiter' id='140205116565712'>

    @patch('chatter.middleware.auth_security.get_unified_rate_limiter')
    def test_security_headers_on_rate_limited_response(self, mock_get_limiter):
        """Test that security headers are added even on rate limited responses."""
        mock_limiter = MagicMock()
        mock_limiter.is_allowed = AsyncMock(return_value=(False, {"retry_after": 60}))
        mock_get_limiter.return_value = mock_limiter
    
        response = self.client.post("/auth/login")
    
>       assert response.status_code == status.HTTP_429_TOO_MANY_REQUESTS
E       assert 200 == 429
E        +  where 200 = <Response [200 OK]>.status_code
E        +  and   429 = status.HTTP_429_TOO_MANY_REQUESTS

tests/test_middleware.py:490: AssertionError
___________ TestMiddlewareIntegration.test_middleware_order_matters ____________

self = <tests.test_middleware.TestMiddlewareIntegration object at 0x7f84ca4f6fc0>
mock_get_limiter = <MagicMock name='get_unified_rate_limiter' id='140205116417872'>

    @patch('chatter.middleware.auth_security.get_unified_rate_limiter')
    def test_middleware_order_matters(self, mock_get_limiter):
        """Test that middleware order affects behavior."""
        # This test verifies that security headers are applied
        # even when rate limiting middleware intervenes
    
        mock_limiter = MagicMock()
        mock_limiter.is_allowed = AsyncMock(return_value=(False, {"retry_after": 60}))
        mock_get_limiter.return_value = mock_limiter
    
        response = self.client.post("/auth/login")
    
        # Rate limit response should have security headers
>       assert response.status_code == status.HTTP_429_TOO_MANY_REQUESTS
E       assert 200 == 429
E        +  where 200 = <Response [200 OK]>.status_code
E        +  and   429 = status.HTTP_429_TOO_MANY_REQUESTS

tests/test_middleware.py:519: AssertionError
__ TestTransactionManagement.test_create_model_transaction_rollback_on_error ___

self = <tests.test_model_registry_fixes.TestTransactionManagement object at 0x7f84ca4f5df0>
service = <chatter.core.model_registry.ModelRegistryService object at 0x7f840c16f830>
sample_provider = '01K4DQZWQMTMB2FGCEJTMYFSHS'

    async def test_create_model_transaction_rollback_on_error(
        self, service: ModelRegistryService, sample_provider: str
    ):
        """Test that model creation rolls back properly on error."""
        import uuid
        unique_id = str(uuid.uuid4())[:8]
        # Create a model with invalid data to trigger an error
        model_data = ModelDefCreate(
            provider_id=sample_provider,
            name=f"test_model_{unique_id}",
            model_type=ModelType.LLM,
            display_name="Test Model",
            model_name="gpt-4",
        )
    
        # First create should succeed
        model = await service.create_model(model_data)
        assert model is not None
    
        # Second create with same name should fail and not leave partial data
        with pytest.raises(Exception):  # Could be IntegrityError or ValidationError
            await service.create_model(model_data)
    
        # Verify no partial data was left
>       models = await service.list_models(provider_id=sample_provider)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_model_registry_fixes.py:364: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
chatter/core/model_registry.py:332: in list_models
    total = await self.session.scalar(count_query)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:519: in scalar
    return await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:190: in greenlet_spawn
    result = context.switch(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2413: in scalar
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2241: in _execute_internal
    conn = self._connection_for_bind(bind)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2110: in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
<string>:2: in _connection_for_bind
    ???
../.local/lib/python3.12/site-packages/sqlalchemy/orm/state_changes.py:101: in _go
    self._raise_for_prerequisite_state(fn.__name__, current_state)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.orm.session.SessionTransaction object at 0x7f83edaec110>
operation_name = '_connection_for_bind'
state = <SessionTransactionState.DEACTIVE: 4>

    def _raise_for_prerequisite_state(
        self, operation_name: str, state: _StateChangeState
    ) -> NoReturn:
        if state is SessionTransactionState.DEACTIVE:
            if self._rollback_exception:
>               raise sa_exc.PendingRollbackError(
                    "This Session's transaction has been rolled back "
                    "due to a previous exception during flush."
                    " To begin a new transaction with this Session, "
                    "first issue Session.rollback()."
                    f" Original exception was: {self._rollback_exception}",
                    code="7s2a",
                )
E               sqlalchemy.exc.PendingRollbackError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback(). Original exception was: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_provider_model_name"
E               DETAIL:  Key (provider_id, name)=(01K4DQZWQMTMB2FGCEJTMYFSHS, test_model_79ed0626) already exists.
E               [SQL: INSERT INTO model_defs (provider_id, name, model_type, display_name, description, model_name, max_tokens, context_length, dimensions, chunk_size, supports_batch, max_batch_size, default_config, is_active, is_default, id) VALUES ($1::VARCHAR, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::INTEGER, $8::INTEGER, $9::INTEGER, $10::INTEGER, $11::BOOLEAN, $12::INTEGER, $13::JSON, $14::BOOLEAN, $15::BOOLEAN, $16::VARCHAR) RETURNING model_defs.created_at, model_defs.updated_at]
E               [parameters: ('01K4DQZWQMTMB2FGCEJTMYFSHS', 'test_model_79ed0626', <ModelType.LLM: 'llm'>, 'Test Model', None, 'gpt-4', None, None, None, None, False, None, '{}', True, False, '01K4DQZWRPE70CAMK2GHXRZXTX')]
E               (Background on this error at: https://sqlalche.me/e/20/gkpj) (Background on this error at: https://sqlalche.me/e/20/7s2a)

../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:973: PendingRollbackError
_________________ TestToolPlugin.test_tool_plugin_inheritance __________________

self = <tests.test_plugins.TestToolPlugin object at 0x7f84ca355af0>

    def test_tool_plugin_inheritance(self):
        """Test ToolPlugin inherits from BasePlugin."""
    
        class TestToolPlugin(ToolPlugin):
            async def initialize(self):
                pass
    
            async def shutdown(self):
                pass
    
            async def health_check(self):
                return {"status": "healthy"}
    
            def get_tools(self):
                return [MockBaseTool("test_tool", "Test tool description")]
    
>       plugin = TestToolPlugin()
                 ^^^^^^^^^^^^^^^^
E       TypeError: Can't instantiate abstract class TestToolPlugin without an implementation for abstract method 'get_capabilities'

tests/test_plugins.py:266: TypeError
_________________ TestToolPlugin.test_get_tools_implementation _________________

self = <tests.test_plugins.TestToolPlugin object at 0x7f84ca355e20>

    def test_get_tools_implementation(self):
        """Test get_tools implementation."""
    
        class TestToolPlugin(ToolPlugin):
            async def initialize(self):
                pass
    
            async def shutdown(self):
                pass
    
            async def health_check(self):
                return {"status": "healthy"}
    
            def get_tools(self):
                return [
                    MockBaseTool("tool1", "First tool"),
                    MockBaseTool("tool2", "Second tool")
                ]
    
>       plugin = TestToolPlugin()
                 ^^^^^^^^^^^^^^^^
E       TypeError: Can't instantiate abstract class TestToolPlugin without an implementation for abstract method 'get_capabilities'

tests/test_plugins.py:305: TypeError
_____________ TestWorkflowPlugin.test_workflow_plugin_inheritance ______________

self = <tests.test_plugins.TestWorkflowPlugin object at 0x7f84ca356120>

    def test_workflow_plugin_inheritance(self):
        """Test WorkflowPlugin inherits from BasePlugin."""
    
        class TestWorkflowPlugin(WorkflowPlugin):
            async def initialize(self):
                pass
    
            async def shutdown(self):
                pass
    
            async def health_check(self):
                return {"status": "healthy"}
    
            async def execute_workflow(self, workflow_id: str, params: dict):
                return {"result": "workflow executed"}
    
>       plugin = TestWorkflowPlugin()
                 ^^^^^^^^^^^^^^^^^^^^
E       TypeError: Can't instantiate abstract class TestWorkflowPlugin without an implementation for abstract methods 'create_workflow', 'get_capabilities'

tests/test_plugins.py:332: TypeError
_____________ TestPluginManager.test_plugin_manager_initialization _____________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca3565d0>

    def test_plugin_manager_initialization(self):
        """Test PluginManager initialization."""
        assert isinstance(self.plugin_manager.plugins, dict)
>       assert isinstance(self.plugin_manager.plugin_instances, dict)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'PluginManager' object has no attribute 'plugin_instances'

tests/test_plugins.py:363: AttributeError
_____________ TestPluginManager.test_get_plugin_directory_default ______________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca3397f0>

    def test_get_plugin_directory_default(self):
        """Test getting default plugin directory."""
>       plugins_dir = self.plugin_manager._get_plugin_directory()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'PluginManager' object has no attribute '_get_plugin_directory'. Did you mean: 'plugins_directory'?

tests/test_plugins.py:368: AttributeError
______________ TestPluginManager.test_get_plugin_directory_custom ______________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca3565a0>

    def test_get_plugin_directory_custom(self):
        """Test getting custom plugin directory."""
        with patch('chatter.services.plugins.settings') as mock_settings:
            mock_settings.plugins_directory = "/custom/plugins"
    
>           plugins_dir = self.plugin_manager._get_plugin_directory()
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E           AttributeError: 'PluginManager' object has no attribute '_get_plugin_directory'. Did you mean: 'plugins_directory'?

tests/test_plugins.py:376: AttributeError
_____________ TestPluginManager.test_load_plugin_from_file_success _____________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca356360>

        @pytest.mark.asyncio
        async def test_load_plugin_from_file_success(self):
            """Test successfully loading plugin from file."""
    
            # Create a temporary plugin file
            plugin_code = '''
    from chatter.services.plugins import ToolPlugin
    
    class TestFilePlugin(ToolPlugin):
        async def initialize(self):
            pass
    
        async def shutdown(self):
            pass
    
        async def health_check(self):
            return {"status": "healthy"}
    
        def get_tools(self):
            from tests.test_plugins import MockBaseTool
            return [MockBaseTool("file_tool", "Tool from file")]
    
    # Plugin entry point
    plugin_class = TestFilePlugin
    '''
    
            with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
                f.write(plugin_code)
                plugin_file = Path(f.name)
    
            try:
>               plugin_instance = await self.plugin_manager.load_plugin_from_file(
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    plugin_file, "test_file_plugin", {}
                )
E               AttributeError: 'PluginManager' object has no attribute 'load_plugin_from_file'

tests/test_plugins.py:410: AttributeError
__________ TestPluginManager.test_load_plugin_from_file_missing_file ___________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca355b80>

    @pytest.mark.asyncio
    async def test_load_plugin_from_file_missing_file(self):
        """Test loading plugin from non-existent file."""
        non_existent_file = Path("/non/existent/plugin.py")
    
        with pytest.raises(PluginError, match="Plugin file not found"):
>           await self.plugin_manager.load_plugin_from_file(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                non_existent_file, "missing_plugin", {}
            )
E           AttributeError: 'PluginManager' object has no attribute 'load_plugin_from_file'

tests/test_plugins.py:427: AttributeError
__________ TestPluginManager.test_load_plugin_from_file_syntax_error ___________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca3554c0>

        @pytest.mark.asyncio
        async def test_load_plugin_from_file_syntax_error(self):
            """Test loading plugin with syntax error."""
    
            # Create plugin file with syntax error
            plugin_code = '''
    from chatter.services.plugins import ToolPlugin
    
    class TestFilePlugin(ToolPlugin):
        async def initialize(self)
            # Missing colon - syntax error
            pass
    '''
    
            with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
                f.write(plugin_code)
                plugin_file = Path(f.name)
    
            try:
                with pytest.raises(PluginError, match="Failed to load plugin"):
>                   await self.plugin_manager.load_plugin_from_file(
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        plugin_file, "syntax_error_plugin", {}
                    )
E                   AttributeError: 'PluginManager' object has no attribute 'load_plugin_from_file'

tests/test_plugins.py:451: AttributeError
_________________ TestPluginManager.test_unload_plugin_success _________________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca3568a0>

    @pytest.mark.asyncio
    async def test_unload_plugin_success(self):
        """Test successfully unloading a plugin."""
    
        # Create a mock plugin instance
        mock_plugin = MagicMock()
        mock_plugin.cleanup = AsyncMock()
    
>       plugin_instance = PluginInstance(
            plugin_id="test_plugin",
            name="Test Plugin",
            plugin_type=PluginType.TOOL,
            status=PluginStatus.ACTIVE,
            plugin_object=mock_plugin,
            config={},
            created_at="2024-01-01T00:00:00Z",
            updated_at="2024-01-01T00:00:00Z"
        )
E       pydantic_core._pydantic_core.ValidationError: 2 validation errors for PluginInstance
E       manifest
E         Field required [type=missing, input_value={'plugin_id': 'test_plugi... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       installation_path
E         Field required [type=missing, input_value={'plugin_id': 'test_plugi... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_plugins.py:465: ValidationError
________________ TestPluginManager.test_unload_plugin_not_found ________________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca356b40>

    @pytest.mark.asyncio
    async def test_unload_plugin_not_found(self):
        """Test unloading non-existent plugin."""
>       result = await self.plugin_manager.unload_plugin("non_existent_plugin")
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'PluginManager' object has no attribute 'unload_plugin'. Did you mean: 'install_plugin'?

tests/test_plugins.py:487: AttributeError
______________ TestPluginManager.test_unload_plugin_cleanup_error ______________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca356de0>

    @pytest.mark.asyncio
    async def test_unload_plugin_cleanup_error(self):
        """Test unloading plugin when cleanup fails."""
    
        mock_plugin = MagicMock()
        mock_plugin.cleanup = AsyncMock(side_effect=Exception("Cleanup failed"))
    
>       plugin_instance = PluginInstance(
            plugin_id="test_plugin",
            name="Test Plugin",
            plugin_type=PluginType.TOOL,
            status=PluginStatus.ACTIVE,
            plugin_object=mock_plugin,
            config={},
            created_at="2024-01-01T00:00:00Z",
            updated_at="2024-01-01T00:00:00Z"
        )
E       pydantic_core._pydantic_core.ValidationError: 2 validation errors for PluginInstance
E       manifest
E         Field required [type=missing, input_value={'plugin_id': 'test_plugi... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       installation_path
E         Field required [type=missing, input_value={'plugin_id': 'test_plugi... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_plugins.py:498: ValidationError
_____________________ TestPluginManager.test_list_plugins ______________________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca357080>

    def test_list_plugins(self):
        """Test listing plugins."""
    
        # Add some mock plugin instances
>       plugin1 = PluginInstance(
            plugin_id="plugin1",
            name="Plugin 1",
            plugin_type=PluginType.TOOL,
            status=PluginStatus.ACTIVE,
            plugin_object=MagicMock(),
            config={},
            created_at="2024-01-01T00:00:00Z",
            updated_at="2024-01-01T00:00:00Z"
        )
E       pydantic_core._pydantic_core.ValidationError: 2 validation errors for PluginInstance
E       manifest
E         Field required [type=missing, input_value={'plugin_id': 'plugin1', ... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       installation_path
E         Field required [type=missing, input_value={'plugin_id': 'plugin1', ... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_plugins.py:521: ValidationError
_________________ TestPluginManager.test_list_plugins_by_type __________________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca357320>

    def test_list_plugins_by_type(self):
        """Test listing plugins filtered by type."""
    
>       tool_plugin = PluginInstance(
            plugin_id="tool_plugin",
            name="Tool Plugin",
            plugin_type=PluginType.TOOL,
            status=PluginStatus.ACTIVE,
            plugin_object=MagicMock(),
            config={},
            created_at="2024-01-01T00:00:00Z",
            updated_at="2024-01-01T00:00:00Z"
        )
E       pydantic_core._pydantic_core.ValidationError: 2 validation errors for PluginInstance
E       manifest
E         Field required [type=missing, input_value={'plugin_id': 'tool_plugi... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       installation_path
E         Field required [type=missing, input_value={'plugin_id': 'tool_plugi... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_plugins.py:555: ValidationError
________________ TestPluginManager.test_list_plugins_by_status _________________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca357530>

    def test_list_plugins_by_status(self):
        """Test listing plugins filtered by status."""
    
>       active_plugin = PluginInstance(
            plugin_id="active_plugin",
            name="Active Plugin",
            plugin_type=PluginType.TOOL,
            status=PluginStatus.ACTIVE,
            plugin_object=MagicMock(),
            config={},
            created_at="2024-01-01T00:00:00Z",
            updated_at="2024-01-01T00:00:00Z"
        )
E       pydantic_core._pydantic_core.ValidationError: 2 validation errors for PluginInstance
E       manifest
E         Field required [type=missing, input_value={'plugin_id': 'active_plu... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       installation_path
E         Field required [type=missing, input_value={'plugin_id': 'active_plu... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_plugins.py:589: ValidationError
_________________ TestPluginManager.test_get_plugin_info_found _________________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca357740>

    def test_get_plugin_info_found(self):
        """Test getting plugin info for existing plugin."""
    
>       plugin = PluginInstance(
            plugin_id="test_plugin",
            name="Test Plugin",
            plugin_type=PluginType.TOOL,
            status=PluginStatus.ACTIVE,
            plugin_object=MagicMock(),
            config={"param": "value"},
            created_at="2024-01-01T00:00:00Z",
            updated_at="2024-01-01T01:00:00Z"
        )
E       pydantic_core._pydantic_core.ValidationError: 2 validation errors for PluginInstance
E       manifest
E         Field required [type=missing, input_value={'plugin_id': 'test_plugi... '2024-01-01T01:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       installation_path
E         Field required [type=missing, input_value={'plugin_id': 'test_plugi... '2024-01-01T01:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_plugins.py:623: ValidationError
_______________ TestPluginManager.test_get_plugin_info_not_found _______________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca357950>

    def test_get_plugin_info_not_found(self):
        """Test getting plugin info for non-existent plugin."""
>       info = self.plugin_manager.get_plugin_info("non_existent")
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'PluginManager' object has no attribute 'get_plugin_info'. Did you mean: '_get_plugin_lock'?

tests/test_plugins.py:642: AttributeError
________________ TestPluginManager.test_get_tools_from_plugins _________________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca357b60>

    def test_get_tools_from_plugins(self):
        """Test getting tools from tool plugins."""
    
        # Create mock tool plugin
        mock_tool_plugin = MagicMock()
        mock_tool_plugin.get_tools.return_value = [
            MockBaseTool("tool1", "Tool 1"),
            MockBaseTool("tool2", "Tool 2")
        ]
    
>       tool_plugin = PluginInstance(
            plugin_id="tool_plugin",
            name="Tool Plugin",
            plugin_type=PluginType.TOOL,
            status=PluginStatus.ACTIVE,
            plugin_object=mock_tool_plugin,
            config={},
            created_at="2024-01-01T00:00:00Z",
            updated_at="2024-01-01T00:00:00Z"
        )
E       pydantic_core._pydantic_core.ValidationError: 2 validation errors for PluginInstance
E       manifest
E         Field required [type=missing, input_value={'plugin_id': 'tool_plugi... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       installation_path
E         Field required [type=missing, input_value={'plugin_id': 'tool_plugi... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_plugins.py:656: ValidationError
________ TestPluginManager.test_get_tools_from_plugins_inactive_ignored ________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca357d70>

    def test_get_tools_from_plugins_inactive_ignored(self):
        """Test that inactive plugins are ignored when getting tools."""
    
        # Create inactive tool plugin
        mock_tool_plugin = MagicMock()
        mock_tool_plugin.get_tools.return_value = [MockBaseTool("tool1", "Tool 1")]
    
>       inactive_plugin = PluginInstance(
            plugin_id="inactive_plugin",
            name="Inactive Plugin",
            plugin_type=PluginType.TOOL,
            status=PluginStatus.ERROR,  # Inactive status
            plugin_object=mock_tool_plugin,
            config={},
            created_at="2024-01-01T00:00:00Z",
            updated_at="2024-01-01T00:00:00Z"
        )
E       pydantic_core._pydantic_core.ValidationError: 2 validation errors for PluginInstance
E       manifest
E         Field required [type=missing, input_value={'plugin_id': 'inactive_p... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       installation_path
E         Field required [type=missing, input_value={'plugin_id': 'inactive_p... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_plugins.py:697: ValidationError
_______________ TestPluginManager.test_health_check_all_plugins ________________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca3881d0>

    @pytest.mark.asyncio
    async def test_health_check_all_plugins(self):
        """Test health check for all plugins."""
    
        # Create mock plugins with health checks
        mock_plugin1 = MagicMock()
        mock_plugin1.health_check = AsyncMock(return_value={"status": "healthy"})
    
        mock_plugin2 = MagicMock()
        mock_plugin2.health_check = AsyncMock(return_value={"status": "degraded", "issues": ["slow response"]})
    
>       plugin1 = PluginInstance(
            plugin_id="plugin1",
            name="Plugin 1",
            plugin_type=PluginType.TOOL,
            status=PluginStatus.ACTIVE,
            plugin_object=mock_plugin1,
            config={},
            created_at="2024-01-01T00:00:00Z",
            updated_at="2024-01-01T00:00:00Z"
        )
E       pydantic_core._pydantic_core.ValidationError: 2 validation errors for PluginInstance
E       manifest
E         Field required [type=missing, input_value={'plugin_id': 'plugin1', ... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       installation_path
E         Field required [type=missing, input_value={'plugin_id': 'plugin1', ... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_plugins.py:726: ValidationError
_______________ TestPluginManager.test_health_check_plugin_error _______________

self = <tests.test_plugins.TestPluginManager object at 0x7f84ca388470>

    @pytest.mark.asyncio
    async def test_health_check_plugin_error(self):
        """Test health check when plugin health check fails."""
    
        mock_plugin = MagicMock()
        mock_plugin.health_check = AsyncMock(side_effect=Exception("Health check failed"))
    
>       plugin = PluginInstance(
            plugin_id="error_plugin",
            name="Error Plugin",
            plugin_type=PluginType.TOOL,
            status=PluginStatus.ACTIVE,
            plugin_object=mock_plugin,
            config={},
            created_at="2024-01-01T00:00:00Z",
            updated_at="2024-01-01T00:00:00Z"
        )
E       pydantic_core._pydantic_core.ValidationError: 2 validation errors for PluginInstance
E       manifest
E         Field required [type=missing, input_value={'plugin_id': 'error_plug... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing
E       installation_path
E         Field required [type=missing, input_value={'plugin_id': 'error_plug... '2024-01-01T00:00:00Z'}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.11/v/missing

tests/test_plugins.py:766: ValidationError
_________________ TestPluginIntegration.test_plugin_lifecycle __________________

self = <tests.test_plugins.TestPluginIntegration object at 0x7f84ca3886e0>

        @pytest.mark.asyncio
        async def test_plugin_lifecycle(self):
            """Test complete plugin lifecycle: load, activate, health check, unload."""
    
            # Create a temporary plugin file
            plugin_code = '''
    from chatter.services.plugins import ToolPlugin
    
    class LifecycleTestPlugin(ToolPlugin):
        def __init__(self, config=None):
            super().__init__(config)
            self.initialized = False
            self.cleaned_up = False
    
        async def initialize(self):
            self.initialized = True
    
        async def shutdown(self):
            self.cleaned_up = True
    
        async def health_check(self):
            return {
                "status": "healthy" if self.initialized and not self.cleaned_up else "error",
                "initialized": self.initialized,
                "cleaned_up": self.cleaned_up
            }
    
        def get_tools(self):
            from tests.test_plugins import MockBaseTool
            return [MockBaseTool("lifecycle_tool", "Test tool for lifecycle")]
    
    plugin_class = LifecycleTestPlugin
    '''
    
            with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
                f.write(plugin_code)
                plugin_file = Path(f.name)
    
            try:
                # Load plugin
>               plugin_instance = await self.plugin_manager.load_plugin_from_file(
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    plugin_file, "lifecycle_plugin", {}
                )
E               AttributeError: 'PluginManager' object has no attribute 'load_plugin_from_file'

tests/test_plugins.py:834: AttributeError
____________ TestPluginIntegration.test_multiple_plugins_management ____________

self = <tests.test_plugins.TestPluginIntegration object at 0x7f84ca357bf0>

        @pytest.mark.asyncio
        async def test_multiple_plugins_management(self):
            """Test managing multiple plugins simultaneously."""
    
            # Create multiple plugin files
            plugin_codes = {
                "plugin1": '''
    from chatter.services.plugins import ToolPlugin
    
    class Plugin1(ToolPlugin):
        async def initialize(self):
            pass
    
        async def shutdown(self):
            pass
    
        async def health_check(self):
            return {"status": "healthy", "plugin": "plugin1"}
    
        def get_tools(self):
            from tests.test_plugins import MockBaseTool
            return [MockBaseTool("plugin1_tool", "Tool from plugin 1")]
    
    plugin_class = Plugin1
    ''',
                "plugin2": '''
    from chatter.services.plugins import ToolPlugin
    
    class Plugin2(ToolPlugin):
        async def initialize(self):
            pass
    
        async def shutdown(self):
            pass
    
        async def health_check(self):
            return {"status": "healthy", "plugin": "plugin2"}
    
        def get_tools(self):
            from tests.test_plugins import MockBaseTool
            return [MockBaseTool("plugin2_tool", "Tool from plugin 2")]
    
    plugin_class = Plugin2
    '''
            }
    
            plugin_files = []
            try:
                # Create and load plugins
                for plugin_name, plugin_code in plugin_codes.items():
                    with tempfile.NamedTemporaryFile(mode='w', suffix='.py', delete=False) as f:
                        f.write(plugin_code)
                        plugin_file = Path(f.name)
                        plugin_files.append(plugin_file)
    
>                   plugin_instance = await self.plugin_manager.load_plugin_from_file(
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        plugin_file, plugin_name, {}
                    )
E                   AttributeError: 'PluginManager' object has no attribute 'load_plugin_from_file'

tests/test_plugins.py:920: AttributeError
_____________ TestProfilesIntegration.test_profile_list_and_filter _____________

self = <tests.test_profiles_integration.TestProfilesIntegration object at 0x7f84ca3899a0>
client = <httpx.AsyncClient object at 0x7f83e67d7cb0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyNzUySEFTTlQxNjJERVY0TUQ2TSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODcwfQ.OcA5MBSBJ6_QTh9gBlAnuaI0t7mLhtb_UsbcX-lXACg'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f83e75828d0>

    @pytest.mark.integration
    async def test_profile_list_and_filter(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test profile listing and filtering functionality."""
        # Create profiles with different providers
        profiles_to_create = [
            {
                "name": "OpenAI Profile",
                "llm_provider": "openai",
                "llm_model": "gpt-3.5-turbo",
                "temperature": 0.7
            },
            {
                "name": "Anthropic Profile",
                "llm_provider": "anthropic",
                "llm_model": "claude-3-sonnet",
                "temperature": 0.5
            },
            {
                "name": "Another OpenAI Profile",
                "llm_provider": "openai",
                "llm_model": "gpt-4",
                "temperature": 0.9
            }
        ]
    
        created_profile_ids = []
    
        for profile_data in profiles_to_create:
>           response = await client.post("/api/v1/profiles/", json=profile_data, headers=auth_headers)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_integration.py:126: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5261' coro=<TestProfilesIntegration.test_profile_list_and_filter() running at /home/yam/chatter/tests/test_profiles_integration.py:126> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyNzUySEFTTlQxNjJERVY0TUQ2TSIsImVtYWlsIjoidGVzdHVzZXJiZGRlYmVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmRkZWJlIiwianRpIjoiNGY0YjRlZjQtMzczMC00YmJmLWE5YzAtZWUzNDllNGRjZGM0IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzA3MCwic2Vzc2lvbl9pZCI6ImQzNmFhNmIxLWU3ZjMtNGVjMy04ZTJiLTczN2ZjZWFjMjU1MCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODcwfQ.OcA5MBSBJ6_QTh9gBlAnuaI0t7mLhtb_UsbcX-lXACg
___________ TestProfilesIntegration.test_profile_stats_and_providers ___________

self = <tests.test_profiles_integration.TestProfilesIntegration object at 0x7f84ca389d60>
client = <httpx.AsyncClient object at 0x7f83e503e6f0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyOEVRRTI0Vk1EQzFTUUtIOURURiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODcxfQ.tuitd_sjsg0HKtUi4uYC-3CifnV-wNDaXFS8WE1JRgI'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f83e6771100>

    @pytest.mark.integration
    async def test_profile_stats_and_providers(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test profile statistics and provider information."""
        # Get initial stats
>       stats_response = await client.get("/api/v1/profiles/stats/overview", headers=auth_headers)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_integration.py:160: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5275' coro=<TestProfilesIntegration.test_profile_stats_and_providers() running at /home/yam/chatter/tests/test_profiles_integration.py:160> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyOEVRRTI0Vk1EQzFTUUtIOURURiIsImVtYWlsIjoidGVzdHVzZXJmYWNmZGZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmFjZmRmIiwianRpIjoiMTAzZWQxYjYtYWI2YS00YWQ4LTk3ZjgtZGE3NjgxOWUzMDFlIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzA3MSwic2Vzc2lvbl9pZCI6IjA3ZjdkZDI4LTc3ZjQtNDAyNS1iYWYwLTM2MmIyOGIyNzc2MCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODcxfQ.tuitd_sjsg0HKtUi4uYC-3CifnV-wNDaXFS8WE1JRgI
_____________ TestProfilesIntegration.test_profile_error_scenarios _____________

self = <tests.test_profiles_integration.TestProfilesIntegration object at 0x7f84ca38a120>
client = <httpx.AsyncClient object at 0x7f83e5421100>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyOVIzUEg2QU5XWlZIUkhLWjdGQSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODczfQ.NkxdGwLSATzemRebI9a0yTAxujPOPFrxA7TzNHUBXo4'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f83e5053e60>

    @pytest.mark.integration
    async def test_profile_error_scenarios(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test profile error handling scenarios."""
        # Test non-existent profile operations
        nonexistent_id = "nonexistent-profile-id"
    
        operations = [
            ("GET", f"/api/v1/profiles/{nonexistent_id}"),
            ("PUT", f"/api/v1/profiles/{nonexistent_id}"),
            ("DELETE", f"/api/v1/profiles/{nonexistent_id}"),
            ("POST", f"/api/v1/profiles/{nonexistent_id}/test"),
            ("POST", f"/api/v1/profiles/{nonexistent_id}/clone"),
        ]
    
        for method, url in operations:
            if method == "GET":
>               response = await client.get(url, headers=auth_headers)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_integration.py:225: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5289' coro=<TestProfilesIntegration.test_profile_error_scenarios() running at /home/yam/chatter/tests/test_profiles_integration.py:225> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyOVIzUEg2QU5XWlZIUkhLWjdGQSIsImVtYWlsIjoidGVzdHVzZXJjZGZkYmFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2RmZGJhIiwianRpIjoiZDM0ZWQ0YjYtMDliZS00ZjE5LWFiZDMtZTlkYzI0YmQ4MGMwIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzA3Mywic2Vzc2lvbl9pZCI6IjFjNDc4NDY2LWI1NWQtNGU5MC05ZWFkLTQ3NmJjNWZmNWI2YSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODczfQ.NkxdGwLSATzemRebI9a0yTAxujPOPFrxA7TzNHUBXo4
_____________ TestProfilesIntegration.test_profile_data_validation _____________

self = <tests.test_profiles_integration.TestProfilesIntegration object at 0x7f84ca3895e0>
client = <httpx.AsyncClient object at 0x7f83dbff3ec0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyQjFEOEZHRzA1NkFSWEtaRVk0QSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODc0fQ.UMHnQDcop8UEuaxxLIlSL8qBJYsDoQzzdFZS44j-i6I'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f83e546e5a0>

    @pytest.mark.integration
    async def test_profile_data_validation(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test profile data validation in integration environment."""
        # Test invalid provider
        invalid_provider_data = {
            "name": "Invalid Provider Profile",
            "llm_provider": "nonexistent_provider_xyz",
            "llm_model": "some-model"
        }
    
>       response = await client.post("/api/v1/profiles/", json=invalid_provider_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_integration.py:246: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5303' coro=<TestProfilesIntegration.test_profile_data_validation() running at /home/yam/chatter/tests/test_profiles_integration.py:246> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyQjFEOEZHRzA1NkFSWEtaRVk0QSIsImVtYWlsIjoidGVzdHVzZXJiZmRlZGFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmZkZWRhIiwianRpIjoiNTE2OTEwMjQtZTk4Yy00OWRiLWIxZWYtNzgwM2I4YmZkY2UwIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzA3NCwic2Vzc2lvbl9pZCI6IjE3NWFlZWI3LTA4NDYtNDQzYi1hYmM1LWIxYmRkNDU4N2Q2OCIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODc0fQ.UMHnQDcop8UEuaxxLIlSL8qBJYsDoQzzdFZS44j-i6I
__________ TestProfilesIntegration.test_profile_concurrent_operations __________

self = <tests.test_profiles_integration.TestProfilesIntegration object at 0x7f84ca38a4b0>
client = <httpx.AsyncClient object at 0x7f83dbb2aba0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyQ0FDUFA4OUpUN0FQUVE3SFBNSyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODc1fQ.m7hNe2ODQmTi4lJSBglVXV5bzIdgqp1jCEc5QxqWIOQ'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f83dbfc6a20>

    @pytest.mark.integration
    async def test_profile_concurrent_operations(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test concurrent profile operations."""
        # Create multiple profiles concurrently
        profile_data_list = [
            {
                "name": f"Concurrent Profile {i}",
                "llm_provider": "openai",
                "llm_model": "gpt-3.5-turbo",
                "temperature": 0.5 + (i * 0.1)
            }
            for i in range(5)
        ]
    
        # Create tasks for concurrent profile creation
        create_tasks = [
            asyncio.create_task(client.post("/api/v1/profiles/", json=profile_data, headers=auth_headers))
            for profile_data in profile_data_list
        ]
    
        # Wait for all creations
>       create_responses = await asyncio.gather(*create_tasks)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_integration.py:290: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5318' coro=<AsyncClient.post() running at /home/yam/.local/lib/python3.12/site-packages/httpx/_client.py:1859> cb=[gather.<locals>._done_callback() at /usr/lib64/python3.12/asyncio/tasks.py:767]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyQ0FDUFA4OUpUN0FQUVE3SFBNSyIsImVtYWlsIjoidGVzdHVzZXJkYWFlYmJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGFhZWJiIiwianRpIjoiOThiZTNhOWMtY2UwYS00MmZkLTkyNTQtMzBlZWU0Y2YwMDM5IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzA3NSwic2Vzc2lvbl9pZCI6ImM5ZWUyNmQ2LWFlZDYtNDU4OS05ZGJlLWJiYmU3M2NmYjhiMyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODc1fQ.m7hNe2ODQmTi4lJSBglVXV5bzIdgqp1jCEc5QxqWIOQ
__________ TestProfilesIntegration.test_profile_complex_data_handling __________

self = <tests.test_profiles_integration.TestProfilesIntegration object at 0x7f84ca3896a0>
client = <httpx.AsyncClient object at 0x7f83dbe99f70>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyREsyVFkyNUtUMFJFRjVKWlhRRyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODc2fQ.PZ9DduyVM6QLDQDYkhOfKpbTsDoR1vIVJn0YIJCU0Fs'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f83dbb03dd0>

    @pytest.mark.integration
    async def test_profile_complex_data_handling(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test complex profile data handling."""
        # Create profile with complex configuration
        complex_profile_data = {
            "name": "Complex Configuration Profile",
            "llm_provider": "openai",
            "llm_model": "gpt-4",
            "description": "A profile with complex configuration for testing data integrity",
            "temperature": 0.75,
            "max_tokens": 2048,
            "top_p": 0.9,
            "frequency_penalty": 0.1,
            "presence_penalty": 0.2,
            "system_message": "You are an expert assistant with deep knowledge in multiple domains. Provide detailed, accurate, and helpful responses.",
            "profile_type": "chat",
            "custom_parameters": {
                "context_window": 4096,
                "response_format": "json",
                "safety_level": "moderate",
                "custom_instructions": [
                    "Always be helpful and accurate",
                    "Provide sources when possible",
                    "Be concise but complete"
                ]
            }
        }
    
        # Create profile
>       create_response = await client.post("/api/v1/profiles/", json=complex_profile_data, headers=auth_headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_integration.py:360: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5336' coro=<TestProfilesIntegration.test_profile_complex_data_handling() running at /home/yam/chatter/tests/test_profiles_integration.py:360> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyREsyVFkyNUtUMFJFRjVKWlhRRyIsImVtYWlsIjoidGVzdHVzZXJjZWRiYmJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2VkYmJiIiwianRpIjoiYzhhMTY5ZTEtNjM5YS00ZmM1LWE4MzgtZTczZDVmNjk5NmNhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzA3Niwic2Vzc2lvbl9pZCI6IjA4ZGJiYjg3LTQ1N2YtNDAzNC04MzM2LWY1OGM2NzdmNzlkYyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODc2fQ.PZ9DduyVM6QLDQDYkhOfKpbTsDoR1vIVJn0YIJCU0Fs
__________ TestProfilesIntegration.test_profile_testing_functionality __________

self = <tests.test_profiles_integration.TestProfilesIntegration object at 0x7f84ca388740>
client = <httpx.AsyncClient object at 0x7f83db830260>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyRVRDQ0RSTU1WQ0JQOFRWVDI4NiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODc4fQ.lGpaLtkLc1CKf-v4PADGywU9pG013De26V7oj8Mjf0Y'}
db_session = <sqlalchemy.ext.asyncio.session.AsyncSession object at 0x7f83dbe75e50>

    @pytest.mark.integration
    async def test_profile_testing_functionality(self, client: AsyncClient, auth_headers: dict, db_session: AsyncSession):
        """Test profile testing functionality end-to-end."""
        # Create a test profile
        profile_data = {
            "name": "Testing Functionality Profile",
            "llm_provider": "openai",
            "llm_model": "gpt-3.5-turbo",
            "temperature": 0.7,
            "system_message": "You are a test assistant."
        }
    
>       create_response = await client.post("/api/v1/profiles/", json=profile_data, headers=auth_headers)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_integration.py:416: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5350' coro=<TestProfilesIntegration.test_profile_testing_functionality() running at /home/yam/chatter/tests/test_profiles_integration.py:416> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyRVRDQ0RSTU1WQ0JQOFRWVDI4NiIsImVtYWlsIjoidGVzdHVzZXJmY2NhZWZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmNjYWVmIiwianRpIjoiYzAxYmYxNmItYTdkNy00NTMyLWI4MjYtZTI4ZTIwNmI0NjI5IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzA3OCwic2Vzc2lvbl9pZCI6ImY2MjIwOTlhLTk5MmItNDBjOC1iZTI3LWQyYThkZTg1YTcyNiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODc4fQ.lGpaLtkLc1CKf-v4PADGywU9pG013De26V7oj8Mjf0Y
______________ TestProfilesUnit.test_create_profile_requires_auth ______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83ed2783b0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83ed2783b0>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a0380>
client = <httpx.AsyncClient object at 0x7f83ecc04200>

    @pytest.mark.unit
    async def test_create_profile_requires_auth(self, client: AsyncClient):
        """Test that creating profile requires authentication."""
        profile_data = {
            "name": "Test Profile",
            "llm_provider": "openai",
            "llm_model": "gpt-4"
        }
    
>       response = await client.post("/api/v1/profiles/", json=profile_data)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:22: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83ed2783b0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:11:20.742175Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m44bdde95-eedb-4b5d-8177-9ab60348dd22[0m [36mstatus_code[0m=[35m401[0m
______________ TestProfilesUnit.test_list_profiles_requires_auth _______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83e76b1520>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83e76b1520>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a0680>
client = <httpx.AsyncClient object at 0x7f83e76b0b30>

    @pytest.mark.unit
    async def test_list_profiles_requires_auth(self, client: AsyncClient):
        """Test that listing profiles requires authentication."""
>       response = await client.get("/api/v1/profiles")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83e76b1520>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:11:21.575823Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m8b0c46dd-bcdd-4872-ac09-c00d0cc96fb0[0m [36mstatus_code[0m=[35m401[0m
_______________ TestProfilesUnit.test_get_profile_requires_auth ________________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83ecb6e840>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83ecb6e840>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca388e60>
client = <httpx.AsyncClient object at 0x7f83ecb0f1a0>

    @pytest.mark.unit
    async def test_get_profile_requires_auth(self, client: AsyncClient):
        """Test that getting specific profile requires authentication."""
>       response = await client.get("/api/v1/profiles/profile-id")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83ecb6e840>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:11:22.428825Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m78e3dab5-518e-479e-9d5b-b2779d1dcdc0[0m [36mstatus_code[0m=[35m401[0m
______________ TestProfilesUnit.test_update_profile_requires_auth ______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848d0d0680>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848d0d0680>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a0350>
client = <httpx.AsyncClient object at 0x7f840c15b050>

    @pytest.mark.unit
    async def test_update_profile_requires_auth(self, client: AsyncClient):
        """Test that updating profile requires authentication."""
>       response = await client.put("/api/v1/profiles/profile-id", json={})
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:40: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1896: in put
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f848d0d0680>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:11:23.277184Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m2b7cf072-871d-46b3-b269-699ecb2cba91[0m [36mstatus_code[0m=[35m401[0m
______________ TestProfilesUnit.test_delete_profile_requires_auth ______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83e71a1790>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83e71a1790>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a0bc0>
client = <httpx.AsyncClient object at 0x7f83e71a0d10>

    @pytest.mark.unit
    async def test_delete_profile_requires_auth(self, client: AsyncClient):
        """Test that deleting profile requires authentication."""
>       response = await client.delete("/api/v1/profiles/profile-id")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:46: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1966: in delete
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83e71a1790>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:11:24.100490Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m5a65d6d4-7480-48cc-b17a-07d7a1900764[0m [36mstatus_code[0m=[35m401[0m
_______________ TestProfilesUnit.test_test_profile_requires_auth _______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83e487fb30>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83e487fb30>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a0f80>
client = <httpx.AsyncClient object at 0x7f83e487ef00>

    @pytest.mark.unit
    async def test_test_profile_requires_auth(self, client: AsyncClient):
        """Test that testing profile requires authentication."""
>       response = await client.post("/api/v1/profiles/profile-id/test", json={})
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:52: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83e487fb30>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:11:25.099781Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m63da05e1-1e70-49b4-9a9a-1f3a02096f9b[0m [36mstatus_code[0m=[35m401[0m
______________ TestProfilesUnit.test_clone_profile_requires_auth _______________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83db9dde20>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83db9dde20>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a1340>
client = <httpx.AsyncClient object at 0x7f83db9dd220>

    @pytest.mark.unit
    async def test_clone_profile_requires_auth(self, client: AsyncClient):
        """Test that cloning profile requires authentication."""
>       response = await client.post("/api/v1/profiles/profile-id/clone", json={})
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:58: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83db9dde20>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:11:25.981195Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m7d3a219e-708f-499b-8604-7e0776704ca7[0m [36mstatus_code[0m=[35m401[0m
____________ TestProfilesUnit.test_get_profile_stats_requires_auth _____________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83e5660350>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83e5660350>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a1700>
client = <httpx.AsyncClient object at 0x7f83e59bf6e0>

    @pytest.mark.unit
    async def test_get_profile_stats_requires_auth(self, client: AsyncClient):
        """Test that getting profile stats requires authentication."""
>       response = await client.get("/api/v1/profiles/stats/overview")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:64: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f83e5660350>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:11:26.832430Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m4c70fd1e-ee82-4833-b98f-3ed165e86a83[0m [36mstatus_code[0m=[35m401[0m
_________ TestProfilesUnit.test_get_available_providers_requires_auth __________

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f8424fbe4b0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
>           return await super().__call__(request)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

chatter/api/auth.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f8424fbe4b0>

    async def __call__(
        self, request: Request
    ) -> Optional[HTTPAuthorizationCredentials]:
        authorization = request.headers.get("Authorization")
        scheme, credentials = get_authorization_scheme_param(authorization)
        if not (authorization and scheme and credentials):
            if self.auto_error:
>               raise HTTPException(
                    status_code=HTTP_403_FORBIDDEN, detail="Not authenticated"
                )
E               fastapi.exceptions.HTTPException: 403: Not authenticated

../.local/lib/python3.12/site-packages/fastapi/security/http.py:308: HTTPException

The above exception was the direct cause of the following exception:

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a1ac0>
client = <httpx.AsyncClient object at 0x7f8424fbd880>

    @pytest.mark.unit
    async def test_get_available_providers_requires_auth(self, client: AsyncClient):
        """Test that getting available providers requires authentication."""
>       response = await client.get("/api/v1/profiles/providers/available")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:70: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:615: in solve_dependencies
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.api.auth.CustomHTTPBearer object at 0x7f860d2149b0>
request = <starlette.requests.Request object at 0x7f8424fbe4b0>

    async def __call__(self, request: Request) -> HTTPAuthorizationCredentials:
        """Extract credentials and raise 401 for missing/invalid auth."""
        try:
            return await super().__call__(request)
        except Exception as e:
            # Convert any authentication failure to 401
>           raise AuthenticationError("Authentication credentials required") from e
E           chatter.core.exceptions.AuthenticationError: Authentication credentials required

chatter/api/auth.py:51: AuthenticationError
------------------------------ Captured log call -------------------------------
ERROR    chatter.core.exceptions:exceptions.py:97 [2m2025-09-05T20:11:27.676361Z[0m [[31m[1merror    [0m] [1mAuthenticationError: Authentication credentials required[0m [[34m[1mchatter.core.exceptions[0m] [36mdetails[0m=[35mNone[0m [36merror_code[0m=[35mAUTHENTICATION_ERROR[0m [36merror_id[0m=[35m63a7f70d-634c-4968-a31b-43f3a8372f6a[0m [36mstatus_code[0m=[35m401[0m
_________________ TestProfilesUnit.test_create_profile_success _________________

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a1e80>
mock_get_service = <AsyncMock name='get_profile_service' id='140204299688544'>
client = <httpx.AsyncClient object at 0x7f83db7a86b0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyUzJUQVpLQjNXVjBHQ0IxRkVDNCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODg4fQ.THwUX3Abp9B_SxF5raAnNMz3c-EZdE0OrlWv2Tx4o5w'}

    @pytest.mark.unit
    @patch('chatter.api.profiles.get_profile_service')
    async def test_create_profile_success(self, mock_get_service, client: AsyncClient, auth_headers: dict):
        """Test successful profile creation."""
        # Mock the profile service
        mock_service = AsyncMock()
        mock_profile = {
            "id": "profile-123",
            "name": "Test Profile",
            "llm_provider": "openai",
            "llm_model": "gpt-4",
            "created_by": "testuser",
            "created_at": "2024-01-01T12:00:00Z",
            "updated_at": "2024-01-01T12:00:00Z"
        }
        mock_service.create_profile.return_value = mock_profile
        mock_get_service.return_value = mock_service
    
        profile_data = {
            "name": "Test Profile",
            "llm_provider": "openai",
            "llm_model": "gpt-4",
            "description": "Test profile description",
            "temperature": 0.7,
            "max_tokens": 1000
        }
    
>       response = await client.post("/api/v1/profiles/", json=profile_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:100: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5481' coro=<TestProfilesUnit.test_create_profile_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyUzJUQVpLQjNXVjBHQ0IxRkVDNCIsImVtYWlsIjoidGVzdHVzZXJjZGViZWJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2RlYmViIiwianRpIjoiNTMyODBkZWEtMTBmMi00MmU0LTk5MjQtYTA5N2VkNGEyM2M2IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzA4OCwic2Vzc2lvbl9pZCI6ImM5YjZjYjg2LTZkMTAtNDY4MS05OThiLTkyZjA4MTViMWNlMiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODg4fQ.THwUX3Abp9B_SxF5raAnNMz3c-EZdE0OrlWv2Tx4o5w
______________ TestProfilesUnit.test_create_profile_invalid_data _______________

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a2270>
client = <httpx.AsyncClient object at 0x7f842494dd90>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyVEJESEY5Q0NNU0hCSlRIUVYxMyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODkwfQ.dcDZj0qTcqOD5zwPoqwUu52WkChvghkiBBxu84aorUs'}

    @pytest.mark.unit
    async def test_create_profile_invalid_data(self, client: AsyncClient, auth_headers: dict):
        """Test profile creation with invalid data."""
        # Missing required fields
        profile_data = {
            "name": "Test Profile"
            # Missing llm_provider and llm_model
        }
    
>       response = await client.post("/api/v1/profiles/", json=profile_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5495' coro=<TestProfilesUnit.test_create_profile_invalid_data() running at /home/yam/chatter/tests/test_profiles_unit.py:117> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyVEJESEY5Q0NNU0hCSlRIUVYxMyIsImVtYWlsIjoidGVzdHVzZXJiZmVkZmRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYmZlZGZkIiwianRpIjoiYzlhYjQ1ZmItMGQ4ZC00OTAzLTgwNzEtODQ3YWM1ODlhMTIxIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzA5MCwic2Vzc2lvbl9pZCI6IjA5MzFmZGRlLTc5MjgtNGVhNy1hZjA0LWQwMTczODAwYzRlYSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODkwfQ.dcDZj0qTcqOD5zwPoqwUu52WkChvghkiBBxu84aorUs
_______________ TestProfilesUnit.test_create_profile_rate_limit ________________

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a2630>
mock_get_rate_limiter = <MagicMock name='get_unified_rate_limiter' id='140204450077760'>
client = <httpx.AsyncClient object at 0x7f83e47148c0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyVk5DUlhXOUZOWk5OSFo5Q1BLNiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODkxfQ.lYC8nDZIUp2hxg3FfrZSemLxdFPLk43odZYdTSdOyYU'}

    @pytest.mark.unit
    @patch('chatter.api.profiles.get_unified_rate_limiter')
    async def test_create_profile_rate_limit(self, mock_get_rate_limiter, client: AsyncClient, auth_headers: dict):
        """Test profile creation rate limiting."""
        from chatter.utils.unified_rate_limiter import RateLimitExceeded
    
        # Mock rate limiter to raise exception
        mock_rate_limiter = AsyncMock()
        mock_rate_limiter.check_rate_limit.side_effect = RateLimitExceeded(
            message="Rate limit exceeded",
            limit=5,
            window=300,
            remaining=0
        )
        mock_get_rate_limiter.return_value = mock_rate_limiter
    
        profile_data = {
            "name": "Test Profile",
            "llm_provider": "openai",
            "llm_model": "gpt-4"
        }
    
>       response = await client.post("/api/v1/profiles/", json=profile_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:142: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5509' coro=<TestProfilesUnit.test_create_profile_rate_limit() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyVk5DUlhXOUZOWk5OSFo5Q1BLNiIsImVtYWlsIjoidGVzdHVzZXJhZWNiZGFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWVjYmRhIiwianRpIjoiZGU3MGZiOTYtMzNjNS00NDE5LWJmMzYtZmQ3ZWJiMGYwNDhmIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzA5MSwic2Vzc2lvbl9pZCI6IjFhOTJjZjFmLTZjMjQtNDk1MC1hNjBlLTJkMjJiZDYyOWMwYyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODkxfQ.lYC8nDZIUp2hxg3FfrZSemLxdFPLk43odZYdTSdOyYU
_________________ TestProfilesUnit.test_list_profiles_success __________________

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a29f0>
mock_get_service = <AsyncMock name='get_profile_service' id='140204296664992'>
client = <httpx.AsyncClient object at 0x7f83db4c6360>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyV1k2U0NZWFlUV0ZIOFdWWDdWWiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODkyfQ.bfBA-YQNJsxcVU9i2_lS5HgUTb0VXk7wzoBJnXk46ZE'}

    @pytest.mark.unit
    @patch('chatter.api.profiles.get_profile_service')
    async def test_list_profiles_success(self, mock_get_service, client: AsyncClient, auth_headers: dict):
        """Test successful profile listing."""
        mock_service = AsyncMock()
        mock_profiles = [
            {
                "id": "profile-1",
                "name": "Profile 1",
                "llm_provider": "openai",
                "llm_model": "gpt-4",
                "created_at": "2024-01-01T12:00:00Z"
            },
            {
                "id": "profile-2",
                "name": "Profile 2",
                "llm_provider": "anthropic",
                "llm_model": "claude-3-opus",
                "created_at": "2024-01-01T13:00:00Z"
            }
        ]
    
        mock_service.list_profiles.return_value = {
            "profiles": mock_profiles,
            "total": 2,
            "page": 1,
            "per_page": 10
        }
        mock_get_service.return_value = mock_service
    
>       response = await client.get("/api/v1/profiles", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:175: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5523' coro=<TestProfilesUnit.test_list_profiles_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyV1k2U0NZWFlUV0ZIOFdWWDdWWiIsImVtYWlsIjoidGVzdHVzZXJkZGVmYWFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGRlZmFhIiwianRpIjoiMGRmNDgwYzgtYTQyMC00YTc1LWEwM2UtZGE0N2QxZjgwNjhhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzA5Miwic2Vzc2lvbl9pZCI6IjRjMjlkNGUxLTQxNjQtNDY4YS05NjQxLWRhODY4MDVjOTJjNyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODkyfQ.bfBA-YQNJsxcVU9i2_lS5HgUTb0VXk7wzoBJnXk46ZE
__________________ TestProfilesUnit.test_get_profile_success ___________________

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a2db0>
mock_get_service = <AsyncMock name='get_profile_service' id='140204462210320'>
client = <httpx.AsyncClient object at 0x7f83e52a7d70>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyWTZHWUg1OVYyMlRUQzREQkFLSyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODkzfQ.WIjmaldVb3KkFJCZwG09emjNcFmMbysZ-MjKUaE5rZs'}

    @pytest.mark.unit
    @patch('chatter.api.profiles.get_profile_service')
    async def test_get_profile_success(self, mock_get_service, client: AsyncClient, auth_headers: dict):
        """Test successful profile retrieval."""
        mock_service = AsyncMock()
        mock_profile = {
            "id": "profile-123",
            "name": "Test Profile",
            "llm_provider": "openai",
            "llm_model": "gpt-4",
            "temperature": 0.7,
            "max_tokens": 1000,
            "created_at": "2024-01-01T12:00:00Z"
        }
    
        mock_service.get_profile.return_value = mock_profile
        mock_get_service.return_value = mock_service
    
>       response = await client.get("/api/v1/profiles/profile-123", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:200: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5537' coro=<TestProfilesUnit.test_get_profile_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIyWTZHWUg1OVYyMlRUQzREQkFLSyIsImVtYWlsIjoidGVzdHVzZXJhZmNiZGRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWZjYmRkIiwianRpIjoiZTJiYzQzMDctNGU4Zi00OWE5LTg2ODgtMTQyY2I3ZGE2ZDQwIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzA5Mywic2Vzc2lvbl9pZCI6IjUzODYwMTg5LTI2Y2YtNDhiYy1hYWJjLThlZGU4Y2JmZTUyMiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODkzfQ.WIjmaldVb3KkFJCZwG09emjNcFmMbysZ-MjKUaE5rZs
_________________ TestProfilesUnit.test_get_profile_not_found __________________

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a3170>
mock_get_service = <AsyncMock name='get_profile_service' id='140204305604944'>
client = <httpx.AsyncClient object at 0x7f83dbd4c410>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzMFdWVEFXVEExNVBNR0RCN0NZTSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODk2fQ.mMS4AZwAogrBs3CPSUlj5fOo9dxI0dDV6eze0mKnJ4s'}

    @pytest.mark.unit
    @patch('chatter.api.profiles.get_profile_service')
    async def test_get_profile_not_found(self, mock_get_service, client: AsyncClient, auth_headers: dict):
        """Test profile retrieval for non-existent profile."""
        mock_service = AsyncMock()
        mock_service.get_profile.side_effect = ProfileError("Profile not found")
        mock_get_service.return_value = mock_service
    
>       response = await client.get("/api/v1/profiles/nonexistent", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:216: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5551' coro=<TestProfilesUnit.test_get_profile_not_found() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzMFdWVEFXVEExNVBNR0RCN0NZTSIsImVtYWlsIjoidGVzdHVzZXJmYmJjZWJAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmJiY2ViIiwianRpIjoiOTZjMGEyM2QtNjgyNy00MWJmLWE3MjUtODUwMWY2NDY1OGM5IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzA5Niwic2Vzc2lvbl9pZCI6IjM3MDcwZDFiLWMxODItNDFjYS1iODZmLWY2N2FiMDQ0OWM3NiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODk2fQ.mMS4AZwAogrBs3CPSUlj5fOo9dxI0dDV6eze0mKnJ4s
_________________ TestProfilesUnit.test_update_profile_success _________________

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a3530>
mock_get_service = <AsyncMock name='get_profile_service' id='140204449886720'>
client = <httpx.AsyncClient object at 0x7f83e46e7710>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzMjVLVDdIN0MyR1M3VjQxQVBaNCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODk4fQ.0hKRzyxZUGffBGrfj9v6yRiKLyD9inVxWADK-Yd9qDU'}

    @pytest.mark.unit
    @patch('chatter.api.profiles.get_profile_service')
    async def test_update_profile_success(self, mock_get_service, client: AsyncClient, auth_headers: dict):
        """Test successful profile update."""
        mock_service = AsyncMock()
        mock_updated_profile = {
            "id": "profile-123",
            "name": "Updated Profile",
            "llm_provider": "openai",
            "llm_model": "gpt-4",
            "temperature": 0.8,
            "updated_at": "2024-01-01T13:00:00Z"
        }
    
        mock_service.update_profile.return_value = mock_updated_profile
        mock_get_service.return_value = mock_service
    
        update_data = {
            "name": "Updated Profile",
            "temperature": 0.8
        }
    
>       response = await client.put("/api/v1/profiles/profile-123", json=update_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:241: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1896: in put
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5565' coro=<TestProfilesUnit.test_update_profile_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzMjVLVDdIN0MyR1M3VjQxQVBaNCIsImVtYWlsIjoidGVzdHVzZXJhZmZjY2JAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWZmY2NiIiwianRpIjoiMmViYWIyNzctZWIxNi00MzVjLTk4NWYtZWQ1ZjZjZmM4OTcyIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzA5OCwic2Vzc2lvbl9pZCI6IjczYjk5NmIzLWZmZGUtNDRjNS04ZjJiLWJhNjJjN2E4MjlmZSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODk4fQ.0hKRzyxZUGffBGrfj9v6yRiKLyD9inVxWADK-Yd9qDU
_________________ TestProfilesUnit.test_delete_profile_success _________________

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a38f0>
mock_get_service = <AsyncMock name='get_profile_service' id='140204447183552'>
client = <httpx.AsyncClient object at 0x7f83e4451f70>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzM0VQQ1hSUk0wUlNIRlY1RjhQNiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODk5fQ.CmseF_tqKHIY7mvnImit1a6J7l9TLNcdGJ571dYQFaw'}

    @pytest.mark.unit
    @patch('chatter.api.profiles.get_profile_service')
    async def test_delete_profile_success(self, mock_get_service, client: AsyncClient, auth_headers: dict):
        """Test successful profile deletion."""
        mock_service = AsyncMock()
        mock_service.delete_profile.return_value = True
        mock_get_service.return_value = mock_service
    
>       response = await client.delete("/api/v1/profiles/profile-123", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1966: in delete
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5579' coro=<TestProfilesUnit.test_delete_profile_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzM0VQQ1hSUk0wUlNIRlY1RjhQNiIsImVtYWlsIjoidGVzdHVzZXJlYmFhZmVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWJhYWZlIiwianRpIjoiZmY2MDZjNzUtZTZhNS00NzVhLWIyMGMtNmZiZTc5NmI3ZGU5IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzA5OSwic2Vzc2lvbl9pZCI6ImE1ZmIwYzVkLTA4ODAtNGJiOS1iMmU0LTI3MTM3NGQyODRjYyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0ODk5fQ.CmseF_tqKHIY7mvnImit1a6J7l9TLNcdGJ571dYQFaw
__________________ TestProfilesUnit.test_test_profile_success __________________

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a32c0>
mock_get_service = <AsyncMock name='get_profile_service' id='140204449313904'>
client = <httpx.AsyncClient object at 0x7f840c69d100>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzNFJCNVFFNVg5S0sxSzk5Mkg3SiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0OTAwfQ.cfWoY689BP5cznuL2WWe4oSQq6Jd42hMbPzPH4VVNpk'}

    @pytest.mark.unit
    @patch('chatter.api.profiles.get_profile_service')
    async def test_test_profile_success(self, mock_get_service, client: AsyncClient, auth_headers: dict):
        """Test successful profile testing."""
        mock_service = AsyncMock()
        mock_test_result = {
            "profile_id": "profile-123",
            "test_message": "Hello, World!",
            "response": "Hello! How can I assist you today?",
            "response_time": 1.25,
            "success": True
        }
    
        mock_service.test_profile.return_value = mock_test_result
        mock_get_service.return_value = mock_service
    
        test_data = {
            "message": "Hello, World!",
            "include_metrics": True
        }
    
>       response = await client.post("/api/v1/profiles/profile-123/test", json=test_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:284: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5593' coro=<TestProfilesUnit.test_test_profile_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzNFJCNVFFNVg5S0sxSzk5Mkg3SiIsImVtYWlsIjoidGVzdHVzZXJlY2VkYmNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWNlZGJjIiwianRpIjoiNDc5ZDgwNjItOWYxZi00NDM2LTgwNGEtZDMxMjc0ZGY2OTBiIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzEwMCwic2Vzc2lvbl9pZCI6IjUwMGY4ODQzLWNiZWItNDNjZi1hN2RiLWUxZGZiZDk1MGQwYiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0OTAwfQ.cfWoY689BP5cznuL2WWe4oSQq6Jd42hMbPzPH4VVNpk
_________________ TestProfilesUnit.test_clone_profile_success __________________

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a2570>
mock_get_service = <AsyncMock name='get_profile_service' id='140204596173600'>
client = <httpx.AsyncClient object at 0x7f83ed2693a0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzNjBCOThHQThCWFYzQk0xUE1KRyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0OTAxfQ.XVYN2nqA17P-Bk17N4guZkQiqgewEAfysEF3U58LJTA'}

    @pytest.mark.unit
    @patch('chatter.api.profiles.get_profile_service')
    async def test_clone_profile_success(self, mock_get_service, client: AsyncClient, auth_headers: dict):
        """Test successful profile cloning."""
        mock_service = AsyncMock()
        mock_cloned_profile = {
            "id": "cloned-profile-456",
            "name": "Cloned Profile",
            "llm_provider": "openai",
            "llm_model": "gpt-4",
            "created_at": "2024-01-01T14:00:00Z"
        }
    
        mock_service.clone_profile.return_value = mock_cloned_profile
        mock_get_service.return_value = mock_service
    
        clone_data = {
            "name": "Cloned Profile",
            "include_settings": True
        }
    
>       response = await client.post("/api/v1/profiles/profile-123/clone", json=clone_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:312: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5607' coro=<TestProfilesUnit.test_clone_profile_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzNjBCOThHQThCWFYzQk0xUE1KRyIsImVtYWlsIjoidGVzdHVzZXJmZmVkZmVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZmZlZGZlIiwianRpIjoiOGQ1OGYxZTgtZmJmOS00ZWVhLWJlN2MtNTlmOTNiYWVlYWQxIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzEwMSwic2Vzc2lvbl9pZCI6ImNlNjVmOWJhLWYxYmUtNGZkNy1hMmRlLTJmN2Y3YTkwYjRmYiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0OTAxfQ.XVYN2nqA17P-Bk17N4guZkQiqgewEAfysEF3U58LJTA
_______________ TestProfilesUnit.test_get_profile_stats_success ________________

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a1a30>
mock_get_service = <AsyncMock name='get_profile_service' id='140204591512368'>
client = <httpx.AsyncClient object at 0x7f83ecdf5f70>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzN0FBSEo1MEVRQzFSUlIwNU1GUSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0OTAzfQ.KgHLFWs8N6yiYWXi_YeYXIky98mkUkw6qi2V1eUJ9r0'}

    @pytest.mark.unit
    @patch('chatter.api.profiles.get_profile_service')
    async def test_get_profile_stats_success(self, mock_get_service, client: AsyncClient, auth_headers: dict):
        """Test successful profile stats retrieval."""
        mock_service = AsyncMock()
        mock_stats = {
            "total_profiles": 25,
            "profiles_by_provider": {
                "openai": 15,
                "anthropic": 8,
                "google": 2
            },
            "active_profiles": 20,
            "average_usage_per_profile": 45.5
        }
    
        mock_service.get_profile_stats.return_value = mock_stats
        mock_get_service.return_value = mock_service
    
>       response = await client.get("/api/v1/profiles/stats/overview", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:338: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5621' coro=<TestProfilesUnit.test_get_profile_stats_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzN0FBSEo1MEVRQzFSUlIwNU1GUSIsImVtYWlsIjoidGVzdHVzZXJkZGRjYmFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGRkY2JhIiwianRpIjoiYTAyYzYzM2UtYjg0My00ZTA3LTk3YjEtMTgxOTYyNmE1ODMwIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzEwMywic2Vzc2lvbl9pZCI6IjdhOGQ1ZGIwLTU2MmMtNDA4MS1hNGQ2LTk5MmYzN2Y4NDJkZSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0OTAzfQ.KgHLFWs8N6yiYWXi_YeYXIky98mkUkw6qi2V1eUJ9r0
____________ TestProfilesUnit.test_get_available_providers_success _____________

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a0d40>
mock_get_service = <AsyncMock name='get_profile_service' id='140204589889680'>
client = <httpx.AsyncClient object at 0x7f83ecc6aff0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzOE1CTjc3MDlNODhGRVpGN1hLMiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0OTA0fQ.77y19kuvOa0C81lhLPg-IjrkzCfpQ97_JI8WfIuyjRY'}

    @pytest.mark.unit
    @patch('chatter.api.profiles.get_profile_service')
    async def test_get_available_providers_success(self, mock_get_service, client: AsyncClient, auth_headers: dict):
        """Test successful available providers retrieval."""
        mock_service = AsyncMock()
        mock_providers = {
            "openai": {
                "models": ["gpt-4", "gpt-3.5-turbo", "gpt-4-turbo"],
                "supports_streaming": True,
                "max_tokens": 4096
            },
            "anthropic": {
                "models": ["claude-3-opus", "claude-3-sonnet", "claude-3-haiku"],
                "supports_streaming": True,
                "max_tokens": 8192
            }
        }
    
        mock_service.get_available_providers.return_value = mock_providers
        mock_get_service.return_value = mock_service
    
>       response = await client.get("/api/v1/profiles/providers/available", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:367: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5635' coro=<TestProfilesUnit.test_get_available_providers_success() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzOE1CTjc3MDlNODhGRVpGN1hLMiIsImVtYWlsIjoidGVzdHVzZXJlZmVmZWFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZWZlZmVhIiwianRpIjoiNjBmNTgxNDUtZTY1Ni00ZGU2LTgwNWEtZGQ4MWMyYmVjM2VhIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzEwNCwic2Vzc2lvbl9pZCI6ImQzYzEyMDYzLWY0OGQtNGI5Ny04NWEwLTk4Yjc3YWNkMTNkZiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0OTA0fQ.77y19kuvOa0C81lhLPg-IjrkzCfpQ97_JI8WfIuyjRY
_____________ TestProfilesUnit.test_profile_service_error_handling _____________

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3a3c80>
mock_get_service = <AsyncMock name='get_profile_service' id='140204470302960'>
client = <httpx.AsyncClient object at 0x7f83e5a5e4b0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzOVdCSFI2U0JNUzZRMTcwOUg4OCIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0OTA1fQ.FOlWWvpwT5LhuUYQLr3v0wGpE-hAnMmsZPEGTtyfimo'}

    @pytest.mark.unit
    @patch('chatter.api.profiles.get_profile_service')
    async def test_profile_service_error_handling(self, mock_get_service, client: AsyncClient, auth_headers: dict):
        """Test profile service error handling."""
        mock_service = AsyncMock()
        mock_service.create_profile.side_effect = Exception("Database error")
        mock_get_service.return_value = mock_service
    
        profile_data = {
            "name": "Test Profile",
            "llm_provider": "openai",
            "llm_model": "gpt-4"
        }
    
>       response = await client.post("/api/v1/profiles/", json=profile_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:389: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5649' coro=<TestProfilesUnit.test_profile_service_error_handling() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzOVdCSFI2U0JNUzZRMTcwOUg4OCIsImVtYWlsIjoidGVzdHVzZXJjZWVmY2VAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyY2VlZmNlIiwianRpIjoiN2I2ZTUyYmUtODFkZS00YzJiLWFmZTAtZjYyNmZhNjE3ZGMyIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzEwNSwic2Vzc2lvbl9pZCI6IjU4N2M3NzkzLWJlNjYtNDE0Mi1hMzk0LWNiZmQxOTc3NzYwYyIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0OTA1fQ.FOlWWvpwT5LhuUYQLr3v0wGpE-hAnMmsZPEGTtyfimo
_______________ TestProfilesUnit.test_profile_validation_errors ________________

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3b8080>
mock_get_service = <AsyncMock name='get_profile_service' id='140204285751424'>
client = <httpx.AsyncClient object at 0x7f83daa5f200>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzQjU2S1lZOEFBWlFCR1pBREhEVyIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0OTA3fQ.7sxi2LVpK6pI5TD-eGnRAXreEVTyzhNTOMmw2Sv6U5U'}

    @pytest.mark.unit
    @patch('chatter.api.profiles.get_profile_service')
    async def test_profile_validation_errors(self, mock_get_service, client: AsyncClient, auth_headers: dict):
        """Test profile data validation errors."""
        # Test invalid provider
        invalid_profile_data = {
            "name": "Test Profile",
            "llm_provider": "invalid_provider",
            "llm_model": "gpt-4"
        }
    
>       response = await client.post("/api/v1/profiles/", json=invalid_profile_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:403: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5663' coro=<TestProfilesUnit.test_profile_validation_errors() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzQjU2S1lZOEFBWlFCR1pBREhEVyIsImVtYWlsIjoidGVzdHVzZXJhYWVlZGZAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWFlZWRmIiwianRpIjoiOTRkZDlmNWEtYmY0MS00YTI2LTgwMWQtNjg5ZTVmYWQyNzgxIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzEwNywic2Vzc2lvbl9pZCI6ImIyYjAxODFlLTBlZGMtNGNiYi05YjRiLTU4ZDI4OWJlMDJjZSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0OTA3fQ.7sxi2LVpK6pI5TD-eGnRAXreEVTyzhNTOMmw2Sv6U5U
________________ TestProfilesUnit.test_list_profiles_filtering _________________

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3b8440>
mock_get_service = <AsyncMock name='get_profile_service' id='140204448642544'>
client = <httpx.AsyncClient object at 0x7f83e45b63c0>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzQ0VBNlpINkgzUlJTM0VXSjMwUSIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0OTA4fQ.iGIVgMetEiFr_oeDFonKaZfzReP_YRLMBvT_J65NGOw'}

    @pytest.mark.unit
    @patch('chatter.api.profiles.get_profile_service')
    async def test_list_profiles_filtering(self, mock_get_service, client: AsyncClient, auth_headers: dict):
        """Test profile listing with filters."""
        mock_service = AsyncMock()
        mock_service.list_profiles.return_value = {
            "profiles": [],
            "total": 0,
            "page": 1,
            "per_page": 10
        }
        mock_get_service.return_value = mock_service
    
        # Test with provider filter
>       response = await client.get("/api/v1/profiles?provider=openai", headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:430: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5677' coro=<TestProfilesUnit.test_list_profiles_filtering() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzQ0VBNlpINkgzUlJTM0VXSjMwUSIsImVtYWlsIjoidGVzdHVzZXJkYWZhZWFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyZGFmYWVhIiwianRpIjoiODY1YTU4MDctOGMxOS00OGFlLThiMWEtNDU5OGY0ZTFiMmFiIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzEwOCwic2Vzc2lvbl9pZCI6IjFmNTMzNTFjLTViYmItNGMxMi05MGEwLWYzODAyYTU0ZDExNSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0OTA4fQ.iGIVgMetEiFr_oeDFonKaZfzReP_YRLMBvT_J65NGOw
________________ TestProfilesUnit.test_test_profile_rate_limit _________________

self = <tests.test_profiles_unit.TestProfilesUnit object at 0x7f84ca3b8830>
mock_get_service = <AsyncMock name='get_profile_service' id='140204456230256'>
client = <httpx.AsyncClient object at 0x7f83e4cf3f20>
auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzRFFaQVlFRDJERFRLRDQ1WVdRSiIsImVtYWl...25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0OTA5fQ.JpKbtuA6Sq92Pw2C-slCuU8AMBUfYpa4RRFDtfuSD3U'}

    @pytest.mark.unit
    @patch('chatter.api.profiles.get_profile_service')
    async def test_test_profile_rate_limit(self, mock_get_service, client: AsyncClient, auth_headers: dict):
        """Test profile testing rate limiting."""
        # This would test rate limiting on profile testing if implemented
        mock_service = AsyncMock()
        mock_service.test_profile.return_value = {
            "success": True,
            "response": "Test response"
        }
        mock_get_service.return_value = mock_service
    
        test_data = {"message": "Test message"}
    
>       response = await client.post("/api/v1/profiles/profile-123/test", json=test_data, headers=auth_headers)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_profiles_unit.py:452: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/httpx/_client.py:1859: in post
    return await self.request(
../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send
    response = await self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth
    response = await self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_transports/asgi.py:170: in handle_async_request
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/cors.py:85: in __call__
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/exceptions.py:63: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:716: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:736: in app
    await route.handle(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:290: in handle
    await self.app(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/routing.py:78: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    raise exc
../.local/lib/python3.12/site-packages/starlette/_exception_handler.py:42: in wrapped_app
    await app(scope, receive, sender)
../.local/lib/python3.12/site-packages/starlette/routing.py:75: in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/routing.py:292: in app
    solved_result = await solve_dependencies(
../.local/lib/python3.12/site-packages/fastapi/dependencies/utils.py:638: in solve_dependencies
    solved = await call(**solved_result.values)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/api/auth.py:99: in get_current_user
    return await auth_service.get_current_user(credentials.credentials)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:683: in get_current_user
    user = await self.get_user_by_id(user_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
chatter/core/auth.py:281: in get_user_by_id
    result = await self.session.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/ext/asyncio/session.py:463: in execute
    result = await greenlet_spawn(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:201: in greenlet_spawn
    result = context.throw(*sys.exc_info())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2365: in execute
    return self._execute_internal(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/session.py:2251: in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
../.local/lib/python3.12/site-packages/sqlalchemy/orm/context.py:306: in orm_execute_statement
    result = conn.execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1419: in execute
    return meth(
../.local/lib/python3.12/site-packages/sqlalchemy/sql/elements.py:526: in _execute_on_connection
    return connection._execute_clauseelement(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1641: in _execute_clauseelement
    ret = self._execute_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1846: in _execute_context
    return self._exec_single_context(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1986: in _exec_single_context
    self._handle_dbapi_exception(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:2358: in _handle_dbapi_exception
    raise exc_info[1].with_traceback(exc_info[2])
../.local/lib/python3.12/site-packages/sqlalchemy/engine/base.py:1967: in _exec_single_context
    self.dialect.do_execute(
../.local/lib/python3.12/site-packages/sqlalchemy/engine/default.py:951: in do_execute
    cursor.execute(statement, parameters)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:580: in execute
    self._adapt_connection.await_(
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:132: in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/util/_concurrency_py3k.py:196: in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:558: in _prepare_and_execute
    self._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:508: in _handle_exception
    self._adapt_connection._handle_exception(error)
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:794: in _handle_exception
    raise error
../.local/lib/python3.12/site-packages/sqlalchemy/dialects/postgresql/asyncpg.py:545: in _prepare_and_execute
    self._rows = deque(await prepared_stmt.fetch(*parameters))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:176: in fetch
    data = await self.__bind_execute(args, 0, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:267: in __bind_execute
    data, status, _ = await self.__do_execute(
../.local/lib/python3.12/site-packages/asyncpg/prepared_stmt.py:256: in __do_execute
    return await executor(protocol)
           ^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

>   ???
E   RuntimeError: Task <Task pending name='Task-5691' coro=<TestProfilesUnit.test_test_profile_rate_limit() running at /usr/lib64/python3.12/unittest/mock.py:1413> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop

asyncpg/protocol/protocol.pyx:206: RuntimeError
---------------------------- Captured stdout setup -----------------------------
ACCESS TOKEN eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFIzRFFaQVlFRDJERFRLRDQ1WVdRSiIsImVtYWlsIjoidGVzdHVzZXJhYmRkYmRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyYWJkZGJkIiwianRpIjoiYjM1ZmQxNWUtYjI2YS00YjFlLWEyYWEtM2E1MmNiNzdhMTk4IiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMzEwOSwic2Vzc2lvbl9pZCI6IjcxMDZlYzM3LThiNzItNGRiMC1hYTE0LWExOWFiM2FkODI5NSIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0OTA5fQ.JpKbtuA6Sq92Pw2C-slCuU8AMBUfYpa4RRFDtfuSD3U
__________ TestSecureTemplateRenderer.test_secure_f_string_rendering ___________

self = <tests.test_prompts_api_security.TestSecureTemplateRenderer object at 0x7f84ca104b00>

    def test_secure_f_string_rendering(self):
        """Test secure f-string rendering."""
        template = "Hello ${name}, welcome to ${platform}!"
        variables = {"name": "Alice", "platform": "Chatter"}
    
        result = SecureTemplateRenderer.render_secure_f_string(template, variables)
>       assert result == "Hello Alice, welcome to Chatter!"
E       AssertionError: assert 'Hello ${name... ${platform}!' == 'Hello Alice,...e to Chatter!'
E         
E         - Hello Alice, welcome to Chatter!
E         + Hello ${name}, welcome to ${platform}!

tests/test_prompts_api_security.py:27: AssertionError
__________ TestSecureTemplateRenderer.test_template_syntax_validation __________

self = <tests.test_prompts_api_security.TestSecureTemplateRenderer object at 0x7f84ca1053a0>

    def test_template_syntax_validation(self):
        """Test template syntax validation."""
        # Valid f-string template
        result = SecureTemplateRenderer.validate_template_syntax(
            "Hello {name}!", "f-string"
        )
        assert result['valid'] is True
        assert "name" in result['variables']
    
        # Invalid variable name
        result = SecureTemplateRenderer.validate_template_syntax(
            "Hello {123invalid}!", "f-string"
        )
>       assert result['valid'] is False
E       assert True is False

tests/test_prompts_api_security.py:86: AssertionError
_________________ TestPromptService.test_create_prompt_success _________________

self = <tests.test_prompts_api_security.TestPromptService object at 0x7f84ca1064b0>
prompt_service = <chatter.core.prompts.PromptService object at 0x7f8444530140>
mock_session = <AsyncMock id='140206058706544'>

    @pytest.mark.asyncio
    async def test_create_prompt_success(self, prompt_service, mock_session):
        """Test successful prompt creation."""
        prompt_data = PromptCreate(
            name="Test Prompt",
            content="Hello {name}!",
            prompt_type=PromptType.TEMPLATE,
            category=PromptCategory.GENERAL,
        )
    
        # Mock database interactions
        mock_session.execute.return_value.scalar_one_or_none.return_value = None
        mock_session.add = MagicMock()
        mock_session.commit = AsyncMock()
        mock_session.refresh = AsyncMock()
    
        with patch('chatter.models.prompt.Prompt') as MockPrompt:
            mock_prompt_instance = MockPrompt.return_value
            mock_prompt_instance.id = "test-id"
            mock_prompt_instance.name = "Test Prompt"
    
>           result = await prompt_service.create_prompt("user-id", prompt_data)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_prompts_api_security.py:215: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.core.prompts.PromptService object at 0x7f8444530140>
user_id = 'user-id'
prompt_data = PromptCreate(name='Test Prompt', description=None, prompt_type=<PromptType.TEMPLATE: 'template'>, category=<PromptCate...oviders=None, is_chain=False, chain_steps=None, parent_prompt_id=None, is_public=False, tags=None, extra_metadata=None)

    async def create_prompt(
        self, user_id: str, prompt_data: PromptCreate
    ) -> Prompt:
        """Create a new prompt.
    
        Args:
            user_id: Owner user ID
            prompt_data: Prompt creation data
    
        Returns:
            Created prompt
    
        Raises:
            PromptError: If prompt creation fails
        """
        from chatter.utils.prompt_audit import PromptAuditLogger
    
        try:
            # Check for duplicate prompt names for this user
            existing_result = await self.session.execute(
                select(Prompt).where(
                    and_(
                        Prompt.owner_id == user_id,
                        Prompt.name == prompt_data.name,
                    )
                )
            )
            existing_prompt = existing_result.scalar_one_or_none()
    
            if existing_prompt:
                PromptAuditLogger.log_security_incident(
                    prompt_id=None,
                    user_id=user_id,
                    incident_type="duplicate_name_attempt",
                    description=f"Attempted to create prompt with existing name: {prompt_data.name}",
                    severity="low"
                )
>               raise PromptError(
                    "Prompt with this name already exists"
                ) from None
E               chatter.core.prompts.PromptError: Prompt with this name already exists

chatter/core/prompts.py:70: PromptError
------------------------------ Captured log call -------------------------------
WARNING  chatter.utils.prompt_audit:prompt_audit.py:175 [2m2025-09-05T20:11:51.869158Z[0m [[33m[1mwarning  [0m] [1mSecurity incident detected    [0m [[34m[1mchatter.utils.prompt_audit[0m] [36maudit_event[0m=[35m{'event_type': 'security_incident', 'timestamp': '2025-09-05T20:11:51.869099+00:00', 'prompt_id': None, 'user_id': 'user-id', 'incident_type': 'duplicate_name_attempt', 'description': 'Attempted to create prompt with existing name: Test Prompt', 'severity': 'low', 'metadata': {}}[0m [36mincident_type[0m=[35mduplicate_name_attempt[0m [36mprompt_id[0m=[35mNone[0m [36mseverity[0m=[35mlow[0m [36muser_id[0m=[35muser-id[0m
___________ TestSecurityFeatures.test_template_injection_prevention ____________

self = <tests.test_prompts_api_security.TestSecurityFeatures object at 0x7f84ca105ac0>

    def test_template_injection_prevention(self):
        """Test that template injection attacks are prevented."""
        # Test various injection attempts
        injection_attempts = [
            "__import__('os').system('rm -rf /')",
            "eval('malicious_code')",
            "exec('import os; os.system(\"ls\")')",
            "{{''.constructor.constructor('alert(1)')()}}",  # JavaScript template injection
        ]
    
        for attempt in injection_attempts:
            variables = {"user_input": attempt}
    
            # Should not raise an exception and should sanitize the input
            try:
                sanitized = SecureTemplateRenderer._sanitize_variables(variables)
                # The sanitized version should not contain dangerous patterns
>               assert "import" not in sanitized.get("user_input", "")
E               assert 'import' not in "__import__(...('rm -rf /')"
E                 
E                 'import' is contained here:
E                   __import__('os').system('rm -rf /')
E                 ?   ++++++

tests/test_prompts_api_security.py:365: AssertionError
______________ TestSecurityFeatures.test_variable_name_validation ______________

self = <tests.test_prompts_api_security.TestSecurityFeatures object at 0x7f84ca104f20>

    def test_variable_name_validation(self):
        """Test that only safe variable names are allowed."""
        invalid_names = [
            "123invalid",  # Starts with number
            "invalid-name",  # Contains hyphen
            "invalid.name",  # Contains dot
            "invalid name",  # Contains space
            "__special__",  # Double underscore (potentially dangerous)
        ]
    
        for invalid_name in invalid_names:
            variables = {invalid_name: "value"}
    
>           with pytest.raises(ValueError, match="Invalid variable name"):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E           Failed: DID NOT RAISE <class 'ValueError'>

tests/test_prompts_api_security.py:405: Failed
_____________ TestStreamingEvent.test_streaming_event_data_minimal _____________

self = <tests.test_streaming.TestStreamingEvent object at 0x7f84ca1531d0>

    def test_streaming_event_data_minimal(self):
        """Test creating StreamingEvent with minimal fields."""
>       event_data = StreamingEvent(
            event_type=StreamingEventType.START
        )
E       TypeError: StreamingEvent.__init__() got an unexpected keyword argument 'event_type'

tests/test_streaming.py:59: TypeError
_________ TestStreamingEvent.test_streaming_event_data_auto_timestamp __________

self = <tests.test_streaming.TestStreamingEvent object at 0x7f84ca1533b0>

    def test_streaming_event_data_auto_timestamp(self):
        """Test that timestamp is automatically set if not provided."""
        before = time.time()
>       event_data = StreamingEvent(
            event_type=StreamingEventType.COMPLETE
        )
E       TypeError: StreamingEvent.__init__() got an unexpected keyword argument 'event_type'

tests/test_streaming.py:71: TypeError
__________ TestStreamingEvent.test_streaming_event_data_with_metadata __________

self = <tests.test_streaming.TestStreamingEvent object at 0x7f84ca153590>

    def test_streaming_event_data_with_metadata(self):
        """Test StreamingEvent with complex metadata."""
        metadata = {
            "tool_name": "calculator",
            "input": {"a": 1, "b": 2},
            "result": {"sum": 3},
            "execution_time": 0.5
        }
    
>       event_data = StreamingEvent(
            event_type=StreamingEventType.TOOL_CALL_END,
            content="Tool execution completed",
            metadata=metadata
        )
E       TypeError: StreamingEvent.__init__() got an unexpected keyword argument 'event_type'

tests/test_streaming.py:87: TypeError
_____________________ TestStreamingService.test_end_stream _____________________

self = <tests.test_streaming.TestStreamingService object at 0x7f84ca1744a0>
mock_record_metrics = <MagicMock name='record_workflow_metrics' id='140204264367472'>

    @pytest.mark.asyncio
    @patch('chatter.services.streaming.record_workflow_metrics')
    async def test_end_stream(self, mock_record_metrics):
        """Test ending a stream and getting metrics."""
        stream_id = "end_test_stream"
    
        # Create stream
        await self.service.create_stream(
            stream_id=stream_id,
            workflow_type="test_workflow"
        )
    
        # Simulate some activity
        self.service.active_streams[stream_id]["token_count"] = 100
        self.service.active_streams[stream_id]["event_count"] = 10
    
        # Wait a bit to have measurable duration
        await asyncio.sleep(0.01)
    
        # End stream
        metrics = await self.service.end_stream(stream_id)
    
        assert metrics["total_duration"] > 0
        assert metrics["tokens_per_second"] > 0
        assert metrics["events_per_second"] > 0
        assert stream_id not in self.service.active_streams
>       assert stream_id not in self.stream_metrics
                                ^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'TestStreamingService' object has no attribute 'stream_metrics'

tests/test_streaming.py:223: AttributeError
_________________ TestStreamingService.test_stream_event_basic _________________

self = <tests.test_streaming.TestStreamingService object at 0x7f84ca1749e0>

    @pytest.mark.asyncio
    async def test_stream_event_basic(self):
        """Test streaming a basic event."""
        stream_id = "event_test_stream"
    
        # Create stream
        await self.service.create_stream(
            stream_id=stream_id,
            workflow_type="test_workflow"
        )
    
        # Create async generator for streaming
        async def stream_events():
            event_data = StreamingEvent(
                event_type=StreamingEventType.TOKEN,
                content="Hello",
                metadata={"token_id": 1}
            )
    
            async for chunk in self.service.stream_event(stream_id, event_data):
                yield chunk
    
        # Collect streamed events
        events = []
>       async for event in stream_events():

tests/test_streaming.py:259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    async def stream_events():
>       event_data = StreamingEvent(
            event_type=StreamingEventType.TOKEN,
            content="Hello",
            metadata={"token_id": 1}
        )
E       TypeError: StreamingEvent.__init__() got an unexpected keyword argument 'event_type'

tests/test_streaming.py:248: TypeError
____________________ TestStreamingService.test_stream_token ____________________

self = <tests.test_streaming.TestStreamingService object at 0x7f84ca174c80>

    @pytest.mark.asyncio
    async def test_stream_token(self):
        """Test streaming a token event."""
        stream_id = "token_test_stream"
    
        # Create stream
        await self.service.create_stream(
            stream_id=stream_id,
            workflow_type="chat_completion"
        )
    
        token_content = "world"
    
        # Stream token
        events = []
>       async for chunk in self.service.stream_token(stream_id, token_content):
                           ^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'StreamingService' object has no attribute 'stream_token'. Did you mean: 'stream_tokens'?

tests/test_streaming.py:283: AttributeError
_____________ TestStreamingService.test_stream_tool_call_lifecycle _____________

self = <tests.test_streaming.TestStreamingService object at 0x7f84ca174f20>

    @pytest.mark.asyncio
    async def test_stream_tool_call_lifecycle(self):
        """Test complete tool call streaming lifecycle."""
        stream_id = "tool_call_stream"
    
        # Create stream
        await self.service.create_stream(
            stream_id=stream_id,
            workflow_type="tool_execution"
        )
    
        tool_name = "calculator"
        tool_input = {"operation": "add", "a": 5, "b": 3}
        tool_result = {"result": 8}
    
        # Stream tool call start
        start_events = []
>       async for chunk in self.service.stream_tool_call_start(stream_id, tool_name, tool_input):
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'StreamingService' object has no attribute 'stream_tool_call_start'

tests/test_streaming.py:313: AttributeError
__________________ TestStreamingService.test_stream_thinking ___________________

self = <tests.test_streaming.TestStreamingService object at 0x7f84ca1751c0>

    @pytest.mark.asyncio
    async def test_stream_thinking(self):
        """Test streaming thinking event."""
        stream_id = "thinking_stream"
    
        # Create stream
        await self.service.create_stream(
            stream_id=stream_id,
            workflow_type="reasoning"
        )
    
        thinking_content = "Let me analyze this problem..."
    
        # Stream thinking
        events = []
>       async for chunk in self.service.stream_thinking(stream_id, thinking_content):
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'StreamingService' object has no attribute 'stream_thinking'. Did you mean: 'stream_tokens'?

tests/test_streaming.py:344: AttributeError
________________ TestStreamingService.test_stream_source_found _________________

self = <tests.test_streaming.TestStreamingService object at 0x7f84ca175460>

    @pytest.mark.asyncio
    async def test_stream_source_found(self):
        """Test streaming source found event."""
        stream_id = "source_stream"
    
        # Create stream
        await self.service.create_stream(
            stream_id=stream_id,
            workflow_type="document_search"
        )
    
        source_info = {
            "title": "Test Document",
            "url": "https://example.com/doc",
            "relevance": 0.95
        }
    
        # Stream source found
        events = []
>       async for chunk in self.service.stream_source_found(stream_id, source_info):
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'StreamingService' object has no attribute 'stream_source_found'

tests/test_streaming.py:368: AttributeError
____________________ TestStreamingService.test_stream_error ____________________

self = <tests.test_streaming.TestStreamingService object at 0x7f84ca175700>

    @pytest.mark.asyncio
    async def test_stream_error(self):
        """Test streaming error event."""
        stream_id = "error_stream"
    
        # Create stream
        await self.service.create_stream(
            stream_id=stream_id,
            workflow_type="test_workflow"
        )
    
        error_message = "Test error occurred"
        error_details = {"error_code": "TEST_001", "retry": False}
    
        # Stream error
        events = []
>       async for chunk in self.service.stream_error(stream_id, error_message, error_details):
                           ^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'StreamingService' object has no attribute 'stream_error'

tests/test_streaming.py:389: AttributeError
__________________ TestStreamingService.test_stream_complete ___________________

self = <tests.test_streaming.TestStreamingService object at 0x7f84ca153f80>

    @pytest.mark.asyncio
    async def test_stream_complete(self):
        """Test streaming completion event."""
        stream_id = "complete_stream"
    
        # Create stream
        await self.service.create_stream(
            stream_id=stream_id,
            workflow_type="test_workflow"
        )
    
        final_result = {"status": "success", "total_tokens": 150}
    
        # Stream completion
        events = []
>       async for chunk in self.service.stream_complete(stream_id, final_result):
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'StreamingService' object has no attribute 'stream_complete'

tests/test_streaming.py:413: AttributeError
__________________ TestStreamingService.test_stream_metadata ___________________

self = <tests.test_streaming.TestStreamingService object at 0x7f84ca153f50>

    @pytest.mark.asyncio
    async def test_stream_metadata(self):
        """Test streaming metadata event."""
        stream_id = "metadata_stream"
    
        # Create stream
        await self.service.create_stream(
            stream_id=stream_id,
            workflow_type="test_workflow"
        )
    
        metadata = {
            "model": "gpt-4",
            "temperature": 0.7,
            "max_tokens": 500
        }
    
        # Stream metadata
        events = []
>       async for chunk in self.service.stream_metadata(stream_id, metadata):
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'StreamingService' object has no attribute 'stream_metadata'. Did you mean: 'stream_metrics'?

tests/test_streaming.py:437: AttributeError
_________________ TestStreamingService.test_get_stream_metrics _________________

self = <tests.test_streaming.TestStreamingService object at 0x7f84ca12fe30>

    @pytest.mark.asyncio
    async def test_get_stream_metrics(self):
        """Test getting stream metrics."""
        stream_id = "metrics_stream"
    
        # Create stream
        await self.service.create_stream(
            stream_id=stream_id,
            workflow_type="test_workflow"
        )
    
        # Simulate some activity
        self.service.active_streams[stream_id]["token_count"] = 50
        self.service.active_streams[stream_id]["event_count"] = 5
    
        # Get metrics
>       metrics = self.service.get_stream_metrics(stream_id)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'StreamingService' object has no attribute 'get_stream_metrics'. Did you mean: 'stream_metrics'?

tests/test_streaming.py:458: AttributeError
___________ TestStreamingService.test_get_nonexistent_stream_metrics ___________

self = <tests.test_streaming.TestStreamingService object at 0x7f84ca1755e0>

    @pytest.mark.asyncio
    async def test_get_nonexistent_stream_metrics(self):
        """Test getting metrics for nonexistent stream."""
>       metrics = self.service.get_stream_metrics("nonexistent")
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'StreamingService' object has no attribute 'get_stream_metrics'. Did you mean: 'stream_metrics'?

tests/test_streaming.py:468: AttributeError
________________ TestStreamingService.test_list_active_streams _________________

self = <tests.test_streaming.TestStreamingService object at 0x7f84ca174fe0>

    @pytest.mark.asyncio
    async def test_list_active_streams(self):
        """Test listing active streams."""
        # Initially no streams
>       streams = self.service.list_active_streams()
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'StreamingService' object has no attribute 'list_active_streams'. Did you mean: 'active_streams'?

tests/test_streaming.py:476: AttributeError
__________________ TestStreamingService.test_is_stream_active __________________

self = <tests.test_streaming.TestStreamingService object at 0x7f84ca174890>

    @pytest.mark.asyncio
    async def test_is_stream_active(self):
        """Test checking if stream is active."""
        stream_id = "active_check_stream"
    
        # Stream doesn't exist
>       assert self.service.is_stream_active(stream_id) is False
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'StreamingService' object has no attribute 'is_stream_active'

tests/test_streaming.py:494: AttributeError
______________ TestStreamingService.test_stream_activity_tracking ______________

self = <tests.test_streaming.TestStreamingService object at 0x7f84ca1743b0>

    @pytest.mark.asyncio
    async def test_stream_activity_tracking(self):
        """Test that stream activity is properly tracked."""
        stream_id = "activity_stream"
    
        # Create stream
        await self.service.create_stream(stream_id, "test_workflow")
    
        initial_activity = self.service.active_streams[stream_id]["last_activity"]
    
        # Wait a bit
        await asyncio.sleep(0.01)
    
        # Stream a token (should update last_activity)
>       async for _ in self.service.stream_token(stream_id, "test"):
                       ^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'StreamingService' object has no attribute 'stream_token'. Did you mean: 'stream_tokens'?

tests/test_streaming.py:522: AttributeError
________ TestStreamingService.test_stream_error_handling_invalid_stream ________

self = <tests.test_streaming.TestStreamingService object at 0x7f84ca175b20>

    @pytest.mark.asyncio
    async def test_stream_error_handling_invalid_stream(self):
        """Test error handling when streaming to invalid stream."""
        with pytest.raises(StreamingError):
>           async for _ in self.service.stream_token("invalid_stream", "test"):
                           ^^^^^^^^^^^^^^^^^^^^^^^^^
E           AttributeError: 'StreamingService' object has no attribute 'stream_token'. Did you mean: 'stream_tokens'?

tests/test_streaming.py:533: AttributeError
_________________ TestStreamingService.test_concurrent_streams _________________

self = <tests.test_streaming.TestStreamingService object at 0x7f84ca175dc0>

    @pytest.mark.asyncio
    async def test_concurrent_streams(self):
        """Test handling multiple concurrent streams."""
        stream_ids = ["concurrent1", "concurrent2", "concurrent3"]
    
        # Create multiple streams concurrently
        create_tasks = [
            self.service.create_stream(stream_id, f"workflow_{i}")
            for i, stream_id in enumerate(stream_ids)
        ]
        await asyncio.gather(*create_tasks)
    
        # Verify all streams are active
        for stream_id in stream_ids:
>           assert self.service.is_stream_active(stream_id)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E           AttributeError: 'StreamingService' object has no attribute 'is_stream_active'

tests/test_streaming.py:550: AttributeError
______________ TestStreamingService.test_stream_cleanup_on_error _______________

self = <tests.test_streaming.TestStreamingService object at 0x7f84ca176060>

    @pytest.mark.asyncio
    async def test_stream_cleanup_on_error(self):
        """Test stream cleanup when errors occur."""
        stream_id = "cleanup_stream"
    
        # Create stream
        await self.service.create_stream(stream_id, "test_workflow")
    
        # Simulate an error during streaming
>       with patch.object(self.service, 'stream_event', side_effect=StreamingError("Test error")):
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_streaming.py:574: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib64/python3.12/unittest/mock.py:1467: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f83d92335c0>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <chatter.services.streaming.StreamingService object at 0x7f83d8d368d0> does not have the attribute 'stream_event'

/usr/lib64/python3.12/unittest/mock.py:1437: AttributeError
_______ TestStreamingServiceIntegration.test_complete_streaming_workflow _______

self = <tests.test_streaming.TestStreamingServiceIntegration object at 0x7f84ca176300>

    @pytest.mark.asyncio
    async def test_complete_streaming_workflow(self):
        """Test complete streaming workflow from start to finish."""
        stream_id = "complete_workflow_stream"
        workflow_type = "chat_completion"
    
        # 1. Create stream
        await self.service.create_stream(stream_id, workflow_type)
>       assert self.service.is_stream_active(stream_id)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'StreamingService' object has no attribute 'is_stream_active'

tests/test_streaming.py:599: AttributeError
_________ TestStreamingServiceIntegration.test_error_recovery_workflow _________

self = <tests.test_streaming.TestStreamingServiceIntegration object at 0x7f84ca176480>

    @pytest.mark.asyncio
    async def test_error_recovery_workflow(self):
        """Test streaming workflow with error recovery."""
        stream_id = "error_recovery_stream"
    
        # Create stream
        await self.service.create_stream(stream_id, "error_recovery_test")
    
        # Stream some successful events
>       async for _ in self.service.stream_token(stream_id, "Success"):
                       ^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'StreamingService' object has no attribute 'stream_token'. Did you mean: 'stream_tokens'?

tests/test_streaming.py:659: AttributeError
_ TestStreamingServiceIntegration.test_performance_with_high_volume_streaming __

self = <tests.test_streaming.TestStreamingServiceIntegration object at 0x7f84ca176720>

    @pytest.mark.asyncio
    async def test_performance_with_high_volume_streaming(self):
        """Test streaming performance with high volume of events."""
        stream_id = "high_volume_stream"
    
        # Create stream
        await self.service.create_stream(stream_id, "performance_test")
    
        # Stream many tokens quickly
        start_time = time.time()
    
        for i in range(100):  # Stream 100 tokens
>           async for _ in self.service.stream_token(stream_id, f"token_{i}"):
                           ^^^^^^^^^^^^^^^^^^^^^^^^^
E           AttributeError: 'StreamingService' object has no attribute 'stream_token'. Did you mean: 'stream_tokens'?

tests/test_streaming.py:697: AttributeError
____________ TestStreamingServiceIntegration.test_stream_isolation _____________

self = <tests.test_streaming.TestStreamingServiceIntegration object at 0x7f84ca1769c0>

    @pytest.mark.asyncio
    async def test_stream_isolation(self):
        """Test that streams are properly isolated from each other."""
        stream1_id = "isolation_stream_1"
        stream2_id = "isolation_stream_2"
    
        # Create two streams
        await self.service.create_stream(stream1_id, "workflow1")
        await self.service.create_stream(stream2_id, "workflow2")
    
        # Stream different content to each
>       async for _ in self.service.stream_token(stream1_id, "stream1_content"):
                       ^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'StreamingService' object has no attribute 'stream_token'. Did you mean: 'stream_tokens'?

tests/test_streaming.py:722: AttributeError
____________ TestAPIVersion.test_api_version_string_representation _____________

self = <tests.test_versioning.TestAPIVersion object at 0x7f84ca011e80>

    def test_api_version_string_representation(self):
        """Test API version string representation."""
>       assert str(APIVersion.V1) == "v1"
E       AssertionError: assert 'APIVersion.V1' == 'v1'
E         
E         - v1
E         + APIVersion.V1

tests/test_versioning.py:27: AssertionError
_________________ TestVersionStatus.test_version_status_values _________________

self = <tests.test_versioning.TestVersionStatus object at 0x7f84ca0120f0>

    def test_version_status_values(self):
        """Test version status enum values."""
        assert VersionStatus.ACTIVE == "active"
>       assert VersionStatus.DEPRECATED == "deprecated"
               ^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: type object 'VersionStatus' has no attribute 'DEPRECATED'

tests/test_versioning.py:37: AttributeError
______________ TestVersionStatus.test_version_status_progression _______________

self = <tests.test_versioning.TestVersionStatus object at 0x7f84ca012270>

    def test_version_status_progression(self):
        """Test logical version status progression."""
>       statuses = [VersionStatus.ACTIVE, VersionStatus.DEPRECATED, VersionStatus.SUNSET]
                                          ^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: type object 'VersionStatus' has no attribute 'DEPRECATED'

tests/test_versioning.py:42: AttributeError
___________ TestEndpointVersioning.test_endpoint_versioning_creation ___________

self = <tests.test_versioning.TestEndpointVersioning object at 0x7f84ca012180>

    def test_endpoint_versioning_creation(self):
        """Test creating EndpointVersioning."""
        endpoint = EndpointVersioning(
            path="/api/users",
            method="GET",
            introduced_in=APIVersion.V1,
            deprecated_in=APIVersion.V2,
            removed_in=None
        )
    
        assert endpoint.path == "/api/users"
        assert endpoint.method == "GET"
        assert endpoint.introduced_in == APIVersion.V1
>       assert endpoint.deprecated_in == APIVersion.V2
               ^^^^^^^^^^^^^^^^^^^^^^

tests/test_versioning.py:101: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = EndpointVersioning(path='/api/users', method='GET', introduced_in=<APIVersion.V1: 'v1'>, removed_in=None, changes={})
item = 'deprecated_in'

    def __getattr__(self, item: str) -> Any:
        private_attributes = object.__getattribute__(self, '__private_attributes__')
        if item in private_attributes:
            attribute = private_attributes[item]
            if hasattr(attribute, '__get__'):
                return attribute.__get__(self, type(self))  # type: ignore
    
            try:
                # Note: self.__pydantic_private__ cannot be None if self.__private_attributes__ has items
                return self.__pydantic_private__[item]  # type: ignore
            except KeyError as exc:
                raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc
        else:
            # `__pydantic_extra__` can fail to be set if the model is not yet fully initialized.
            # See `BaseModel.__repr_args__` for more details
            try:
                pydantic_extra = object.__getattribute__(self, '__pydantic_extra__')
            except AttributeError:
                pydantic_extra = None
    
            if pydantic_extra:
                try:
                    return pydantic_extra[item]
                except KeyError as exc:
                    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc
            else:
                if hasattr(self.__class__, item):
                    return super().__getattribute__(item)  # Raises AttributeError if appropriate
                else:
                    # this is the current error
>                   raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
E                   AttributeError: 'EndpointVersioning' object has no attribute 'deprecated_in'

../.local/lib/python3.12/site-packages/pydantic/main.py:991: AttributeError
__________ TestEndpointVersioning.test_endpoint_versioning_lifecycle ___________

self = <tests.test_versioning.TestEndpointVersioning object at 0x7f84ca0105c0>

    def test_endpoint_versioning_lifecycle(self):
        """Test endpoint lifecycle through versions."""
        # Endpoint introduced in V1, deprecated in V2, removed in hypothetical V3
        endpoint = EndpointVersioning(
            path="/api/legacy",
            method="POST",
            introduced_in=APIVersion.V1,
            deprecated_in=APIVersion.V2,
            removed_in=APIVersion.V2  # Removed in V2 (immediately deprecated and removed)
        )
    
        assert endpoint.introduced_in == APIVersion.V1
>       assert endpoint.deprecated_in == APIVersion.V2
               ^^^^^^^^^^^^^^^^^^^^^^

tests/test_versioning.py:116: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = EndpointVersioning(path='/api/legacy', method='POST', introduced_in=<APIVersion.V1: 'v1'>, removed_in=<APIVersion.V2: 'v2'>, changes={})
item = 'deprecated_in'

    def __getattr__(self, item: str) -> Any:
        private_attributes = object.__getattribute__(self, '__private_attributes__')
        if item in private_attributes:
            attribute = private_attributes[item]
            if hasattr(attribute, '__get__'):
                return attribute.__get__(self, type(self))  # type: ignore
    
            try:
                # Note: self.__pydantic_private__ cannot be None if self.__private_attributes__ has items
                return self.__pydantic_private__[item]  # type: ignore
            except KeyError as exc:
                raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc
        else:
            # `__pydantic_extra__` can fail to be set if the model is not yet fully initialized.
            # See `BaseModel.__repr_args__` for more details
            try:
                pydantic_extra = object.__getattribute__(self, '__pydantic_extra__')
            except AttributeError:
                pydantic_extra = None
    
            if pydantic_extra:
                try:
                    return pydantic_extra[item]
                except KeyError as exc:
                    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc
            else:
                if hasattr(self.__class__, item):
                    return super().__getattribute__(item)  # Raises AttributeError if appropriate
                else:
                    # this is the current error
>                   raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
E                   AttributeError: 'EndpointVersioning' object has no attribute 'deprecated_in'

../.local/lib/python3.12/site-packages/pydantic/main.py:991: AttributeError
______________ TestAPIVersionManager.test_default_versions_loaded ______________

self = <tests.test_versioning.TestAPIVersionManager object at 0x7f84ca0129c0>

    def test_default_versions_loaded(self):
        """Test that default versions are properly loaded."""
        # V1 should exist
        v1_info = self.manager.get_version_info(APIVersion.V1)
        assert v1_info is not None
        assert v1_info.version == APIVersion.V1
>       assert v1_info.status == VersionStatus.DEPRECATED
                                 ^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: type object 'VersionStatus' has no attribute 'DEPRECATED'

tests/test_versioning.py:142: AttributeError
________ TestAPIVersionManager.test_is_endpoint_available_unregistered _________

self = <tests.test_versioning.TestAPIVersionManager object at 0x7f84ca013e60>

    def test_is_endpoint_available_unregistered(self):
        """Test endpoint availability for unregistered endpoint."""
        is_available = self.manager.is_endpoint_available(
            "/api/nonexistent", "GET", APIVersion.V1
        )
        # Unregistered endpoints should be considered available
>       assert is_available is True
E       assert False is True

tests/test_versioning.py:335: AssertionError
________________ TestAPIVersionManager.test_deprecate_endpoint _________________

self = <tests.test_versioning.TestAPIVersionManager object at 0x7f84ca013ad0>

    def test_deprecate_endpoint(self):
        """Test deprecating an endpoint."""
        # Register endpoint
        self.manager.register_endpoint(
            path="/api/to-deprecate",
            method="GET",
            introduced_in=APIVersion.V1
        )
    
        # Deprecate endpoint
>       self.manager.deprecate_endpoint(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            "/api/to-deprecate", "GET", APIVersion.V2
        )
E       AttributeError: 'APIVersionManager' object has no attribute 'deprecate_endpoint'

tests/test_versioning.py:347: AttributeError
__________ TestAPIVersionManager.test_deprecate_nonexistent_endpoint ___________

self = <tests.test_versioning.TestAPIVersionManager object at 0x7f84ca013500>

    def test_deprecate_nonexistent_endpoint(self):
        """Test deprecating a non-existent endpoint."""
        # Should not raise error
>       self.manager.deprecate_endpoint(
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            "/api/nonexistent", "GET", APIVersion.V2
        )
E       AttributeError: 'APIVersionManager' object has no attribute 'deprecate_endpoint'

tests/test_versioning.py:358: AttributeError
_________________ TestAPIVersionManager.test_get_endpoint_info _________________

self = <tests.test_versioning.TestAPIVersionManager object at 0x7f84ca012cf0>

    def test_get_endpoint_info(self):
        """Test getting endpoint information."""
        # Register endpoint
        self.manager.register_endpoint(
            path="/api/info-test",
            method="POST",
            introduced_in=APIVersion.V1,
            removed_in=APIVersion.V2
        )
    
>       endpoint_info = self.manager.get_endpoint_info(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            "/api/info-test", "POST"
        )
E       AttributeError: 'APIVersionManager' object has no attribute 'get_endpoint_info'. Did you mean: 'get_endpoint_status'?

tests/test_versioning.py:376: AttributeError
___________ TestAPIVersionManager.test_get_endpoint_info_nonexistent ___________

self = <tests.test_versioning.TestAPIVersionManager object at 0x7f84ca0305c0>

    def test_get_endpoint_info_nonexistent(self):
        """Test getting info for non-existent endpoint."""
>       endpoint_info = self.manager.get_endpoint_info(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            "/api/nonexistent", "GET"
        )
E       AttributeError: 'APIVersionManager' object has no attribute 'get_endpoint_info'. Did you mean: 'get_endpoint_status'?

tests/test_versioning.py:388: AttributeError
_____________ TestAPIVersionManager.test_get_endpoints_for_version _____________

self = <tests.test_versioning.TestAPIVersionManager object at 0x7f84ca030aa0>

    def test_get_endpoints_for_version(self):
        """Test getting all endpoints available for a version."""
        # Register multiple endpoints
        endpoints_to_register = [
            ("/api/v1-only", "GET", APIVersion.V1, APIVersion.V2),
            ("/api/v1-v2", "GET", APIVersion.V1, None),
            ("/api/v2-only", "GET", APIVersion.V2, None),
        ]
    
        for path, method, introduced, removed in endpoints_to_register:
            self.manager.register_endpoint(
                path=path,
                method=method,
                introduced_in=introduced,
                removed_in=removed
            )
    
        # Get endpoints for V1
>       v1_endpoints = self.manager.get_endpoints_for_version(APIVersion.V1)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'APIVersionManager' object has no attribute 'get_endpoints_for_version'

tests/test_versioning.py:412: AttributeError
__________ TestAPIVersionManager.test_version_middleware_integration ___________
  + Exception Group Traceback (most recent call last):
  |   File "/home/yam/.local/lib/python3.12/site-packages/starlette/_utils.py", line 77, in collapse_excgroups
  |     yield
  |   File "/home/yam/.local/lib/python3.12/site-packages/starlette/middleware/base.py", line 183, in __call__
  |     async with anyio.create_task_group() as task_group:
  |                ^^^^^^^^^^^^^^^^^^^^^^^^^
  |   File "/home/yam/.local/lib/python3.12/site-packages/anyio/_backends/_asyncio.py", line 772, in __aexit__
  |     raise BaseExceptionGroup(
  | ExceptionGroup: unhandled errors in a TaskGroup (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/home/yam/.local/lib/python3.12/site-packages/_pytest/runner.py", line 344, in from_call
    |     result: TResult | None = func()
    |                              ^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/_pytest/runner.py", line 246, in <lambda>
    |     lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_hooks.py", line 512, in __call__
    |     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_manager.py", line 120, in _hookexec
    |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 167, in _multicall
    |     raise exception
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     teardown.throw(exception)
    |   File "/home/yam/.local/lib/python3.12/site-packages/_pytest/logging.py", line 850, in pytest_runtest_call
    |     yield
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     teardown.throw(exception)
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 53, in run_old_style_hookwrapper
    |     return result.get_result()
    |            ^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_result.py", line 103, in get_result
    |     raise exc.with_traceback(tb)
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 38, in run_old_style_hookwrapper
    |     res = yield
    |           ^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     teardown.throw(exception)
    |   File "/home/yam/.local/lib/python3.12/site-packages/_pytest/capture.py", line 900, in pytest_runtest_call
    |     return (yield)
    |             ^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     teardown.throw(exception)
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 53, in run_old_style_hookwrapper
    |     return result.get_result()
    |            ^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_result.py", line 103, in get_result
    |     raise exc.with_traceback(tb)
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 38, in run_old_style_hookwrapper
    |     res = yield
    |           ^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     teardown.throw(exception)
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 53, in run_old_style_hookwrapper
    |     return result.get_result()
    |            ^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_result.py", line 103, in get_result
    |     raise exc.with_traceback(tb)
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 38, in run_old_style_hookwrapper
    |     res = yield
    |           ^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     teardown.throw(exception)
    |   File "/home/yam/.local/lib/python3.12/site-packages/_pytest/skipping.py", line 263, in pytest_runtest_call
    |     return (yield)
    |             ^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 121, in _multicall
    |     res = hook_impl.function(*args)
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/_pytest/runner.py", line 178, in pytest_runtest_call
    |     item.runtest()
    |   File "/home/yam/.local/lib/python3.12/site-packages/_pytest/python.py", line 1671, in runtest
    |     self.ihook.pytest_pyfunc_call(pyfuncitem=self)
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_hooks.py", line 512, in __call__
    |     return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_manager.py", line 120, in _hookexec
    |     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 167, in _multicall
    |     raise exception
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 139, in _multicall
    |     teardown.throw(exception)
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 53, in run_old_style_hookwrapper
    |     return result.get_result()
    |            ^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_result.py", line 103, in get_result
    |     raise exc.with_traceback(tb)
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 38, in run_old_style_hookwrapper
    |     res = yield
    |           ^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/pluggy/_callers.py", line 121, in _multicall
    |     res = hook_impl.function(*args)
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/_pytest/python.py", line 157, in pytest_pyfunc_call
    |     result = testfunction(**testargs)
    |              ^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/chatter/tests/test_versioning.py", line 470, in test_version_middleware_integration
    |     response = client.get("/api/test", headers={"API-Version": "v1"})
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/starlette/testclient.py", line 479, in get
    |     return super().get(
    |            ^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/httpx/_client.py", line 1053, in get
    |     return self.request(
    |            ^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/starlette/testclient.py", line 451, in request
    |     return super().request(
    |            ^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/httpx/_client.py", line 825, in request
    |     return self.send(request, auth=auth, follow_redirects=follow_redirects)
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/httpx/_client.py", line 914, in send
    |     response = self._send_handling_auth(
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/httpx/_client.py", line 942, in _send_handling_auth
    |     response = self._send_handling_redirects(
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/httpx/_client.py", line 979, in _send_handling_redirects
    |     response = self._send_single_request(request)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/httpx/_client.py", line 1014, in _send_single_request
    |     response = transport.handle_request(request)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/starlette/testclient.py", line 354, in handle_request
    |     raise exc
    |   File "/home/yam/.local/lib/python3.12/site-packages/starlette/testclient.py", line 351, in handle_request
    |     portal.call(self.app, scope, receive, send)
    |   File "/home/yam/.local/lib/python3.12/site-packages/anyio/from_thread.py", line 290, in call
    |     return cast(T_Retval, self.start_task_soon(func, *args).result())
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/lib64/python3.12/concurrent/futures/_base.py", line 456, in result
    |     return self.__get_result()
    |            ^^^^^^^^^^^^^^^^^^^
    |   File "/usr/lib64/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    |     raise self._exception
    |   File "/home/yam/.local/lib/python3.12/site-packages/anyio/from_thread.py", line 221, in _call_func
    |     retval = await retval_or_awaitable
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/.local/lib/python3.12/site-packages/fastapi/applications.py", line 1054, in __call__
    |     await super().__call__(scope, receive, send)
    |   File "/home/yam/.local/lib/python3.12/site-packages/starlette/applications.py", line 113, in __call__
    |     await self.middleware_stack(scope, receive, send)
    |   File "/home/yam/.local/lib/python3.12/site-packages/starlette/middleware/errors.py", line 186, in __call__
    |     raise exc
    |   File "/home/yam/.local/lib/python3.12/site-packages/starlette/middleware/errors.py", line 164, in __call__
    |     await self.app(scope, receive, _send)
    |   File "/home/yam/.local/lib/python3.12/site-packages/starlette/middleware/base.py", line 182, in __call__
    |     with recv_stream, send_stream, collapse_excgroups():
    |                                    ^^^^^^^^^^^^^^^^^^^^
    |   File "/usr/lib64/python3.12/contextlib.py", line 158, in __exit__
    |     self.gen.throw(value)
    |   File "/home/yam/.local/lib/python3.12/site-packages/starlette/_utils.py", line 83, in collapse_excgroups
    |     raise exc
    |   File "/home/yam/.local/lib/python3.12/site-packages/starlette/middleware/base.py", line 184, in __call__
    |     response = await self.dispatch_func(request, call_next)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |   File "/home/yam/chatter/tests/test_versioning.py", line 446, in version_middleware
    |     raise HTTPException(
    | fastapi.exceptions.HTTPException: 400: API version v1 is not supported
    +------------------------------------

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/yam/chatter/tests/test_versioning.py", line 470, in test_version_middleware_integration
    response = client.get("/api/test", headers={"API-Version": "v1"})
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/starlette/testclient.py", line 479, in get
    return super().get(
           ^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/httpx/_client.py", line 1053, in get
    return self.request(
           ^^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/starlette/testclient.py", line 451, in request
    return super().request(
           ^^^^^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/httpx/_client.py", line 825, in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/httpx/_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/httpx/_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/httpx/_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/httpx/_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/starlette/testclient.py", line 354, in handle_request
    raise exc
  File "/home/yam/.local/lib/python3.12/site-packages/starlette/testclient.py", line 351, in handle_request
    portal.call(self.app, scope, receive, send)
  File "/home/yam/.local/lib/python3.12/site-packages/anyio/from_thread.py", line 290, in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.12/concurrent/futures/_base.py", line 456, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.12/concurrent/futures/_base.py", line 401, in __get_result
    raise self._exception
  File "/home/yam/.local/lib/python3.12/site-packages/anyio/from_thread.py", line 221, in _call_func
    retval = await retval_or_awaitable
             ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/yam/.local/lib/python3.12/site-packages/fastapi/applications.py", line 1054, in __call__
    await super().__call__(scope, receive, send)
  File "/home/yam/.local/lib/python3.12/site-packages/starlette/applications.py", line 113, in __call__
    await self.middleware_stack(scope, receive, send)
  File "/home/yam/.local/lib/python3.12/site-packages/starlette/middleware/errors.py", line 186, in __call__
    raise exc
  File "/home/yam/.local/lib/python3.12/site-packages/starlette/middleware/errors.py", line 164, in __call__
    await self.app(scope, receive, _send)
  File "/home/yam/.local/lib/python3.12/site-packages/starlette/middleware/base.py", line 182, in __call__
    with recv_stream, send_stream, collapse_excgroups():
                                   ^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib64/python3.12/contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "/home/yam/.local/lib/python3.12/site-packages/starlette/_utils.py", line 83, in collapse_excgroups
    raise exc
  File "/home/yam/.local/lib/python3.12/site-packages/starlette/middleware/base.py", line 184, in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/yam/chatter/tests/test_versioning.py", line 446, in version_middleware
    raise HTTPException(
fastapi.exceptions.HTTPException: 400: API version v1 is not supported

During handling of the above exception, another exception occurred:

self = <tests.test_versioning.TestAPIVersionManager object at 0x7f84ca030cb0>

    def test_version_middleware_integration(self):
        """Test integration with versioning middleware."""
        app = FastAPI()
    
        @app.get("/api/test")
        async def test_endpoint():
            return {"message": "test"}
    
        # Add versioning middleware
        @app.middleware("http")
        async def version_middleware(request: Request, call_next):
            # Extract version from header
            api_version = request.headers.get("API-Version", "v1")
    
            # Validate version
            version_enum = APIVersion.V1 if api_version == "v1" else APIVersion.V2
    
            if not self.manager.is_version_supported(version_enum):
                from fastapi import HTTPException
                raise HTTPException(
                    status_code=400,
                    detail=f"API version {api_version} is not supported"
                )
    
            response = await call_next(request)
            response.headers["API-Version"] = api_version
            return response
    
        client = TestClient(app)
    
        # Test with supported version
        response = client.get("/api/test", headers={"API-Version": "v2"})
        assert response.status_code == 200
        assert response.headers["API-Version"] == "v2"
    
        # Test with unsupported version (after making V1 sunset)
        sunset_v1 = VersionInfo(
            version=APIVersion.V1,
            status=VersionStatus.SUNSET,
            release_date="2023-01-01"
        )
        self.manager.add_version(sunset_v1)
    
>       response = client.get("/api/test", headers={"API-Version": "v1"})
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_versioning.py:470: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.local/lib/python3.12/site-packages/starlette/testclient.py:479: in get
    return super().get(
../.local/lib/python3.12/site-packages/httpx/_client.py:1053: in get
    return self.request(
../.local/lib/python3.12/site-packages/starlette/testclient.py:451: in request
    return super().request(
../.local/lib/python3.12/site-packages/httpx/_client.py:825: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:914: in send
    response = self._send_handling_auth(
../.local/lib/python3.12/site-packages/httpx/_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
../.local/lib/python3.12/site-packages/httpx/_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/httpx/_client.py:1014: in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/starlette/testclient.py:354: in handle_request
    raise exc
../.local/lib/python3.12/site-packages/starlette/testclient.py:351: in handle_request
    portal.call(self.app, scope, receive, send)
../.local/lib/python3.12/site-packages/anyio/from_thread.py:290: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/concurrent/futures/_base.py:456: in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
../.local/lib/python3.12/site-packages/anyio/from_thread.py:221: in _call_func
    retval = await retval_or_awaitable
             ^^^^^^^^^^^^^^^^^^^^^^^^^
../.local/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/applications.py:113: in __call__
    await self.middleware_stack(scope, receive, send)
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
../.local/lib/python3.12/site-packages/starlette/middleware/base.py:182: in __call__
    with recv_stream, send_stream, collapse_excgroups():
                                   ^^^^^^^^^^^^^^^^^^^^
/usr/lib64/python3.12/contextlib.py:158: in __exit__
    self.gen.throw(value)
../.local/lib/python3.12/site-packages/starlette/_utils.py:83: in collapse_excgroups
    raise exc
../.local/lib/python3.12/site-packages/starlette/middleware/base.py:184: in __call__
    response = await self.dispatch_func(request, call_next)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = <starlette.middleware.base._CachedRequest object at 0x7f83d9529c10>
call_next = <function BaseHTTPMiddleware.__call__.<locals>.call_next at 0x7f83d951b240>

    @app.middleware("http")
    async def version_middleware(request: Request, call_next):
        # Extract version from header
        api_version = request.headers.get("API-Version", "v1")
    
        # Validate version
        version_enum = APIVersion.V1 if api_version == "v1" else APIVersion.V2
    
        if not self.manager.is_version_supported(version_enum):
            from fastapi import HTTPException
>           raise HTTPException(
                status_code=400,
                detail=f"API version {api_version} is not supported"
            )
E           fastapi.exceptions.HTTPException: 400: API version v1 is not supported

tests/test_versioning.py:446: HTTPException
__________ TestVersioningIntegration.test_complete_version_lifecycle ___________

self = <tests.test_versioning.TestVersioningIntegration object at 0x7f84ca030ec0>

    def test_complete_version_lifecycle(self):
        """Test complete version lifecycle management."""
        # 1. Add a new version
        v3_info = VersionInfo(
            version=APIVersion.V2,  # Override V2 for testing
            status=VersionStatus.ACTIVE,
            release_date="2024-12-01",
            documentation_url="https://api.example.com/docs/v3",
            breaking_changes=["Restructured response format"],
            new_features=["Real-time streaming", "Enhanced security"]
        )
        self.manager.add_version(v3_info)
    
        # 2. Register endpoints for different versions
        self.manager.register_endpoint("/api/legacy", "GET", APIVersion.V1, APIVersion.V2)
        self.manager.register_endpoint("/api/stable", "GET", APIVersion.V1)
        self.manager.register_endpoint("/api/new", "GET", APIVersion.V2)
    
        # 3. Deprecate an endpoint
>       self.manager.deprecate_endpoint("/api/stable", "GET", APIVersion.V2)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'APIVersionManager' object has no attribute 'deprecate_endpoint'

tests/test_versioning.py:501: AttributeError
__________ TestVersioningIntegration.test_version_migration_scenario ___________

self = <tests.test_versioning.TestVersioningIntegration object at 0x7f84ca031040>

    def test_version_migration_scenario(self):
        """Test a realistic version migration scenario."""
        # Scenario: Migrating from V1 to V2 with gradual deprecation
    
        # 1. Start with V1 as active, V2 as new
        v1_info = VersionInfo(
            version=APIVersion.V1,
            status=VersionStatus.ACTIVE,
            release_date="2023-01-01",
            documentation_url="https://api.example.com/docs/v1"
        )
        self.manager.add_version(v1_info)
    
        # 2. Register endpoints that exist in V1
        legacy_endpoints = [
            "/api/users",
            "/api/posts",
            "/api/comments"
        ]
    
        for endpoint in legacy_endpoints:
            self.manager.register_endpoint(endpoint, "GET", APIVersion.V1)
            self.manager.register_endpoint(endpoint, "POST", APIVersion.V1)
    
        # 3. Add V2 with some endpoints deprecated/changed
        v2_info = VersionInfo(
            version=APIVersion.V2,
            status=VersionStatus.ACTIVE,
            release_date="2024-06-01",
            documentation_url="https://api.example.com/docs/v2",
            breaking_changes=[
                "Removed /api/comments endpoint",
                "Changed /api/posts response format"
            ],
            new_features=[
                "Added /api/threads endpoint",
                "Enhanced /api/users with filtering"
            ]
        )
        self.manager.add_version(v2_info)
    
        # 4. Register V2 changes
        self.manager.register_endpoint("/api/comments", "GET", APIVersion.V1, APIVersion.V2)  # Removed in V2
        self.manager.register_endpoint("/api/threads", "GET", APIVersion.V2)  # New in V2
>       self.manager.deprecate_endpoint("/api/posts", "POST", APIVersion.V2)  # Deprecated in V2
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'APIVersionManager' object has no attribute 'deprecate_endpoint'

tests/test_versioning.py:559: AttributeError
_______ TestVersioningIntegration.test_backwards_compatibility_checking ________

self = <tests.test_versioning.TestVersioningIntegration object at 0x7f84ca031250>

    def test_backwards_compatibility_checking(self):
        """Test backwards compatibility validation."""
        # Register endpoints in V1
        self.manager.register_endpoint("/api/stable", "GET", APIVersion.V1)
        self.manager.register_endpoint("/api/changing", "GET", APIVersion.V1, APIVersion.V2)
    
        # Get compatibility report
>       v1_endpoints = self.manager.get_endpoints_for_version(APIVersion.V1)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       AttributeError: 'APIVersionManager' object has no attribute 'get_endpoints_for_version'

tests/test_versioning.py:597: AttributeError
________ TestWorkflowExecutionService.test_execute_workflow_with_limits ________

self = <tests.test_workflow_limits_and_streaming.TestWorkflowExecutionService object at 0x7f84ca032ae0>

    @pytest.mark.asyncio
    async def test_execute_workflow_with_limits(self):
        """Test workflow execution with resource limits."""
        # Mock LLM response
        mock_response = MagicMock()
        mock_response.content = "Test response"
    
        mock_provider = AsyncMock()
        mock_provider.ainvoke.return_value = mock_response
        mock_provider.__class__.__name__ = "TestProvider"
    
        self.llm_service.get_default_provider.return_value = mock_provider
        self.llm_service.convert_conversation_to_messages.return_value = []
    
        # Mock message service
        self.workflow_service._get_conversation_messages = AsyncMock(return_value=[])
    
        # Define custom limits
        limits = WorkflowLimits(
            execution_timeout=60,
            step_timeout=30,
            streaming_timeout=120,
            max_tokens=1000,
            max_memory_mb=512,
            max_concurrent=5,
        )
    
        # Execute workflow
        result_message, usage_info = await self.workflow_service.execute_workflow(
            self.conversation,
            self.chat_request,
            self.correlation_id,
            user_id="user_123",
            limits=limits,
        )
    
        # Verify result
        assert result_message.content == "Test response"
>       assert result_message.role == MessageRole.ASSISTANT
E       AssertionError: assert <MagicMock name='mock.role' id='140204262648736'> == <MessageRole.ASSISTANT: 'assistant'>
E        +  where <MagicMock name='mock.role' id='140204262648736'> = <MagicMock id='140204253060208'>.role
E        +  and   <MessageRole.ASSISTANT: 'assistant'> = MessageRole.ASSISTANT

tests/test_workflow_limits_and_streaming.py:237: AssertionError
__________ TestWorkflowExecutionService.test_execute_workflow_timeout __________

self = <tests.test_workflow_limits_and_streaming.TestWorkflowExecutionService object at 0x7f84ca0324b0>

    @pytest.mark.asyncio
    async def test_execute_workflow_timeout(self):
        """Test workflow execution timeout."""
        # Mock slow LLM response
        async def slow_invoke(*args, **kwargs):
            await asyncio.sleep(2)  # Simulate slow response
            mock_response = MagicMock()
            mock_response.content = "Test response"
            return mock_response
    
        mock_provider = AsyncMock()
        mock_provider.ainvoke = slow_invoke
        mock_provider.__class__.__name__ = "TestProvider"
    
        self.llm_service.get_default_provider.return_value = mock_provider
        self.llm_service.convert_conversation_to_messages.return_value = []
        self.workflow_service._get_conversation_messages = AsyncMock(return_value=[])
    
        # Define short timeout
        limits = WorkflowLimits(
            execution_timeout=1,  # 1 second timeout
            step_timeout=30,
            streaming_timeout=120,
            max_tokens=1000,
            max_memory_mb=512,
            max_concurrent=5,
        )
    
        # Should timeout
>       with pytest.raises(WorkflowTimeoutError) as exc_info:
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E       Failed: DID NOT RAISE <class 'chatter.core.workflow_limits.WorkflowTimeoutError'>

tests/test_workflow_limits_and_streaming.py:269: Failed
_______ TestWorkflowExecutionService.test_streaming_workflow_with_limits _______

self = <tests.test_workflow_limits_and_streaming.TestWorkflowExecutionService object at 0x7f84ca032a80>

    @pytest.mark.asyncio
    async def test_streaming_workflow_with_limits(self):
        """Test streaming workflow execution with resource limits."""
        # Mock streaming response
        mock_provider = AsyncMock()
        mock_provider.__class__.__name__ = "TestProvider"
    
        # Mock astream method for native streaming
        async def mock_astream(messages):
            chunks = [
                MagicMock(content="Hello"),
                MagicMock(content=" "),
                MagicMock(content="world"),
            ]
            for chunk in chunks:
                yield chunk
    
        mock_provider.astream = mock_astream
    
        self.llm_service.get_default_provider.return_value = mock_provider
        self.llm_service.convert_conversation_to_messages.return_value = []
        self.workflow_service._get_conversation_messages = AsyncMock(return_value=[])
    
        # Mock the workflow manager to avoid the 'str' object astream issue
>       with patch('chatter.services.workflow_execution.get_workflow_manager') as mock_get_manager:
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_workflow_limits_and_streaming.py:355: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib64/python3.12/unittest/mock.py:1467: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f83d82086b0>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'chatter.services.workflow_execution' from '/home/yam/chatter/chatter/services/workflow_execution.py'> does not have the attribute 'get_workflow_manager'

/usr/lib64/python3.12/unittest/mock.py:1437: AttributeError
_________ TestWorkflowExecutionService.test_streaming_workflow_timeout _________

self = <tests.test_workflow_limits_and_streaming.TestWorkflowExecutionService object at 0x7f84ca032d80>

    @pytest.mark.asyncio
    async def test_streaming_workflow_timeout(self):
        """Test streaming workflow timeout."""
        # Mock workflow manager to avoid the 'str' object astream issue
>       with patch('chatter.services.workflow_execution.get_workflow_manager') as mock_get_manager:
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

tests/test_workflow_limits_and_streaming.py:406: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib64/python3.12/unittest/mock.py:1467: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f83d8209400>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
>           raise AttributeError(
                "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'chatter.services.workflow_execution' from '/home/yam/chatter/chatter/services/workflow_execution.py'> does not have the attribute 'get_workflow_manager'

/usr/lib64/python3.12/unittest/mock.py:1437: AttributeError
___ TestWorkflowExecutionService.test_enhanced_token_streaming_all_workflows ___

self = <chatter.core.workflow_executors.RAGWorkflowExecutor object at 0x7f83d82e8230>
conversation = <MagicMock spec='Conversation' id='140204244209584'>
chat_request = ChatRequest(message='Test message', conversation_id=None, profile_id=None, stream=False, workflow='rag', provider=None...ns=None, context_limit=None, enable_retrieval=None, document_ids=None, system_prompt_override=None, workflow_type=None)
correlation_id = 'corr_123', user_id = 'user_123'
limits = WorkflowLimits(execution_timeout=60, step_timeout=30, streaming_timeout=120, max_tokens=1000, max_memory_mb=512, max_concurrent=5)

    async def execute_streaming(
        self,
        conversation: Conversation,
        chat_request: ChatRequest,
        correlation_id: str,
        user_id: str | None = None,
        limits: WorkflowLimits | None = None,
    ) -> AsyncGenerator[StreamingChatChunk, None]:
        """Execute RAG workflow with streaming."""
        start_time = time.time()
        workflow_id, limits = await self._setup_execution(
            conversation, chat_request, correlation_id, user_id, limits
        )
    
        try:
            # Start performance monitoring
            performance_monitor.start_workflow(workflow_id, self.workflow_type)
    
            # Get retriever from workflow manager
            workflow_manager = get_workflow_manager()
            retriever = workflow_manager.get_retriever(
>               conversation.workspace_id if conversation.workspace_id else "default"
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^
            )

chatter/core/workflow_executors.py:431: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <MagicMock spec='Conversation' id='140204244209584'>
name = 'workspace_id'

    def __getattr__(self, name):
        if name in {'_mock_methods', '_mock_unsafe'}:
            raise AttributeError(name)
        elif self._mock_methods is not None:
            if name not in self._mock_methods or name in _all_magics:
>               raise AttributeError("Mock object has no attribute %r" % name)
E               AttributeError: Mock object has no attribute 'workspace_id'

/usr/lib64/python3.12/unittest/mock.py:660: AttributeError

The above exception was the direct cause of the following exception:

self = <tests.test_workflow_limits_and_streaming.TestWorkflowExecutionService object at 0x7f84ca033020>

    @pytest.mark.asyncio
    async def test_enhanced_token_streaming_all_workflows(self):
        """Test enhanced token streaming for all workflow types."""
        # Mock workflow manager
        with patch('chatter.core.dependencies.get_workflow_manager') as mock_get_manager:
            mock_workflow_manager = MagicMock()
            mock_get_manager.return_value = mock_workflow_manager
    
            # Mock streaming workflow response
            async def mock_stream_workflow(workflow_type, state):
                events = [
                    {"type": "thinking", "thought": "Processing..."},
                    {"type": "token", "content": "Test"},
                    {"type": "token", "content": " response"},
                    {"type": "complete", "usage": {"tokens": 2}},
                ]
                for event in events:
                    yield event
    
            mock_workflow_manager.stream_workflow = mock_stream_workflow
    
            self.workflow_service._get_conversation_messages = AsyncMock(return_value=[])
    
            limits = WorkflowLimits(
                execution_timeout=60,
                step_timeout=30,
                streaming_timeout=120,
                max_tokens=1000,
                max_memory_mb=512,
                max_concurrent=5,
            )
    
            # Test different workflow types
            for workflow_type in ["rag", "tools", "full"]:
                self.chat_request.workflow = workflow_type
    
                chunks = []
>               async for chunk in self.workflow_service.execute_workflow_streaming(
                    self.conversation,
                    self.chat_request,
                    self.correlation_id,
                    user_id="user_123",
                    limits=limits,
                ):

tests/test_workflow_limits_and_streaming.py:487: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
chatter/services/workflow_execution.py:121: in execute_workflow_streaming
    async for chunk in executor.execute_streaming(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <chatter.core.workflow_executors.RAGWorkflowExecutor object at 0x7f83d82e8230>
conversation = <MagicMock spec='Conversation' id='140204244209584'>
chat_request = ChatRequest(message='Test message', conversation_id=None, profile_id=None, stream=False, workflow='rag', provider=None...ns=None, context_limit=None, enable_retrieval=None, document_ids=None, system_prompt_override=None, workflow_type=None)
correlation_id = 'corr_123', user_id = 'user_123'
limits = WorkflowLimits(execution_timeout=60, step_timeout=30, streaming_timeout=120, max_tokens=1000, max_memory_mb=512, max_concurrent=5)

    async def execute_streaming(
        self,
        conversation: Conversation,
        chat_request: ChatRequest,
        correlation_id: str,
        user_id: str | None = None,
        limits: WorkflowLimits | None = None,
    ) -> AsyncGenerator[StreamingChatChunk, None]:
        """Execute RAG workflow with streaming."""
        start_time = time.time()
        workflow_id, limits = await self._setup_execution(
            conversation, chat_request, correlation_id, user_id, limits
        )
    
        try:
            # Start performance monitoring
            performance_monitor.start_workflow(workflow_id, self.workflow_type)
    
            # Get retriever from workflow manager
            workflow_manager = get_workflow_manager()
            retriever = workflow_manager.get_retriever(
                conversation.workspace_id if conversation.workspace_id else "default"
            )
    
            # Create streaming RAG workflow
            workflow = await self.llm_service.create_langgraph_workflow(
                provider_name=chat_request.provider,
                workflow_type=self.workflow_type,
                retriever=retriever,
                enable_memory=True,
                memory_window=30,
                max_documents=10,
                system_message=chat_request.system_prompt_override,
            )
    
            # Prepare conversation state
            messages = []
            recent_messages = await self.message_service.get_recent_messages(
                conversation.id, limit=30
            )
    
            for msg in recent_messages:
                if msg.role == MessageRole.USER:
                    messages.append({"role": "human", "content": msg.content})
                elif msg.role == MessageRole.ASSISTANT:
                    messages.append({"role": "ai", "content": msg.content})
    
            messages.append({"role": "human", "content": chat_request.message})
            state = ConversationState(messages=messages)
    
            # Stream workflow execution
            content_buffer = ""
            async for event in workflow.astream(
                state, {"configurable": {"thread_id": conversation.id}}
            ):
                if "messages" in event:
                    message = event["messages"][-1]
                    if hasattr(message, "content") and message.content:
                        # Extract new content since last chunk
                        if len(message.content) > len(content_buffer):
                            new_content = message.content[len(content_buffer):]
                            content_buffer = message.content
    
                            yield StreamingChatChunk(
                                id=correlation_id,
                                content=new_content,
                                role="assistant",
                                conversation_id=conversation.id,
                            )
    
            # Create final message
            if content_buffer:
                await self.message_service.create_message(
                    conversation_id=conversation.id,
                    role=MessageRole.ASSISTANT,
                    content=content_buffer,
                )
    
            # Record success metrics
            await self._record_metrics(
                workflow_id, "stream", start_time, True, correlation_id=correlation_id
            )
    
        except Exception as e:
            # Record error metrics
            await self._record_metrics(
                workflow_id, "stream", start_time, False,
                error_type=type(e).__name__, correlation_id=correlation_id
            )
>           raise WorkflowExecutionError(f"RAG workflow streaming failed: {str(e)}") from e
E           chatter.core.workflow_executors.WorkflowExecutionError: RAG workflow streaming failed: Mock object has no attribute 'workspace_id'

chatter/core/workflow_executors.py:499: WorkflowExecutionError
================================ tests coverage ================================
_______________ coverage: platform linux, python 3.12.11-final-0 _______________

Name                                           Stmts   Miss  Cover   Missing
----------------------------------------------------------------------------
chatter/__init__.py                                6      0   100%
chatter/__main__.py                                3      3     0%   3-6
chatter/api/__init__.py                            2      0   100%
chatter/api/ab_testing.py                        289    249    14%   50-59, 75-94, 104-106, 129-268, 289-359, 380-442, 465-541, 562-581, 602-625, 646-669, 690-713, 734-845, 866-903, 926-949, 970-990, 1011-1060
chatter/api/agents.py                            342    307    10%   56-58, 88-198, 224-282, 306-312, 335-358, 379-415, 436-469, 502-605, 626-672, 691-820, 839-926
chatter/api/analytics.py                         149    105    30%   36, 68-112, 145-185, 216-267, 298-349, 371-404, 436-474, 505-523, 558-589, 631-694, 709-713, 731-735
chatter/api/auth.py                              152     49    68%   62, 66, 118-126, 153-171, 209-210, 218-230, 322, 352-354, 384-386, 409-425, 443, 506-519, 550-561, 587-598
chatter/api/chat.py                              169    110    35%   60-61, 136-142, 180-184, 207-227, 244-252, 270-280, 306-312, 329-340, 358-369, 401-453, 461-496, 506-520, 533-560, 571-577, 587-593
chatter/api/data_management.py                    82     55    33%   34, 48-69, 85-118, 130-165, 181-202, 213-237, 251-264, 278-293, 305-318
chatter/api/documents.py                         154    118    23%   53, 88-139, 198-230, 264-288, 311-333, 356-380, 401-429, 460-481, 506-533, 552-568, 589-627, 651-678
chatter/api/events.py                             93     71    24%   48-148, 186-258, 284-287, 307-317, 335-345
chatter/api/health.py                             68      7    90%   169-183, 215-216
chatter/api/jobs.py                              122     98    20%   44-48, 69-130, 149-256, 273-304, 321-343, 360-387, 409-422
chatter/api/model_registry.py                    237    183    23%   53-60, 75-84, 99-152, 166-189, 204-225, 243-285, 309-318, 330-339, 353-403, 417-449, 462-483, 499-512, 532-541, 556-565, 579-641, 658-683, 696-711, 726-741, 754-763, 775-784, 795-804
chatter/api/plugins.py                           164    130    21%   36-38, 61-97, 118-169, 190-224, 247-300, 321-342, 363-390, 413-438, 459-479, 498-504, 525-531, 552-566, 587-601
chatter/api/profiles.py                          128     95    26%   46, 69-111, 158-190, 211-231, 254-281, 304-328, 351-397, 420-442, 461-481, 503-515
chatter/api/prompts.py                           100     71    29%   39, 62-72, 91-111, 162-195, 217-237, 260-282, 305-327, 350-363, 386-403
chatter/api/toolserver.py                        289    222    23%   61, 75, 101-107, 128-135, 156-161, 182-198, 221-239, 266-284, 308-326, 350-368, 392-410, 434-452, 480-501, 524-538, 561-575, 601-616, 639-651, 675-742, 763-769, 794-812, 838-844, 872-878, 901-913, 939-943, 966-972, 995-1002, 1025-1029, 1050-1091
chatter/cli.py                                  1203    983    18%   34-58, 128-129, 183-246, 286-299, 323-357, 371-461, 474-495, 512-571, 589-606, 630-649, 670-675, 685-694, 702-728, 741-769, 785-834, 840-879, 902, 915, 935-936, 953-957, 978-982, 1011-1099, 1120-1229, 1242-1276, 1316-1539, 1545-1559, 1590-1656, 1665-1737, 1770-1828, 1840-1864, 1883-1937, 1954-2029, 2043-2072, 2089-2159, 2181-2244, 2262-2318, 2327-2368, 2383-2428, 2442-2471, 2496-2551, 2558-2586, 2592-2605, 2617-2679, 2690-2729, 2736-2777, 2781
chatter/config.py                                188     15    92%   531, 537-547, 558, 569, 606, 611-613, 645, 659-661
chatter/core/__init__.py                          17      8    53%   6-7, 11-12, 16-17, 21-22
chatter/core/agents.py                           320    252    21%   40-46, 71, 80, 88-91, 104-112, 120-125, 149-167, 181-182, 196-217, 230-278, 294-305, 322-377, 381, 397-472, 476-485, 537-578, 590-612, 624-642, 664-681, 693-726, 737-750, 770-777, 800-820, 830-847, 883, 891, 899, 917-938, 949, 962-966, 984-1033, 1048-1055, 1063-1085
chatter/core/analytics.py                        696    646     7%   33, 47-221, 235-446, 460-646, 660-830, 838-906, 922-1300, 1318-1343, 1357-1398, 1414-1444, 1457-1476, 1489-1498, 1510-1533, 1542-1605, 1619-1686, 1694-1731, 1735-1782, 1790-1848, 1856-1905, 1974, 1988-2041, 2059, 2070-2071, 2092-2173, 2186-2222, 2237, 2251-2362, 2378, 2389, 2403, 2418
chatter/core/audit_adapter.py                     99     60    39%   48-55, 59-61, 65-68, 86-121, 136-168, 174-191, 222-249, 261, 279-287, 308-310, 330-334
chatter/core/auth.py                             330    131    60%   46-61, 73-81, 94, 136, 155, 161, 213-217, 247-248, 274-275, 302-303, 362, 380-392, 414, 418-422, 441, 461-462, 483, 524-534, 549-557, 634, 642, 675-677, 681, 684-692, 721, 726-741, 753-775, 794-796, 810-855, 880, 887-933, 937-939
chatter/core/cache_factory.py                    140     41    71%   155-175, 197-199, 208, 220-224, 268, 293-294, 307, 309, 337-338, 381-394, 398-399, 424
chatter/core/cache_interface.py                  105     24    77%   59, 73, 85, 94, 106, 118, 130, 143, 156, 169, 181, 190, 199, 259-272, 284, 295
chatter/core/dependencies.py                     171     98    43%   35-37, 48-50, 76-89, 104, 115-119, 125-129, 134, 168-170, 175-177, 182-184, 189-191, 208, 213, 218, 223, 236, 245-247, 255-278, 286-287, 296, 307-313, 324, 332-333, 342-343, 351-355, 363-367, 379-381, 392-394, 402, 417, 435-437, 445-446, 454, 465-467
chatter/core/documents.py                        351    300    15%   49-54, 75-215, 231-266, 280-339, 357-393, 407-450, 464-568, 586-643, 659-697, 708-769, 780-803, 813-834, 853-854, 865-877, 890-903, 911, 922, 935-941, 953, 965-967, 978-987, 1001-1022, 1030, 1038, 1049, 1062-1093, 1104-1105
chatter/core/dynamic_embeddings.py               173    142    18%   12-15, 30-45, 60-80, 101-134, 167-184, 198-206, 216, 222, 230, 239-258, 264-275, 285-330, 338, 344-357, 363-381, 387-431, 437-449, 455-472, 478-495
chatter/core/enhanced_memory_cache.py            224     63    72%   39, 58-59, 69-71, 94-95, 140, 148-151, 168-171, 183, 191-192, 205-216, 256-259, 272, 287-288, 296, 318, 322, 338, 342, 348-349, 418-420, 437, 465-468, 483-496, 500-506, 521, 524
chatter/core/enhanced_redis_cache.py             280    240    14%   60-101, 105-111, 119-125, 136-159, 172-195, 206-223, 231-253, 264-275, 286-308, 319-352, 364-389, 401-415, 427-438, 449-467, 475-507, 520-561, 579-581, 589-592
chatter/core/events.py                           134     23    83%   100-101, 123, 132, 137, 142, 162-165, 197-199, 206-208, 215-217, 225-228
chatter/core/exceptions.py                       253    133    47%   48, 59, 115, 131, 144, 156-172, 176-178, 189-195, 207, 215, 218, 225, 246-252, 266-281, 300, 307, 319, 324-331, 345-351, 360, 373-377, 382, 385, 392, 401-402, 411, 420-421, 432-435, 448-451, 458, 465, 468, 471, 483, 491, 494, 508-514, 519, 522, 543-553, 565-572, 587-591, 606-612, 624, 636, 648, 651, 654, 663-667, 670, 673, 682-686, 701-707
chatter/core/langchain.py                         86     64    26%   33-48, 60-73, 82-112, 121-180, 189-215, 221-236, 243
chatter/core/langgraph.py                        303    257    15%   33-36, 72-108, 150-485, 494-511, 520-536, 542-557, 577-620, 638-673, 693-751, 764-765
chatter/core/model_registry.py                   318    174    45%   39-42, 77-144, 155-158, 174-190, 195-218, 253, 310, 327, 335-341, 356-364, 395-430, 435-446, 450-471, 480-516, 536-537, 541-542, 550-566, 574-583, 589-598, 604-609, 637-664, 671-689, 701-711, 715-719, 724-737, 749, 784-810, 816-825
chatter/core/monitoring.py                       546    281    49%   176-179, 208, 327-335, 348-361, 374-377, 391-395, 419-439, 451-474, 480-506, 530, 535-536, 540, 548-552, 556-569, 573-575, 598-627, 649-680, 691-735, 739-752, 758-777, 781, 785-794, 798-824, 840-843, 851-855, 872-876, 893-897, 910-918, 937-968, 1003-1025, 1030-1031, 1052-1053, 1090-1151, 1156-1186, 1191-1238, 1298-1306
chatter/core/multi_tier_cache.py                 151    116    23%   81-84, 88, 99-123, 136-158, 169-189, 197-212, 223-231, 243-248, 259-278, 291-303, 315-330, 342-348, 359-368, 376-393, 401-411, 431-451, 464
chatter/core/profiles.py                         223    194    13%   38-39, 56-139, 155-175, 189-261, 276-332, 348-383, 401-498, 520-618, 631-700, 705-707, 717-754
chatter/core/prompts.py                          225    149    34%   75-115, 119-121, 137-193, 207-270, 285-345, 359-388, 410, 434, 469-474, 526-532, 577-662, 675-749
chatter/core/security_adapter.py                  77     33    57%   42, 53-60, 64-66, 70-73, 184-209, 232-235, 254, 272-276, 294-300
chatter/core/security_compliance.py              188    188     0%   3-601
chatter/core/token_manager.py                    149     55    63%   32-67, 88-89, 107-109, 123, 130-131, 136-138, 152-153, 158-161, 177-178, 183-184, 193-194, 200-202, 215, 277-295, 307, 323-324, 335, 348-349, 362, 367-369, 385-387
chatter/core/unified_events.py                   139     16    88%   43-44, 78-80, 86, 107-108, 148-149, 227, 271-273, 530, 535
chatter/core/unified_model_registry_cache.py     132     67    49%   73-74, 86-87, 109-114, 166-167, 179-180, 191-192, 274-282, 308-316, 333-351, 359-360, 376, 384, 396, 404-420, 428-484, 492-493, 515-517
chatter/core/unified_template_manager.py         195    136    30%   179-190, 203-206, 214-240, 255-299, 315-343, 353-360, 375-384, 396-435, 458-489, 524-560, 572-583, 597-607, 619-631, 639, 647, 655
chatter/core/unified_workflow_cache.py           158     87    45%   134, 149-157, 191, 211-222, 240-241, 249, 261-280, 309-343, 352-400, 412-417, 425-439, 447-453, 461-464
chatter/core/validation/__init__.py               12      3    75%   36, 40, 44
chatter/core/validation/context.py                40      6    85%   50, 63-84
chatter/core/validation/engine.py                134     75    44%   31-32, 36, 77-78, 94, 98, 111, 115, 126-135, 143-152, 160-169, 177-186, 194-207, 217-230, 243-267, 271-283
chatter/core/validation/exceptions.py             38     12    68%   25-27, 67-69, 76-78, 81-82, 86
chatter/core/validation/validators.py            320    146    54%   31, 35, 145, 154-159, 165, 173, 196, 204, 263, 345-350, 366-369, 394, 401, 428, 441-443, 455-464, 468-483, 491-503, 511-519, 535-544, 548-566, 574-585, 593-609, 625-636, 640-652, 659-671, 678-700, 704-718
chatter/core/vector_store.py                     180    126    30%   11-24, 40-44, 65, 76, 87, 92, 99, 114, 121, 130, 140, 154-171, 175-190, 202-230, 242-252, 264-276, 282-286, 292-299, 313-370, 378-393, 401-413, 424-456, 462, 480-497, 503-504, 511
chatter/core/workflow_executors.py               329    221    33%   69, 81, 93, 108, 186-189, 200, 218-224, 239-315, 334-408, 435-489, 511, 522-596, 607-691, 699, 710-789, 800-889, 911, 919
chatter/core/workflow_limits.py                  128     32    75%   114-115, 143, 154, 162, 202-205, 209-219, 225-253, 273-275
chatter/core/workflow_performance.py             137    105    23%   67-81, 89-105, 126-129, 133, 137-142, 146-148, 152-158, 166-169, 175-223, 232-267, 273-311, 317-336
chatter/core/workflow_security.py                155    111    28%   45-51, 55-57, 68-81, 89-103, 115-119, 127-130, 146-156, 171-179, 193-197, 222-228, 232, 279-282, 303-316, 341-353, 377-433, 444-451, 472-486, 511-521, 532-579
chatter/main.py                                  252    167    34%   29-34, 45-159, 165-296, 326-336, 376-377, 440-449, 456-464, 471-483, 490-506, 619-657, 669-670, 678-687, 700-702
chatter/middleware/__init__.py                     0      0   100%
chatter/middleware/auth_security.py               82     52    37%   53-59, 77-99, 104-123, 132-145, 149-158, 163-173, 177, 198
chatter/middleware/security.py                    39     10    74%   73, 79, 81, 103-118
chatter/models/__init__.py                         9      0   100%
chatter/models/agent.py                            1      1     0%   4
chatter/models/analytics.py                      112      9    92%   14-18, 184, 292, 394, 495
chatter/models/base.py                            45      4    91%   53, 55, 57, 59
chatter/models/conversation.py                    76      6    92%   27, 176, 180, 341-346, 350
chatter/models/document.py                       113     24    79%   26, 204, 209-210, 215-222, 226, 365-370, 375, 388-395, 403-411, 419
chatter/models/profile.py                         83     21    75%   26-27, 231, 236, 240-261, 265
chatter/models/prompt.py                         153     56    63%   30, 277, 291-312, 341-343, 350-353, 367, 373-376, 380-429, 442-446, 450
chatter/models/registry.py                        82      3    96%   102, 194, 286
chatter/models/toolserver.py                     115      0   100%
chatter/models/user.py                            42      6    86%   19-22, 149, 153
chatter/schemas/__init__.py                       13      0   100%
chatter/schemas/ab_testing.py                     94      0   100%
chatter/schemas/agents.py                        190      0   100%
chatter/schemas/analytics.py                     192     22    89%   361-366, 371-381, 464-477, 483-488
chatter/schemas/auth.py                          116      8    93%   119, 217-233, 240-242
chatter/schemas/chat.py                          140      0   100%
chatter/schemas/common.py                         60      2    97%   88, 93
chatter/schemas/data_management.py               129      0   100%
chatter/schemas/document.py                      131      0   100%
chatter/schemas/events.py                        157     11    93%   346-361
chatter/schemas/health.py                         41      0   100%
chatter/schemas/jobs.py                          102      0   100%
chatter/schemas/model_registry.py                142      0   100%
chatter/schemas/plugins.py                       101      0   100%
chatter/schemas/profile.py                       227     56    75%   16, 146-152, 158-167, 173-181, 187-195, 201-209, 215-217, 223-225, 239-241, 479-483
chatter/schemas/prompt.py                        221     42    81%   122, 124, 132, 140-144, 148, 152-158, 161-167, 270-272, 276-277, 281-284, 288-293, 298-300, 304, 513-514
chatter/schemas/toolserver.py                    240      4    98%   83-84, 88, 97
chatter/schemas/utilities.py                      44      0   100%
chatter/services/__init__.py                      42     21    50%   6-7, 11-12, 16-17, 21-22, 29-31, 35-36, 40-41, 45-46, 50-51, 55-56
chatter/services/ab_testing.py                   535    400    25%   198-239, 276-330, 341-362, 373-384, 395-410, 430-477, 502-531, 542-545, 563-577, 591-599, 613-621, 632-666, 681-695, 713-754, 769-770, 778-981, 990-1026, 1050-1083, 1094-1198, 1202, 1208-1219, 1223-1254, 1258-1264, 1268-1269, 1275-1286, 1292-1325, 1350, 1395
chatter/services/chat.py                         117     83    29%   55-61, 71, 80-89, 98, 109, 117, 131-134, 145, 153, 174-281, 298-395, 408-419, 440, 453, 468-477, 483-506
chatter/services/conversation.py                 183    155    15%   40-41, 66-125, 146-160, 182-205, 231-306, 320-344, 364-389, 406-455, 470-515, 526-538, 552-563, 577-588, 602-616, 630-641, 655-662
chatter/services/data_management.py              302    263    13%   52-86, 92-123, 129-159, 163-181, 198-221, 244-248, 267-377, 381-431, 439-479, 489-529, 539-579, 593-664, 669-794, 799-823
chatter/services/document_processing.py          422    364    14%   24-25, 31-32, 59-63, 72-232, 238-287, 292-296, 299-302, 306-336, 339-348, 351-360, 365-374, 380-434, 442-452, 458-464, 468-474, 480-487, 493-500, 506-539, 545-553, 559-577, 583-627, 633-711, 717-746, 757-803, 807-859, 881-896, 910-923, 941-963, 977-994, 1014-1044
chatter/services/dynamic_vector_store.py         240    216    10%   40-49, 61-123, 136-193, 203-227, 244-319, 330-377, 388-438, 457-530, 534-605, 618-628, 632-641
chatter/services/embeddings.py                   237    188    21%   16, 25-27, 33-35, 41-42, 73-102, 106-131, 135-136, 143-144, 152-153, 158-161, 167-240, 247, 263-317, 325-336, 344-350, 363-376, 404-410, 427-477, 500-563, 569-584, 588-595
chatter/services/job_queue.py                    358    289    19%   97, 140-233, 248-284, 295-296, 307, 318-341, 361-380, 392-395, 407-411, 419-432, 449-462, 476-493, 497-507, 515-520, 526-535, 539-549, 555-646, 654-784, 795-851, 861-907, 925-946, 957-974, 988-1036, 1048-1051, 1060-1063, 1074-1079
chatter/services/llm.py                          294    255    13%   25-26, 51-52, 57-60, 66-106, 121-172, 183-191, 198, 217-320, 336-357, 382-474, 483-499, 522-571, 591-632, 640-646, 659-674, 700-701, 714-715, 729-787, 802-819, 849-866, 892-896, 918-926
chatter/services/mcp.py                          337    145    57%   141, 149, 152, 156-158, 162, 168-195, 201-246, 266-272, 316-322, 350-351, 366-367, 374, 390, 395, 400-403, 410-420, 454-480, 549-570, 575, 586, 595-613, 617-667, 678-682, 686-695, 699-717, 722-726, 735, 751-762, 767-769
chatter/services/message.py                      158    140    11%   27, 52-104, 138-200, 216-265, 288-334, 357-404, 421-498, 516-566
chatter/services/plugins.py                      541    422    22%   15-20, 62, 71, 80, 88, 158-159, 161-162, 164-165, 167-168, 172-174, 187, 203, 216, 225, 259-262, 281-377, 388-411, 422-508, 519-605, 621-636, 647, 660, 668-682, 696-718, 729-770, 781-825, 836-843, 854-861, 876-924, 936-951, 963-975, 992-1107, 1120-1136, 1144-1158, 1177-1178, 1182-1183, 1187, 1198, 1206-1207, 1211-1212, 1216, 1227, 1232, 1245-1260, 1277
chatter/services/scheduler.py                    123    123     0%   3-247
chatter/services/sse_events.py                   183    118    36%   19-21, 28-35, 39-61, 69-88, 92-93, 115-116, 122-134, 139-177, 183, 187-201, 224-233, 243-248, 256, 308-337, 343, 362, 376, 391, 409, 425, 443, 459, 475, 489, 506, 522, 537, 552
chatter/services/streaming.py                    183    110    40%   48, 179-236, 252-365, 387-422, 426, 439-448, 476-506, 514-529, 560-568, 588-608
chatter/services/tool_access.py                  251    216    14%   49, 68-117, 133-160, 171-181, 194-201, 222-245, 258-265, 283-323, 346-360, 368-378, 384-389, 393-396, 402-438, 447-472, 478-492, 496-501, 507-543, 558-580, 593-603, 609-693, 703-782
chatter/services/toolserver.py                   442    396    10%   57-60, 76-150, 163-172, 190-194, 212-232, 249-284, 295-329, 342-375, 386-410, 421-434, 445-472, 483-513, 528-533, 543-548, 591-612, 623-644, 664-732, 747-820, 845-924, 944-1086, 1097-1137, 1145-1218, 1227-1297, 1301-1340, 1348
chatter/services/workflow_execution.py            45     12    73%   124, 132, 160-171, 189-226
chatter/utils/__init__.py                          4      0   100%
chatter/utils/audit_logging.py                   114     45    61%   95, 106-125, 162-214, 238, 271, 306, 340, 365-369, 388-410, 429, 447, 465
chatter/utils/config_validator.py                 33     33     0%   3-65
chatter/utils/configurable_seeding.py            320    283    12%   40-41, 54-56, 60-101, 105-155, 159-208, 212-261, 265-315, 319-372, 376-395, 399-448, 452-498, 502-553, 557-598, 609-610
chatter/utils/correlation.py                      26     13    50%   23, 41, 63-81
chatter/utils/crypto.py                           72      3    96%   76-77, 138
chatter/utils/database.py                        225    169    25%   53-73, 102-176, 203-306, 315-339, 348-355, 362-367, 375-378, 382-384, 388-393, 397-399, 408-410, 414-420, 424, 431-445, 449-458, 471-473, 492-509, 530-536, 545-551
chatter/utils/database_optimization.py           213    180    15%   44-65, 83-93, 111-118, 136-143, 154-182, 193-224, 235-278, 289-317, 328-359, 373-403, 416, 435-474, 494-556, 572-602, 625-647, 667-668
chatter/utils/documentation.py                    77     39    49%   59-168, 173-254, 549-553
chatter/utils/error_recovery.py                  145    145     0%   3-309
chatter/utils/logging.py                          54     21    61%   22-25, 65, 75, 80, 84-86, 113-114, 125-126, 130, 134, 138, 142, 146, 150, 163-164
chatter/utils/performance.py                     144     97    33%   27, 50-82, 103-131, 145-164, 177-207, 241, 245, 257-271, 283, 299-312, 328-340, 354-371, 397, 443-455
chatter/utils/problem.py                         100     47    53%   53, 63-81, 87-88, 125, 160, 180-186, 231-244, 267, 287, 305, 323-327, 358-365, 389-404, 431-446
chatter/utils/prompt_audit.py                     35     12    66%   25-37, 54-64, 80-89, 136-146, 193-210
chatter/utils/response.py                         29     29     0%   3-106
chatter/utils/security_enhanced.py               278     59    79%   99-101, 139-141, 154, 189, 261-262, 279-280, 282, 288-289, 295-296, 302-303, 323, 357, 397, 422, 461, 473, 479-482, 491, 497-507, 517, 532, 554, 581-597, 602-603, 608, 635-638, 649-652, 656-659, 663-666
chatter/utils/seeding.py                         346    257    26%   57-60, 64-65, 108, 111-116, 137-154, 158-173, 177-193, 197-208, 212-215, 219-253, 257-310, 314-357, 362-373, 377-445, 449-548, 552-605, 609-713, 719, 724, 740-785, 803-859, 866-923, 933-934, 946-986
chatter/utils/template_security.py               107     33    69%   56-58, 98, 106-112, 141-149, 237, 277-278, 283-296, 302-307
chatter/utils/unified_rate_limiter.py            229    131    43%   83-93, 99-109, 135-138, 167, 178-192, 202-210, 309-320, 328-334, 340, 367-373, 385-390, 395-405, 410-425, 430-498, 540-588
chatter/utils/versioning.py                      118     56    53%   196-205, 218-247, 264-300, 309-318, 355-356, 375-386, 399, 410, 416
----------------------------------------------------------------------------
TOTAL                                          22802  13758    40%
Coverage HTML written to dir htmlcov
Coverage XML written to file coverage.xml
=========================== short test summary info ============================
SKIPPED [1] tests/e2e/test_auth_e2e.py:38: Registration workflow test skipped: assert 'id' in {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFNS0dQTVpGSjZLMkNIQjNLQTMwRCIsImVtYWlsIjoiYWxpY2VAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6ImFsaWNlIiwianRpIjoiNGNhNjIxZWYtYWVhNi00MTc0LWJkYWQtZGYxNjY5ZTIwZmVjIiwidHlwZSI6ImFjY2VzcyIsImlhdCI6MTc1NzEwMjYyNCwic2Vzc2lvbl9pZCI6Ijc0ZDQ0ZGJiLTk5ZmEtNDMzYS04OGFjLWUwZGE3ODExZDc0MiIsInBlcm1pc3Npb25zIjpbInJlYWQ6cHJvZmlsZSIsIndyaXRlOnByb2ZpbGUiXSwiZXhwIjoxNzU3MTA0NDI0fQ.06PKb5PT-8x9MrnN0XFcQbHWx49PzAgxGhIVp0cYASg', 'expires_in': 1800, 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwMUs0RFFNS0dQTVpGSjZLMkNIQjNLQTMwRCIsImp0aSI6IjRjYTYyMWVmLWFlYTYtNDE3NC1iZGFkLWRmMTY2OWUyMGZlYyIsInR5cGUiOiJyZWZyZXNoIiwiaWF0IjoxNzU3MTAyNjI0LCJzZXNzaW9uX2lkIjoiNzRkNDRkYmItOTlmYS00MzNhLTg4YWMtZTBkYTc4MTFkNzQyIiwiZXhwIjoxNzU3NzA3NDI0fQ.qiHyBtVmaH5jdYZxG2pU42eL-8RPWqyBJGRp4pRhepE', 'token_type': 'bearer', ...}
SKIPPED [1] tests/e2e/test_auth_e2e.py:70: Login workflow test skipped: Task <Task pending name='Task-23' coro=<TestAuthE2E.test_complete_login_workflow() running at /home/yam/chatter/tests/e2e/test_auth_e2e.py:56> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/e2e/test_auth_e2e.py:88: Profile endpoint not implemented yet
SKIPPED [1] tests/e2e/test_auth_e2e.py:139: Profile endpoint not implemented yet
SKIPPED [1] tests/e2e/test_chat_e2e.py:34: Chat creation endpoint not implemented yet
SKIPPED [1] tests/e2e/test_chat_e2e.py:104: Chat creation endpoint not implemented yet
SKIPPED [1] tests/e2e/test_chat_e2e.py:154: Chat creation endpoint not implemented yet
SKIPPED [1] tests/e2e/test_chat_e2e.py:196: Chat creation endpoint not implemented yet
SKIPPED [1] tests/e2e/test_chat_e2e.py:272: Chat creation endpoint not implemented yet
SKIPPED [1] tests/e2e/test_documents_e2e.py:70: Document upload workflow test skipped: Task <Task pending name='Task-158' coro=<TestDocumentsE2E.test_complete_document_upload_workflow() running at /home/yam/chatter/tests/e2e/test_documents_e2e.py:37> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/e2e/test_documents_e2e.py:141: Document list and search workflow test skipped: Task <Task pending name='Task-173' coro=<TestDocumentsE2E.test_document_list_and_search_workflow() running at /home/yam/chatter/tests/e2e/test_documents_e2e.py:99> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/e2e/test_documents_e2e.py:195: Document processing status workflow test skipped: Task <Task pending name='Task-188' coro=<TestDocumentsE2E.test_document_processing_status_workflow() running at /home/yam/chatter/tests/e2e/test_documents_e2e.py:160> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/e2e/test_documents_e2e.py:256: Document-chat integration workflow test skipped: Task <Task pending name='Task-203' coro=<TestDocumentsE2E.test_document_chat_integration_workflow() running at /home/yam/chatter/tests/e2e/test_documents_e2e.py:214> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/e2e/test_documents_e2e.py:300: Document deletion workflow test skipped: Task <Task pending name='Task-218' coro=<TestDocumentsE2E.test_document_deletion_workflow() running at /home/yam/chatter/tests/e2e/test_documents_e2e.py:275> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/e2e/test_documents_e2e.py:346: Large document upload workflow test skipped: Task <Task pending name='Task-233' coro=<TestDocumentsE2E.test_large_document_upload_workflow() running at /home/yam/chatter/tests/e2e/test_documents_e2e.py:323> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/test_auth_security_integration.py:313: Security monitor module not implemented
SKIPPED [1] tests/test_contract_testing.py:45: API response schema validation skipped: Task <Task pending name='Task-2493' coro=<TestContractTesting.test_api_response_schema_validation() running at /home/yam/chatter/tests/test_contract_testing.py:38> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/test_contract_testing.py:199: Backward compatibility test skipped: (sqlalchemy.dialects.postgresql.asyncpg.InterfaceError) <class 'asyncpg.exceptions._base.InterfaceError'>: cannot perform operation: another operation is in progress
[SQL: SELECT users.email, users.username, users.hashed_password, users.full_name, users.bio, users.avatar_url, users.phone_number, users.is_active, users.is_verified, users.is_superuser, users.api_key, users.api_key_name, users.default_llm_provider, users.default_profile_id, users.daily_message_limit, users.monthly_message_limit, users.max_file_size_mb, users.last_login_at, users.id, users.created_at, users.updated_at 
FROM users 
WHERE users.id = $1::VARCHAR]
[parameters: ('01K4DQTXD98V2EF3B546APE5CT',)]
(Background on this error at: https://sqlalche.me/e/20/rvf5)
SKIPPED [1] tests/test_contract_testing.py:483: Cannot get user profile for consistency testing
SKIPPED [1] tests/test_database_testing.py:60: Migration validation test skipped: Inspection on an AsyncEngine is currently not supported. Please obtain a connection then use ``conn.run_sync`` to pass a callable where it's possible to call ``inspect`` on the passed connection. (Background on this error at: https://sqlalche.me/e/20/xd3s)
SKIPPED [1] tests/test_database_testing.py:89: Connection pooling test skipped: This session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)
SKIPPED [1] tests/test_database_testing.py:194: Index performance test skipped: Inspection on an AsyncEngine is currently not supported. Please obtain a connection then use ``conn.run_sync`` to pass a callable where it's possible to call ``inspect`` on the passed connection. (Background on this error at: https://sqlalche.me/e/20/xd3s)
SKIPPED [1] tests/test_database_testing.py:248: Foreign key constraint test skipped: Inspection on an AsyncEngine is currently not supported. Please obtain a connection then use ``conn.run_sync`` to pass a callable where it's possible to call ``inspect`` on the passed connection. (Background on this error at: https://sqlalche.me/e/20/xd3s)
SKIPPED [1] tests/test_database_testing.py:288: Data integrity test skipped: Inspection on an AsyncEngine is currently not supported. Please obtain a connection then use ``conn.run_sync`` to pass a callable where it's possible to call ``inspect`` on the passed connection. (Background on this error at: https://sqlalche.me/e/20/xd3s)
SKIPPED [1] tests/test_database_testing.py:360: Bulk operation performance test skipped: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "bulk_test" does not exist
[SQL: SELECT COUNT(*) FROM bulk_test]
(Background on this error at: https://sqlalche.me/e/20/f405)
SKIPPED [1] tests/test_database_testing.py:510: Query performance test skipped: Inspection on an AsyncEngine is currently not supported. Please obtain a connection then use ``conn.run_sync`` to pass a callable where it's possible to call ``inspect`` on the passed connection. (Background on this error at: https://sqlalche.me/e/20/xd3s)
SKIPPED [1] tests/test_integration_workflows.py:112: Document-to-chat workflow test skipped: Task <Task pending name='Task-3901' coro=<TestIntegrationWorkflows.test_document_to_chat_workflow() running at /home/yam/chatter/tests/test_integration_workflows.py:34> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/test_integration_workflows.py:224: User-agent interaction workflow test skipped: Task <Task pending name='Task-3915' coro=<TestIntegrationWorkflows.test_user_agent_interaction_workflows() running at /home/yam/chatter/tests/test_integration_workflows.py:122> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/test_integration_workflows.py:341: Analytics integration workflow test skipped: Task <Task pending name='Task-3929' coro=<TestIntegrationWorkflows.test_analytics_across_multiple_services() running at /home/yam/chatter/tests/test_integration_workflows.py:244> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/test_integration_workflows.py:537: Cache service integration test skipped: Task <Task pending name='Task-3957' coro=<TestIntegrationWorkflows.test_cache_service_integration() running at /home/yam/chatter/tests/test_integration_workflows.py:450> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/test_integration_workflows.py:654: Error propagation and recovery test skipped: Task <Task pending name='Task-3971' coro=<TestIntegrationWorkflows.test_error_propagation_and_recovery() running at /home/yam/chatter/tests/test_integration_workflows.py:552> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/test_performance.py:69: Chat creation endpoint not implemented yet
SKIPPED [1] tests/test_performance.py:150: Document upload performance test skipped: Task <Task pending name='Task-5030' coro=<TestPerformance.test_document_upload_performance_validation() running at /home/yam/chatter/tests/test_performance.py:128> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/test_performance.py:234: Memory usage test skipped: Task <Task pending name='Task-5108' coro=<TestPerformance.test_memory_usage_and_leak_detection() running at /home/yam/chatter/tests/test_performance.py:216> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/test_performance.py:281: Database query performance test skipped: Task <Task pending name='Task-5122' coro=<TestPerformance.test_database_query_optimization() running at /home/yam/chatter/tests/test_performance.py:260> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/test_security_testing.py:66: SQL injection test skipped: Task <Task pending name='Task-5717' coro=<TestSecurityTesting.test_sql_injection_protection_validation() running at /home/yam/chatter/tests/test_security_testing.py:39> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/test_security_testing.py:228: Authorization test skipped: Authentication credentials required
SKIPPED [1] tests/test_security_testing.py:311: File upload security test skipped: Task <Task pending name='Task-5774' coro=<TestSecurityTesting.test_file_upload_security_malicious_detection() running at /home/yam/chatter/tests/test_security_testing.py:279> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/test_security_testing.py:373: Input validation test skipped: Task <Task pending name='Task-5788' coro=<TestSecurityTesting.test_input_validation_and_sanitization() running at /home/yam/chatter/tests/test_security_testing.py:338> cb=[_run_until_complete_cb() at /usr/lib64/python3.12/asyncio/base_events.py:181, WorkerThread.stop()]> got Future <Future pending cb=[BaseProtocol._on_waiter_completed()]> attached to a different loop
SKIPPED [1] tests/test_unified_validation.py:224: Backwards compatibility module not implemented in current version
SKIPPED [1] tests/test_unified_validation.py:230: Backwards compatibility module not implemented in current version
====== 348 failed, 409 passed, 41 skipped, 2 errors in 516.77s (0:08:36) =======
